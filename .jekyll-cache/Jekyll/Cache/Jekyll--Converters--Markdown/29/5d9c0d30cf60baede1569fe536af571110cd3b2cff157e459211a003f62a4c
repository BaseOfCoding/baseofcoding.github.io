I"('<p><img src="/assets/img/etc/java.jpg" alt="" /></p>

<p>안녕하세요. Nerd-Lee입니다.<br />
공부 내용은, 인프런 박매일님의
<code class="language-plaintext highlighter-rouge">[NarP Series]MVC 프레임워크는 내 손에[나프1탄]</code> 을 참고하였습니다.<br />
MVC 1단계인, Servlet 환경으로만 만들어보고, MVC 2단계로 넘어가고<br />
나중에는 Spring Framework를 사용하는 방식의 강의입니다.<br />
MVC 1단계는, Controller + Model 만을 사용하는 방식입니다.</p>

<hr />

<h3 id="1-한글처리-방법">1. 한글처리 방법</h3>

<ul>
  <li>영어와는 다르게 한글은 한글자당 2byte를 가지고 있다. 영어는 1byte다. (이건 알고 있는 내용이니깐..)<br />
이름에 한글을 입력하게 되면 다음과 같이 출력이 된다.<br />
<img src="/images/2022-04-15/01.PNG" alt="" /><br /><br /></li>
  <li>그럼 한글이 깨지지 않게 하는 방법을 한 번 알아보도록 하자.<br /></li>
  <li>방법은 간단하다. 클라이언트에서 온 데이터는 request를 통해 전달받기 때문에, request의 인코딩 방식을 <code class="language-plaintext highlighter-rouge">utf-8</code> 로 변경해주면 된다.</li>
  <li><code class="language-plaintext highlighter-rouge">request.setCharacterEncoding("utf-8");</code>를 추가해주자</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@WebServlet</span><span class="o">(</span><span class="s">"/memberInsert.do"</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MemberInsertController</span> <span class="kd">extends</span> <span class="nc">HttpServlet</span> <span class="o">{</span>
	<span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">long</span> <span class="n">serialVersionUID</span> <span class="o">=</span> <span class="mi">1L</span><span class="o">;</span>
       
	<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">service</span><span class="o">(</span><span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span> <span class="nc">HttpServletResponse</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ServletException</span><span class="o">,</span> <span class="nc">IOException</span> <span class="o">{</span>
		
		<span class="n">request</span><span class="o">.</span><span class="na">setCharacterEncoding</span><span class="o">(</span><span class="s">"utf-8"</span><span class="o">);</span>
		<span class="c1">// 1. 클라이언트에서 넘어온 파라미터 수집(VO에 하나의 정보로 묶어서 넣어주면 된다.)</span>
		<span class="nc">String</span> <span class="n">id</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"id"</span><span class="o">);</span>
		<span class="nc">String</span> <span class="n">password</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"password"</span><span class="o">);</span>
		<span class="nc">String</span> <span class="n">name</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"name"</span><span class="o">);</span>
		<span class="kt">int</span> <span class="n">age</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"age"</span><span class="o">));</span>
		<span class="nc">String</span> <span class="n">email</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"email"</span><span class="o">);</span>
		<span class="nc">String</span> <span class="n">phone</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">"phone"</span><span class="o">);</span>
		
		<span class="c1">// vo 수집은, 생성자로 해도 되고, Setter로 해도 된다.</span>
		<span class="c1">//MemberVO vo = new MemberVO(id, password, name, age, email, phone);</span>
		<span class="nc">MemberVO</span> <span class="n">vo</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MemberVO</span><span class="o">();</span>
		<span class="n">vo</span><span class="o">.</span><span class="na">setId</span><span class="o">(</span><span class="n">id</span><span class="o">);</span>
		<span class="n">vo</span><span class="o">.</span><span class="na">setPassword</span><span class="o">(</span><span class="n">password</span><span class="o">);</span>
		<span class="n">vo</span><span class="o">.</span><span class="na">setAge</span><span class="o">(</span><span class="n">age</span><span class="o">);</span>
		<span class="n">vo</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
		<span class="n">vo</span><span class="o">.</span><span class="na">setEmail</span><span class="o">(</span><span class="n">email</span><span class="o">);</span>
		<span class="n">vo</span><span class="o">.</span><span class="na">setPhone</span><span class="o">(</span><span class="n">phone</span><span class="o">);</span>
		
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">vo</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<hr />

<h3 id="2-데이터-베이스-연결">2. 데이터 베이스 연결</h3>

<ul>
  <li>데이터베이스를 연결하기 위해서는, URL과, user, password가 필요하다.<br /></li>
  <li>user와 password는 데이터베이스를 만들 때 생성한 이름과 암호를 변수에 넣어주면 되고<br />
주소는 다음과 같이 찾을 수 있다.<br /></li>
  <li><code class="language-plaintext highlighter-rouge">Data Source Explorer</code> - <code class="language-plaintext highlighter-rouge">SQL 데이터베이스 오른쪽 마우스 클릭</code> - <code class="language-plaintext highlighter-rouge">Properties</code> - <code class="language-plaintext highlighter-rouge">Driver Properties</code> 를 누르면, URL이 나온다.</li>
  <li>해당 URL을 복사해서, 변수에 저장한다.</li>
  <li>그리고, DB회사에서 제공해주는 driver를 다운받거나, 전자정부 프레임워크를 사용한다면<br />
<code class="language-plaintext highlighter-rouge">maven</code> - <code class="language-plaintext highlighter-rouge">repository</code> - <code class="language-plaintext highlighter-rouge">mysql</code> - <code class="language-plaintext highlighter-rouge">mysql-connector-java</code> - <code class="language-plaintext highlighter-rouge">원하는 버전</code> 에서<br />
<code class="language-plaintext highlighter-rouge">mysql-connector-java-version</code>을 <code class="language-plaintext highlighter-rouge">WEB-INF</code> - <code class="language-plaintext highlighter-rouge">lib</code> 폴더에 복사해주면 된다.</li>
  <li>그 다음, Driver를 로딩해줘야 한다. MySQL은 <code class="language-plaintext highlighter-rouge">com.mysql.jdbc.Driver</code> 이다.</li>
  <li><code class="language-plaintext highlighter-rouge">Class.forName("com.mysql.jdbc.Driver")</code> 을 try catch 문을 이용해, Driver 클래스를 찾고<br />
<code class="language-plaintext highlighter-rouge">DriverManager.getConnection(URL, user, password);</code> 를 해주면 되는데, getConnection은, 데이터베이스 연결정보들을 반환한다.<br />
그게 바로 Connection 클래스형태로 반환을 하기 때문에, conn이란 변수에 반환된 값을 대입하면 된다.</li>
</ul>

<hr />

<h3 id="3-데이터베이스-driver란">3. 데이터베이스 Driver란?</h3>

<ul>
  <li>대표적인 데이터베이스로, <code class="language-plaintext highlighter-rouge">MySQL</code>, <code class="language-plaintext highlighter-rouge">ORACLE</code>, <code class="language-plaintext highlighter-rouge">MS-SQL</code>이 있다.<br />
그런데 만약 이 회사들이 사용하는 API가 다르다면 어떻게 될까?<br />
<code class="language-plaintext highlighter-rouge">MySQL</code>로 만들어진 프로젝트에서 갑자기 <code class="language-plaintext highlighter-rouge">MS-SQL</code>로 바뀐다..? 그럼 하나하나 다시 전부 바꿔줘야하는가? 그건 아니다.<br />
그래서 각자 프로그램에서 제공하는 것이 Driver다.<br />
자바에서 제공하는 interface를 가지고, 각 DB 회사들은 자신들만의 클래스를 만든다.<br />
그럼 해당 회사들이 그 클래스들을 제공하도록 하는 것이 바로 <code class="language-plaintext highlighter-rouge">Driver</code>가 된다.<br />
그래서 자바 개발자들은, JDBC(java.sql)만 알면 되고, 각 회사에 맞는 <code class="language-plaintext highlighter-rouge">Driver</code>만 있으면 사용이 가능해진다.</li>
</ul>

<hr />

<ul>
  <li>연결이 되는 지 안되는 지는 다음 강의에서, insert 쿼리를 만들면서 확인을 해볼 것이다.</li>
</ul>

<hr />

<p><br /></p>

<div style="font-size:25px; text-align:center">
이 글이 도움이 되셨다면 댓글 부탁드립니다^^<br />
다음 글로 찾아오겠습니다!

</div>
:ET