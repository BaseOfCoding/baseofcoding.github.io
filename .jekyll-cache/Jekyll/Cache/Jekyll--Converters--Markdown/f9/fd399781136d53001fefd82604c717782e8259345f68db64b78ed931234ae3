I"<p><img src="/assets/img/etc/java.jpg" alt="" /></p>

<p>안녕하세요. Nerd-Lee입니다.<br />
공부 내용은, 인프런 박매일님의
<code class="language-plaintext highlighter-rouge">[NarP Series]MVC 프레임워크는 내 손에[나프1탄]</code> 을 참고하였습니다.</p>

<hr />

<h3 id="1-프로젝트-만들기">1. 프로젝트 만들기</h3>

<ul>
  <li>프로젝트는, Dynamic web project로 생성.</li>
</ul>

<hr />

<h3 id="2-servlet">2. Servlet</h3>

<ul>
  <li>보통 MVC란, Model, View, Controller를 나눠서 작업하는 디자인패턴을 얘기하지만<br />
<code class="language-plaintext highlighter-rouge">Servlet</code>은 Controller면서, View도 한꺼번에 하게 된다. 불편하지만 이것이 시초였다.</li>
  <li>기본을 알아야 jsp를 배우든, spring을 배우든 로직이 어떻게 돌아가는 지가 잘 보이고 쉽게 배울 수 있다.</li>
  <li>이 강의에서는 Model만 밖에 빼서 회원관리 프로그램을 만들게 된다. 왜냐하면 JAVA로 실행하기 때문이다.</li>
</ul>

<hr />

<h3 id="3-기본-디렉터리-구조-만들기">3. 기본 디렉터리 구조 만들기</h3>

<ul>
  <li><code class="language-plaintext highlighter-rouge">src</code> 폴더에, <code class="language-plaintext highlighter-rouge">controller</code>, <code class="language-plaintext highlighter-rouge">model</code>, <code class="language-plaintext highlighter-rouge">db</code> 패키지를 만든다.</li>
  <li><code class="language-plaintext highlighter-rouge">WebContent</code> 폴더에 <code class="language-plaintext highlighter-rouge">member</code> 폴더를 만든다.</li>
  <li><code class="language-plaintext highlighter-rouge">db</code> 패키지에, <code class="language-plaintext highlighter-rouge">member.sql</code> 파일을 만든다.</li>
</ul>

<hr />

<h3 id="4-membervo-만들기">4. MemberVO 만들기</h3>

<ul>
  <li>Member의 정보를 저장 할 클래스인, <code class="language-plaintext highlighter-rouge">MemberVO</code> 클래스를 만든다.</li>
  <li><code class="language-plaintext highlighter-rouge">model</code> 패키지에, <code class="language-plaintext highlighter-rouge">MemberVO</code> 클래스를 만들어준다.
```java
package model;</li>
</ul>

<p>// 회원(Object)
public class MemberVO {
	private int number;
	private String id;
	private String password;
	private String name;
	private int age;
	private String email;
	private String phone;</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
</pre></td><td class="rouge-code"><pre>public int getNumber() {
	return number;
}

public void setNumber(int number) {
	this.number = number;
}

public String getId() {
	return id;
}

public void setId(String id) {
	this.id = id;
}

public String getPassword() {
	return password;
}

public void setPassword(String password) {
	this.password = password;
}

public String getName() {
	return name;
}

public void setName(String name) {
	this.name = name;
}

public int getAge() {
	return age;
}

public void setAge(int age) {
	this.age = age;
}

public String getEmail() {
	return email;
}

public void setEmail(String email) {
	this.email = email;
}

public String getPhone() {
	return phone;
}

public void setPhone(String phone) {
	this.phone = phone;
}

@Override
public String toString() {
	return "MemberVO [number=" + number + ", id=" + id + ", password=" + password + ", name=" + name + ", age="
			+ age + ", email=" + email + ", phone=" + phone + "]";
} } ``` - member 데이터베이스에 맞는 자료형 변수와, getter, setter 메서드, 그리고, 테스트를 위한 toString 메서드까지 만들어준다. - 변수만 입력하고, `alt + shift + s`를 입력하면, getter,setter, tostring 메서드를 만들 수 있는 하위메뉴로 이동이 된다.
</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<p><br /></p>

<div style="font-size:25px; text-align:center">
이 글이 도움이 되셨다면 댓글 부탁드립니다^^<br />
다음 글로 찾아오겠습니다!

</div>
:ET