I"v<p><img src="/assets/img/etc/java.jpg" alt="" /></p>

<p>안녕하세요. Nerd-Lee입니다.<br />
공부 내용은, 인프런 박매일님의
<code class="language-plaintext highlighter-rouge">[NarP Series]MVC 프레임워크는 내 손에[나프1탄]</code> 을 참고하였습니다.<br />
MVC 1단계인, Servlet 환경으로만 만들어보고, MVC 2단계로 넘어가고<br />
나중에는 Spring Framework를 사용하는 방식의 강의입니다.<br />
MVC 1단계는, Controller + Model 만을 사용하는 방식입니다.</p>

<p>진도가 빠르게 나가지 않아, 중요하다고 생각하는 부분들만 작성할 예정입니다.</p>

<hr />

<h3 id="1-unique-key-만들기">1. unique key 만들기</h3>

<ul>
  <li>기존 회원테이블에 id를 unique key로 만들어서, 아이디가 중복이 될 경우 테이블에 추가를 못하게 만든다.</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
</pre></td><td class="rouge-code"><pre>
<span class="c1">-- 테이블 삭제하기</span>
<span class="k">drop</span> <span class="k">table</span> <span class="n">member</span><span class="p">;</span>

<span class="c1">-- 테이블 생성</span>
<span class="k">create</span> <span class="k">table</span> <span class="n">member</span><span class="p">(</span>
<span class="n">number</span> <span class="nb">int</span> <span class="k">primary</span> <span class="k">key</span> <span class="n">auto_increment</span><span class="p">,</span>
<span class="n">id</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span> <span class="k">not</span> <span class="k">null</span><span class="p">,</span>
<span class="n">password</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span> <span class="k">not</span> <span class="k">null</span><span class="p">,</span>
<span class="n">name</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">30</span><span class="p">)</span> <span class="k">not</span> <span class="k">null</span><span class="p">,</span>
<span class="n">age</span> <span class="nb">int</span> <span class="k">not</span> <span class="k">null</span><span class="p">,</span>
<span class="n">email</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">30</span><span class="p">)</span> <span class="k">not</span> <span class="k">null</span><span class="p">,</span>
<span class="n">phone</span> <span class="nb">varchar</span><span class="p">(</span><span class="mi">30</span><span class="p">)</span> <span class="k">not</span> <span class="k">null</span><span class="p">,</span>
<span class="k">unique</span> <span class="k">key</span><span class="p">(</span><span class="n">id</span><span class="p">)</span>
<span class="p">);</span>

</pre></td></tr></tbody></table></code></pre></div></div>

<hr />

<h3 id="2-memberlistcontroller-및-dao-메서드-구현하기">2. MemberListController 및 DAO 메서드 구현하기</h3>

<ul>
  <li>member 테이블에 저장되어 있는 데이터들을 가져와서 출력해주는 서블릿을 하나 만든다.</li>
  <li>이름은 <code class="language-plaintext highlighter-rouge">MemberListController</code> 다.</li>
  <li>MemberDAO에서 전체 회원리스트를 가져오는 메서드를 구현한다.</li>
  <li>이번 select 쿼리는 executeUpdate가 아닌 executeQuery 라는 메서드로, 실행을 시킨다.<br />
실행을 하면, 반환값은 ResultSet이기 때문에, 위에 만들어준 ResultSet 형 변수 rs로 대입시킨다.</li>
</ul>

<hr />

<p><br /></p>

<div style="font-size:25px; text-align:center">
이 글이 도움이 되셨다면 댓글 부탁드립니다^^<br />
다음 글로 찾아오겠습니다!

</div>
:ET