I"<p><img src="/assets/img/etc/javaspring.png" alt="" /></p>

<p>안녕하세요. Nerd-Lee입니다.<br />
공부 내용은, 인프런 박매일님의
<code class="language-plaintext highlighter-rouge">[NarP Series]MVC 프레임워크는 내 손에[나프1탄]</code> 을 참고하였습니다.</p>

<hr />

<h3 id="1-servlet이-뭐야">1. Servlet이 뭐야??</h3>

<ul>
  <li><code class="language-plaintext highlighter-rouge">Servlet</code>은 100% JAVA로 이루어져 있고, <code class="language-plaintext highlighter-rouge">Server</code> + <code class="language-plaintext highlighter-rouge">Let</code>가 결합된 단어라고 한다.</li>
</ul>

<hr />

<h3 id="2-파일을-만들어보자">2. 파일을 만들어보자.</h3>

<ul>
  <li><code class="language-plaintext highlighter-rouge">src / kr.web.controller(package) / HelloSevlet.java</code> 를 만들어보자.<br /></li>
  <li><code class="language-plaintext highlighter-rouge">HelloServlet.java</code> 파일을 서블릿 형태로 만들어야<br />
톰캣서버가 구동이 가능해지기 때문에 서블릿 형태로 만들어보자.<br /></li>
  <li><code class="language-plaintext highlighter-rouge">HttpServlet</code> 이란 클래스를 상속받자. <code class="language-plaintext highlighter-rouge">패키지명은 javax.servlet.http.HttpServlet</code> 이다.<br /></li>
  <li><code class="language-plaintext highlighter-rouge">Servlet</code> 에서, Main 함수와 같은 제일 먼저 실행되는 메서드가 필요한 데<br />
<code class="language-plaintext highlighter-rouge">alt + shift + s</code> 키를 눌러서, override/implements methods 라는 버튼을 클릭해서<br />
HttpServlet 클래스가 가진 메서드를 재정의 해야하는데<br />
<code class="language-plaintext highlighter-rouge">service(HttpServletRequest, HttpServletResponse)</code> 를 체크하고 OK 클릭!<br /></li>
  <li>이렇게 만들어진 것이, <code class="language-plaintext highlighter-rouge">Servlet</code>의 골격이다. 이 다음, jsp에서 만들었던 것 처럼<br />
1~10까지의 총합을 서블릿으로 만들어보면 된다. 밑에 코드처럼 추가해보자.<br />
    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="nc">MyUtil</span> <span class="n">my</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">MyUtil</span><span class="o">();</span>
<span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="n">my</span><span class="o">.</span><span class="na">sum</span><span class="o">();</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li>이제 해당 데이터를 클라이언트와 연결을 시켜서 요청을 받고 응답을 하면<br /><br />
해당 값을 보낼 수 있도록 만들어야 한다.<br /><br /></li>
  <li><code class="language-plaintext highlighter-rouge">PrintWriter out = res.getWriter();</code> 를 추가해주자.<br /><br />
<code class="language-plaintext highlighter-rouge">res.getWriter()</code> 는 요청한 클라이언트와 연결시키는 IO를 만들어내는 메서드이다.<br /><br />
<code class="language-plaintext highlighter-rouge">PrintWriter out</code> 변수는 getWriter로 받아온, 출력스트림을 받아온다.<br /><br />
그리고 <code class="language-plaintext highlighter-rouge">out</code> 변수가 요청한 클라이언트와 연결되어 있는 하나의 빨대 역할을 하는것이다.</li>
</ul>

<hr />

<p><br /></p>

<div style="font-size:25px; text-align:center">
이 글이 도움이 되셨다면 댓글 부탁드립니다^^<br />
다음 글로 찾아오겠습니다!

</div>
:ET