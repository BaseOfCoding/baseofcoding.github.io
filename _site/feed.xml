<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>코딩의 기초는 Nerd Lee</title>
    <description>코딩을 말하다</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 11 Apr 2022 14:25:46 +0900</pubDate>
    <lastBuildDate>Mon, 11 Apr 2022 14:25:46 +0900</lastBuildDate>
    <generator>Jekyll v4.2.2</generator>
    
      <item>
        <title>MySQL Table 만들기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-sql-파일-만들기&quot;&gt;1. sql 파일 만들기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;src 폴더 내에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;kr.web.db&lt;/code&gt;라는 패키지 파일을 만든다.&lt;/li&gt;
  &lt;li&gt;패키지 내에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;member.sql&lt;/code&gt; 파일을 만들어준다.&lt;/li&gt;
  &lt;li&gt;참고로, sql 파일은, Eclipse에서&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Data Source Explorer / Database Connections&lt;/code&gt; 에 데이터베이스가 연결이 되어 있어야 사용이 가능하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-mysql-실행하기&quot;&gt;2. MySQL 실행하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;cmd 또는 powershell로, 해당 db 폴더로 이동을 해서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;startup.bat or ./ startup&lt;/code&gt; 을 입력하자.&lt;/li&gt;
  &lt;li&gt;그럼 실행이 잘된다. 만약 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Do you already have another mysqld server running on port: 3306 ?&lt;/code&gt; 이런 에러가 발생한다면&lt;br /&gt;
&lt;a href=&quot;/error/0006&quot;&gt;에러 해결 방법&lt;/a&gt; 을 클릭해서, 해결해보자.&lt;/li&gt;
  &lt;li&gt;그리고, 이클립스에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Database Connections&lt;/code&gt; 에 있는 db를 더블클릭하면, 연결이 된다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;member.sql&lt;/code&gt; 로 넘어가서, Name에, 해당 DB를 연결해주고, 테이블도 연결해주면, 연결상태로 변경된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-회원-테이블-생성하기&quot;&gt;3. 회원 테이블 생성하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;member.sql&lt;/code&gt;에 회원 테이블을 생성하는 쿼리를 작성하자&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;primary&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auto_increment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;phone&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;쿼리 부분을 드래그해서, 오른쪽 마우스를 클릭&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Execute Selected Text&lt;/code&gt;를 클릭하면, 드래그 한 부분만 쿼리가 실행되고 테이블이 생성된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-회원-테이블에-값-추가하기&quot;&gt;4. 회원 테이블에 값 추가하기&lt;/h3&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;phone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id입력'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'비밀번호 입력'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'이름 입력'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;나이입력&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'이메일'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'전화번호 입력'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;쿼리 실행 후, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;select * from member;&lt;/code&gt; 쿼리 실행해서, 데이터가 잘 들어갔는 지 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;5-회원-테이블에-입력-된-값-수정하기&quot;&gt;5. 회원 테이블에 입력 된 값 수정하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;만약 나이를 수정하고 싶다면??&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;나이입력&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'입력되어 있는 아이디'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;6-테이블에-등록되어-있는-값-삭제하기&quot;&gt;6. 테이블에 등록되어 있는 값 삭제하기&lt;/h3&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'입력되어 있는 아이디'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Mon, 11 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/spring-boot/0011/</link>
        <guid isPermaLink="true">http://localhost:4000/spring-boot/0011/</guid>
        
        <category>MySQL</category>
        
        <category>eclipse</category>
        
        <category>jsp</category>
        
        <category>mvc</category>
        
        <category>spring</category>
        
        <category>spring boot</category>
        
        <category>스프링</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>Do you already have another mysqld server running on port: 3306 ? 에러 해결 방법</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/error.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;이 오류는, 3306이란 포트를 어떤 곳에서 사용하고 있다는 내용이다.&lt;br /&gt;
현재 공부중인 것은 MySQL을 사용하는데 MariaDB가 이미 설치가 되어 있는 상태에서&lt;br /&gt;
MySQL을 사용하려고 하니깐 생긴 에러다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;MariaDB를 삭제하면 쉽게 해결하지만, MariaDB를 삭제하지 않고 사용할 수 있는 방법이 있다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;일단, 윈도우 하단에 검색하는 곳에 서비스라고 입력을 하자. 그리고 MariaDB를 찾아서 일시중지 또는 중지를 시켜주면 완료된다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;에러 해결 끝!!&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!
&lt;/div&gt;
</description>
        <pubDate>Mon, 11 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/error/0006/</link>
        <guid isPermaLink="true">http://localhost:4000/error/0006/</guid>
        
        <category>Do you already have another mysqld server running on port 3306 ?</category>
        
        <category>error</category>
        
        <category>spring</category>
        
        <category>mySQL</category>
        
        <category>MySQL</category>
        
        <category>데이터베이스</category>
        
        
        <category>Error</category>
        
      </item>
    
      <item>
        <title>[부트스트랩4] 01. Containers(컨테이너)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/bootstrap.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;안녕하세요. ‘Nerd-Lee’ 입니다.&lt;br /&gt;
이번엔, 부트스트랩의 컨테이너에 대해서 알아보도록 하겠습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://www.w3schools.com/bootstrap4/bootstrap_containers.asp&quot;&gt;참고 페이지 W3 Schools 링크&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-container&quot;&gt;1. Container?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;부트스트랩에서, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Container&lt;/code&gt;는 내부 콘텐츠를 채우는 데 사용되고, 두가지로 나뉩니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.container&lt;/code&gt; 와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.container-fluid&lt;/code&gt;가 있고, 이 두 가지의 차이점은 다음 사진과 같습니다.&lt;br /&gt;
&lt;img src=&quot;/images/2022-04-11/001.PNG&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.container&lt;/code&gt; 는, 반응형 고정 너비 컨테이너를 제공하지만&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.container-fluid&lt;/code&gt; 는 전체 viewport의 넓이에 해당하는 컨테이너를 제공합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-contrainer의-반응형-크기&quot;&gt;2. .Contrainer의 반응형 크기&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt;Extra-small &amp;lt; 576px&lt;/th&gt;
      &lt;th&gt;Small &amp;gt;= 576px&lt;/th&gt;
      &lt;th&gt;Medium &amp;gt;= 768px&lt;/th&gt;
      &lt;th&gt;Large &amp;gt;= 992px&lt;/th&gt;
      &lt;th&gt;Extra-large &amp;gt;= 1200px&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;max-width&lt;/td&gt;
      &lt;td&gt;100%&lt;/td&gt;
      &lt;td&gt;540px&lt;/td&gt;
      &lt;td&gt;720px&lt;/td&gt;
      &lt;td&gt;960px&lt;/td&gt;
      &lt;td&gt;1140px&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;container&lt;/code&gt;는 반응형이다. 홈페이지의 크기에 따라&lt;br /&gt;
컨테이너의 최대 넓이가 알아서 설정이 되어 있는데&lt;br /&gt;
브라우저의 넓이가 1200px보다 크거나 같다면, 최대 넓이는 1140px로 고정되어 있고&lt;br /&gt;
브라우저의 넓이가 992px보다 크거나 같고, 1200px 보다 작으면, 960px&lt;br /&gt;
브라우저의 넓이가 768px보다 크거나 같고, 992px보다 작으면, 720px&lt;br /&gt;
브라우저의 넓이가 576px보다 크거나 같고, 768px보다 작으면, 540px&lt;br /&gt;
브라우저의 넓이가 576px보다 작으면, 100%의 넓이를 가지게 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;My First Bootstrap Page&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is some text.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;Codepen으로 Container가 어떻게 되어 있는 지 볼 수 있도록 예제를 넣어놨습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p data-height=&quot;300&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;vYprbqM&quot; data-default-tab=&quot;html,result&quot; data-user=&quot;nerd-lee&quot; class=&quot;codepen split-output&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/nerd-lee/pen/vYprbqM/&quot;&gt;hello&lt;/a&gt; by nerd-lee (&lt;a href=&quot;https://codepen.io/nerd-lee&quot;&gt;@nerd-lee&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-fluid-container&quot;&gt;3. Fluid Container&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;위에서도 설명했지만, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.container-fluid&lt;/code&gt; 는 항상 화면 전체 넓이를 가집니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container-fluid&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;My First Bootstrap Page&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is some text.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p data-height=&quot;300&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;LYeraYX&quot; data-default-tab=&quot;html,result&quot; data-user=&quot;nerd-lee&quot; class=&quot;codepen split-output&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/nerd-lee/pen/LYeraYX/&quot;&gt;hello&lt;/a&gt; by nerd-lee (&lt;a href=&quot;https://codepen.io/nerd-lee&quot;&gt;@nerd-lee&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;codepen에서, 1x가 아닌, 0.5x, 0.25x를 눌러보면, 전체 넓이를 차지하고 있는 것이 보일 것입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-responsive-containers--반응형-컨테이너-&quot;&gt;4. Responsive Containers ( 반응형 컨테이너 )&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;반응형 컨테이너는, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.container-&lt;/code&gt; 에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sm/md/lg/xl&lt;/code&gt;을 붙이는 형태로&lt;br /&gt;
해당 값에 따라서 브라우저의 넓이에 따라, px로 나눌 지 아니면, 100%로 보여줄 지가 나뉘게 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;class&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Extra-small &amp;lt; 576px&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Small &amp;gt;= 576px&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Medium &amp;gt;= 768px&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Large &amp;gt;= 992px&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Extra-large &amp;gt;= 1200px&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.container-sm&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;540px&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;720px&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;960px&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1140px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.container-md&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;720px&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;960px&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1140px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.container-lg&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;960px&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1140px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.container-xl&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1140px&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p data-height=&quot;300&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;dyJKrOE&quot; data-default-tab=&quot;html,result&quot; data-user=&quot;nerd-lee&quot; class=&quot;codepen split-output&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/nerd-lee/pen/dyJKrOE/&quot;&gt;hello&lt;/a&gt; by nerd-lee (&lt;a href=&quot;https://codepen.io/nerd-lee&quot;&gt;@nerd-lee&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Mon, 11 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/bootstrap/0001/</link>
        <guid isPermaLink="true">http://localhost:4000/bootstrap/0001/</guid>
        
        <category>부트스트랩</category>
        
        <category>BootStrap</category>
        
        <category>Container</category>
        
        <category>컨테이너</category>
        
        <category>css</category>
        
        <category>jquery</category>
        
        
        <category>BootStrap</category>
        
      </item>
    
      <item>
        <title>@WebServlet 사용하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-webservlet이란&quot;&gt;1. @WebServlet이란?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;web.xml에 계속 그럼 태그를 생성하고 매핑을 해줘야 하는가? 아니다.&lt;/li&gt;
  &lt;li&gt;JAVA에서는 @WebServlet이란, 어노테이션을 제공해서 해당 어노테이션안에&lt;br /&gt;
경로를 입력하면 클라이언트에서, 해당 경로를 입력할 때 알아서 톰캣서버가 찾아서 실행해주게 된다.&lt;/li&gt;
  &lt;li&gt;주의할 점으로는, web.xml 파일과 중복된 값이 있으면 충돌이 일어나기 때문에 한 곳에서만 사용해야 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;@WebServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/hs.do&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// &amp;lt;- 이 부분 중요.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloServlet&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpServlet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;MyUtil&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyUtil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		
		&lt;span class=&quot;c1&quot;&gt;// 요청한 클라이언트에게 응답하기&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;html&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;body&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;/body&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;/html&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Servlet은, MVC에서, Controller 역할을 하게 된다.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Sun, 10 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/spring-boot/0010/</link>
        <guid isPermaLink="true">http://localhost:4000/spring-boot/0010/</guid>
        
        <category>WebServlet</category>
        
        <category>어노테이션</category>
        
        <category>서블릿 어노테이션</category>
        
        <category>Annotation</category>
        
        <category>jsp</category>
        
        <category>mvc</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>Servlet 실행하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-servlet을-사용하기-위해서는-servlet-mapping-작업을-거쳐야한다&quot;&gt;1. Servlet을 사용하기 위해서는 servlet-mapping 작업을 거쳐야한다.&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;지금 만들어진대로 만약 경로를 지정한다면&lt;br /&gt;
`http://localhost:port/web/WEB-INF/classes/kr.web.controller.HelloServlet 이란 경로로&lt;br /&gt;
클라이언트가 접근을 해야되는 것인가? 어차피 하지도 못한다.&lt;br /&gt;
할 수 있더라도 보안성이 취약해지기 때문에 servlet-mapping 작업을 해서 간단한 경로로 만들어줘야 한다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;그럼 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;servlet-mapping&lt;/code&gt; 작업은 어디서 해야 할까? web.xml에 해야한다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;servlet-mapping&amp;gt;&lt;/code&gt; 태그를 추가하고, 그 안에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;url-pattern&amp;gt;&lt;/code&gt; 태그를 추가한 다음 그 태그 안에 /hs.do를 입력한다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;servlet&amp;gt;&lt;/code&gt; 태그를 추가하고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;servlet-class&amp;gt;&lt;/code&gt; 태그에, 패키지 네임.클래스 이름을 입력하자.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;servlet&amp;gt;&lt;/code&gt; 태그와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;servlet-mapping&amp;gt;&lt;/code&gt; 태그에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;servlet-name&amp;gt;&lt;/code&gt; 태그를 추가해서&lt;br /&gt;
서블릿 클래스와 매핑을 연결해줘야 한다. 보통 클래스 이름으로 맞춘다고 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;web-app&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;3.1&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;HelloServlet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-class&amp;gt;&lt;/span&gt;kr.web.controller.HelloServlet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-class&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-mapping&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;HelloServlet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;url-pattern&amp;gt;&lt;/span&gt;/hs.do&lt;span class=&quot;nt&quot;&gt;&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-mapping&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/web-app&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;톰캣 서버를 실행하고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost:포트번호/hs.do&lt;/code&gt; 를 입력하면&lt;br /&gt;
HelloServlet 클래스가 실행이 되면서 1~10까지의 합산 값이 출력된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Sun, 10 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/spring-boot/0009/</link>
        <guid isPermaLink="true">http://localhost:4000/spring-boot/0009/</guid>
        
        <category>서블릿</category>
        
        <category>서블릿 실행하기</category>
        
        <category>Spring</category>
        
        <category>JSP</category>
        
        <category>JAVA</category>
        
        <category>Servlet</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>Servlet(서블릿)이란??</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-servlet이-뭐야&quot;&gt;1. Servlet이 뭐야??&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Servlet&lt;/code&gt;은 100% JAVA로 이루어져 있고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Server&lt;/code&gt; + &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Let&lt;/code&gt;가 결합된 단어라고 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-파일을-만들어보자&quot;&gt;2. 파일을 만들어보자.&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src / kr.web.controller(package) / HelloSevlet.java&lt;/code&gt; 를 만들어보자.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HelloServlet.java&lt;/code&gt; 파일을 서블릿 형태로 만들어야&lt;br /&gt;
톰캣서버가 구동이 가능해지기 때문에 서블릿 형태로 만들어보자.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HttpServlet&lt;/code&gt; 이란 클래스를 상속받자. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;패키지명은 javax.servlet.http.HttpServlet&lt;/code&gt; 이다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Servlet&lt;/code&gt; 에서, Main 함수와 같은 제일 먼저 실행되는 메서드가 필요한 데&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;alt + shift + s&lt;/code&gt; 키를 눌러서, override/implements methods 라는 버튼을 클릭해서&lt;br /&gt;
HttpServlet 클래스가 가진 메서드를 재정의 해야하는데&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;service(HttpServletRequest, HttpServletResponse)&lt;/code&gt; 를 체크하고 OK 클릭!&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;이렇게 만들어진 것이, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Servlet&lt;/code&gt;의 골격이다. 이 다음, jsp에서 만들었던 것 처럼&lt;br /&gt;
1~10까지의 총합을 서블릿으로 만들어보면 된다. 밑에 코드처럼 추가해보자.&lt;br /&gt;
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nc&quot;&gt;MyUtil&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyUtil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;이제 해당 데이터를 클라이언트와 연결을 시켜서 요청을 받고 응답을 하면&lt;br /&gt;
해당 값을 보낼 수 있도록 만들어야 한다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PrintWriter out = res.getWriter();&lt;/code&gt; 를 추가해주자.&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;res.getWriter()&lt;/code&gt; 는 요청한 클라이언트와 연결시키는 IO를 만들어내는 메서드이다.&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PrintWriter out&lt;/code&gt; 변수는 getWriter로 받아온, 출력스트림을 받아온다.&lt;br /&gt;
그리고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;out&lt;/code&gt; 변수가 요청한 클라이언트와 연결되어 있는 하나의 빨대 역할을 하는것이다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;이제 HTML 코드를 하나 작성해서, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;out&lt;/code&gt; 변수에게 넘겨서, 클라이언트로 보내면 된다.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;kr.web.controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.IOException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.PrintWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.ServletException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.http.HttpServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.http.HttpServletRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.http.HttpServletResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;kr.web.util.MyUtil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// JavaEE -&amp;gt; Servlet&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloServlet&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpServlet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;MyUtil&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyUtil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		
		&lt;span class=&quot;c1&quot;&gt;// 요청한 클라이언트에게 응답하기&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;html&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;body&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;/body&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&amp;lt;html&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;최종 서블릿 예제 코드이다. 이제 서블릿에 대해서 보니깐, 현재 내가 회사에서 보고 있는 프로젝트가….ㅠㅠ&lt;br /&gt;
어떻게 진행되고 있었던건지를 깨닫게 된다. 서블릿도 있고, jsp도 있고..난장판인데&lt;br /&gt;
이걸 리팩토링하자니 아직 실력이 부족하고 물론 천천히 진행해도 상관은 없으나 막상 서블릿과 jsp의 차이를 알게되니..&lt;br /&gt;
코드를 처음보면서도 이걸 왜 이렇게 만들었지? 라는 생각을 늘 품고 있었는데.. 에효.. 하나로 통일이 된게 아니였구나..를 깨닫게 된다.&lt;br /&gt;
하하하하.. 나중에 리팩토링 하자. jsp로 깔끔하게ㅠㅠ&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;일단 오늘은 토요일이라 하루 쉴려고 했으나..&lt;br /&gt;
그래도 공부 하나 정도는 듣고 자는 게 좋을 것 같다는 생각에 글을 작성해본다.&lt;br /&gt;
내일은 더 많은 공부를 할 예정이다. 일단 영어도 시작했으니깐&lt;br /&gt;
영어부터 공부를 해보고 프로그래밍 공부를 시작하자..ㅠㅠ 화이팅!&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Sat, 09 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/spring-boot/0008/</link>
        <guid isPermaLink="true">http://localhost:4000/spring-boot/0008/</guid>
        
        <category>스프링부트</category>
        
        <category>박매일</category>
        
        <category>JSP</category>
        
        <category>서블릿</category>
        
        <category>Servlet</category>
        
        <category>Java</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>JSP에서 비즈니스 로직 분리 공부</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-jsp만의-독특한-태그&quot;&gt;1. jsp만의 독특한 태그&lt;/h3&gt;

&lt;h4 id=&quot;11---지시자--&quot;&gt;1.1 - 지시자 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;%@ %&amp;gt;&lt;/code&gt;&lt;/h4&gt;

&lt;div class=&quot;language-jsp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;%@page &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;import=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;java.util.Date&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;%@ page &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;java&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt; contentType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;
	pageEncoding=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;%@ %&amp;gt;&lt;/code&gt; 태그를 jsp에선 지시자라고 부른다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;12---스크립트릿--&quot;&gt;1.2 - 스크립트릿 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;% %&amp;gt;&lt;/code&gt;&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;lt;%
	Date d = new Date();
%&amp;gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; 태그를 jsp에서 스크립트릿 이라고 부른다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;13---출력식--&quot;&gt;1.3 - 출력식 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt;&lt;/h4&gt;

&lt;div class=&quot;language-jsp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;지금 몇시야? &lt;span class=&quot;nt&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;%&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt; 태그를 jsp에서 출력식이라고 부른다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-view--jsp-&quot;&gt;2. VIEW ( jsp )&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프리젠테이션 로직이라고도 하고, 클라이언트가 서버에 요청을 할 때, 응답을 하면서 보내주는 것이 jsp (view) 다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;MVC 패턴이라고 불리는 것 중 V에 해당한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-비즈니스-로직-생성해보기&quot;&gt;3. 비즈니스 로직 생성해보기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;webapp에 sum.jsp 파일을 만들어보자.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;예--110까지의-총합을-구해서-출력해보자&quot;&gt;예 ) 1~10까지의 총합을 구해서 출력해보자.&lt;/h5&gt;
&lt;div class=&quot;language-jsp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;%@ page &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;java&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt; contentType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;
	pageEncoding=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;%&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 비즈니스 로직&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 프리젠테이션 로직 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Insert title here&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;table&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;border=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;1~10까지의 총합&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;%&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;util 패키지를 만들고, MyUtil 이란 클래스를 생성하자.
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src / kr.web.util (package) / MyUtil.java&lt;/code&gt; 생성&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;kr.web.util&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyUtil&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;그런데, 이렇게 하고 톰캣 서버를 구동을 하면, 오류가 뜰 것이다.&lt;br /&gt;
왜냐하면 &lt;a href=&quot;/spring-boot/0003/&quot;&gt;첫 번째 공부 정리 내역&lt;/a&gt;을 보면&lt;br /&gt;
web에서 자바를 사용하기 위해서는, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webapp / WEB-INF / classes&lt;/code&gt; 폴더에&lt;br /&gt;
.class들이 생성된다고 정리가 되어있다. 그래서, bin이 아닌 classes로 설정을 해줘야 한다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;프로젝트 오른쪽 마우스 클릭 -&amp;gt; Build Path -&amp;gt; Configure Build Path 클릭&lt;/li&gt;
  &lt;li&gt;Source -&amp;gt; Default output folder Browse 클릭&lt;/li&gt;
  &lt;li&gt;webapp / WEB-INF / classes 폴더 선택 후, Apply and Close 클릭
&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;이렇게 하면 오류없이 잘 작동이 되는 것을 확인할 수 있다.&lt;br /&gt;
이렇게 해서 비즈니스 로직이 어떤것인지 알아봤고, 나눠서 구현해보았다.&lt;br /&gt;
퇴근 후 공부 끝!&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Fri, 08 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/spring-boot/0007/</link>
        <guid isPermaLink="true">http://localhost:4000/spring-boot/0007/</guid>
        
        <category>스프링부트</category>
        
        <category>박매일</category>
        
        <category>JSP</category>
        
        <category>비즈니스 로직</category>
        
        <category>비즈니스</category>
        
        <category>스프링 비즈니스</category>
        
        <category>MVC 비즈니스</category>
        
        <category>MVC business</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>STS (Spring Tool Suite) 단축키 정리 끝판왕 ( + 추가중 )</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
프로그래머들은 귀찮은 걸 굉장히 싫어합니다. 그래서 단축키 몇 개 정도만 알아도 마우스에 손을 가져 갈 일이 없어지는데요.&lt;br /&gt;
이번 글은 STS &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(Spring Tool Suite)&lt;/code&gt; 단축키에 대한 내용을 정리해봤습니다.&lt;br /&gt;
단축키에 대한 내용들은 생각날 때 마다 추가 할 예정입니다.&lt;br /&gt;
Window 환경에서 작업중이기 때문에, Window 환경에 맞는 단축키가 적혀있는 점 양해 부탁드립니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-검색-ctrl--f&quot;&gt;1. 검색 (Ctrl + F)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + F&lt;/code&gt; 를 눌러서, 해당 파일에 있는 단어를 한 번에 고치거나 찾을 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-전체-검색-ctrl--h&quot;&gt;2. 전체 검색 (Ctrl + H)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + H&lt;/code&gt; 키를 눌러서, 프로젝트 내에 있는 모든 폴더들을 탐색할 수 있습니다.&lt;br /&gt;
만약 새로 입사를 해서 진행되어 있는 프로젝트의 파일을 살펴보다가&lt;br /&gt;
이 부분은 어디에 있을까? 라고 고민 된다면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + H&lt;/code&gt; 키를 잊지마세요!&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-저장--ctrl--s-&quot;&gt;3. 저장 ( Ctrl + S )&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;프로그래밍 초보 분들은, 코드를 작성할 때 마다, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + S&lt;/code&gt;를 누르는 습관을 가집시다!&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-자동-정렬--ctrl--shift--f-&quot;&gt;4. 자동 정렬 ( Ctrl + Shift + F )&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;코드를 자동으로 정렬시켜주는 단축키입니다. 하지만, 개인적으로는 맘에 들지는 않습니다.&lt;br /&gt;
가독성이 더 떨어지게 정렬을 해주는 듯한?&lt;br /&gt;
그래서 정말 필요할 때 빼고는 보기 편하게 그냥 알아서 작성하는 게 편합니다.&lt;br /&gt;
그래도 없는 것 보단 좋습니다^^&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;5-import-java--ctrl--shift--o-&quot;&gt;5. import java ( Ctrl + Shift + O )&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;java 파일 작성 중 import가 추가되지 않은 클래스를 사용 할 경우&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + Shift + O&lt;/code&gt;를 누르면, 패키지를 import 할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;6-주석-생성--ctrl--shift---&quot;&gt;6. 주석 생성 ( Ctrl + Shift + / )&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;주석을 생성해야 할 때 유용한 단축키입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;7-생성한-주석-풀기--ctrl--shift---&quot;&gt;7. 생성한 주석 풀기 ( Ctrl + Shift + \ )&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;생성한 주석을 풀 때, 사용되는 단축키입니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt; 이거랑 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\&lt;/code&gt; 이걸 헷갈리지 마시고 사용하셔야 합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;8-현재-마우스-커서가-있는-코드-또는-블록으로-지정되어-있는-부분-주석-생성-or-주석-풀기--ctrl--shift--c-&quot;&gt;8. 현재 마우스 커서가 있는 코드 또는 블록으로 지정되어 있는 부분&lt;br /&gt; 주석 생성 or 주석 풀기 ( Ctrl + Shift + C )&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + /&lt;/code&gt; 이것도 물론 사용은 가능하지만, 자바 한정이다.&lt;br /&gt;
js나 jsp 파일에서는 동작이 되질 않기 때문에&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + Shift + C&lt;/code&gt; 키를 사용하는 것이 좋다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Thu, 07 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/spring-boot/0006/</link>
        <guid isPermaLink="true">http://localhost:4000/spring-boot/0006/</guid>
        
        <category>sts</category>
        
        <category>이클립스</category>
        
        <category>Eclipse</category>
        
        <category>spring boot</category>
        
        <category>spring</category>
        
        <category>jsp</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>JSP 만들어서 동적인 페이지로 구동하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-정적-페이지--동적-페이지-&quot;&gt;1. 정적 페이지 ? 동적 페이지 ?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;정적 페이지가 어떤 것이고, 동적 페이지가 어떤 것이냐
1분마다 시간을 물어본다고 예를 들어보도록 하자.&lt;br /&gt;
그런데, 정적인 페이지는 시간이 변경이 되질 않는다.&lt;br /&gt;
하지만 동적인 페이지는 2시 50분이면, 2시 50분이라고 출력이 되고 1분 뒤에는 2시 51분이 출력되게 된다.&lt;br /&gt;
가장 큰 차이점은, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;프로그래밍&lt;/code&gt;을 할 수 있느냐 없느냐라는 것이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-홈페이지-파일의-역할&quot;&gt;2. 홈페이지 파일의 역할&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;HTML
    &lt;ul&gt;
      &lt;li&gt;뼈대를 나타내는 파일이며, 홈페이지의 쌩얼이라고 생각하자.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CSS
    &lt;ul&gt;
      &lt;li&gt;Casting Style Sheet의 약자로, 꾸미기 위한 파일이며, 홈페이지의 색조 화장품이라고 생각하자.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Javascript
    &lt;ul&gt;
      &lt;li&gt;동작 기능을 만들 수 있는 파일이며, 예를 들어서, 홈페이지에서 버튼을 클릭하면 밥을 먹는다. 와 같이 사람으로 표현하자면 행동이라고 생각하자.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;HTML + CSS + Javascript = Front-end&lt;/li&gt;
  &lt;li&gt;Backend
    &lt;ul&gt;
      &lt;li&gt;Java, PHP, C# 등의 언어로 만들 수 있는 서버를 뜻하고 UI에 입력을 받아 DB에 데이터들을 처리하는 역할을 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-jsp&quot;&gt;3. JSP&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;webapp 폴더에, time.jsp 라는 파일을 하나 만들어주자.&lt;/li&gt;
  &lt;li&gt;jsp를 사용하기 위해서는, java용 api 뿐만 아니라, Web용 api가 필요하다.&lt;/li&gt;
  &lt;li&gt;Web용 api는, 톰캣 서버에서 제공을 해주는데, 톰캣 서버가 설치되어 있는 경로로 이동한 다음 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib&lt;/code&gt; 폴더로 들어가자.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib&lt;/code&gt; 폴더에 있는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;servlet-api.jar&lt;/code&gt; 파일을 복사한 다음, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WEB-INF / lib&lt;/code&gt; 폴더에 붙여넣기 해주자.&lt;/li&gt;
  &lt;li&gt;해당 프로젝트는 수동으로 만들었기 때문에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;servlet-api.jar&lt;/code&gt; 파일을 연결해줘야 한다.&lt;/li&gt;
  &lt;li&gt;연결 방법은 다음과 같다.
    &lt;ul&gt;
      &lt;li&gt;해당 프로젝트를 오른쪽 마우스 클릭&lt;/li&gt;
      &lt;li&gt;Build Path -&amp;gt; Configure Build Path 클릭&lt;/li&gt;
      &lt;li&gt;Libraries 메뉴로 이동&lt;/li&gt;
      &lt;li&gt;Add External JARs 클릭 후, 톰캣 경로에 있던 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;servlet-api.jar&lt;/code&gt; 더블클릭해서 연결&lt;/li&gt;
      &lt;li&gt;Apply 클릭하면, jsp에 &amp;lt;%@ %&amp;gt; 이 부분의 에러가 없어진다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-jsp-페이지에-java-사용해서-시간-넣기&quot;&gt;4. JSP 페이지에 JAVA 사용해서, 시간 넣기&lt;/h3&gt;

&lt;div class=&quot;language-jsp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;%@ page &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;java&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt; contentType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;
	pageEncoding=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Insert title here&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Nerd-Lee의 홈페이지 방문을 환영합니다.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;지금 몇시야? 2시 50분!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 코드는 기본으로 만든 jsp 템플릿이다.&lt;br /&gt;
이제 java로 프로그래밍을 해서 현재 시간을 구해서, 2시 50분이 아닌 현재 시간을 넣어주면 끝난다.&lt;/p&gt;

&lt;p&gt;java로 프로그래밍을 할 때엔 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; 태그 안에서 하고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;% %&amp;gt;&lt;/code&gt;에서 얻은 데이터 값을 출력할 때엔&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt;로 받아오면 된다. 코드를 한 번 보도록 하자.&lt;/p&gt;

&lt;div class=&quot;language-jsp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;%@page &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;import=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;java.util.Date&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;%@ page &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;java&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt; contentType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;
	pageEncoding=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;%&lt;/span&gt;
	&lt;span class=&quot;nc&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Insert title here&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Nerd-Lee의 홈페이지 방문을 환영합니다.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;지금 몇시야? &lt;span class=&quot;nt&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;%&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;위의 코드로 jsp를 만들어서 톰캣 서버를 실행해서, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost:port/time.jsp&lt;/code&gt; 로 하면&lt;br /&gt;
새로고침을 할 때마다 시간이 바뀐 것을 확인할 수 있다. 이러한 것을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;동적인 페이지&lt;/code&gt;라고 하는 것이다.&lt;/li&gt;
  &lt;li&gt;Tomcat server가 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; 와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt;를 해석한 것이라고 볼 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Thu, 07 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/spring-boot/0005/</link>
        <guid isPermaLink="true">http://localhost:4000/spring-boot/0005/</guid>
        
        <category>jsp</category>
        
        <category>동적 페이지</category>
        
        <category>정적 페이지</category>
        
        <category>html</category>
        
        <category>spring-boot</category>
        
        <category>공부</category>
        
        <category>study 공부</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>스프링 JSON parse error: Cannot deserialize instance of `int` out of START_OBJECT token; nested exception</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/error.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;입사한 지, 6일차.. 스프링으로 회사 코드 내에 테스트 게시판을 만들어서 진행하고 있다.&lt;br /&gt;
현재 삭제기능을 만들고 있는데….ㅠㅠ&lt;br /&gt;
왠지 모르겠으나, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@DeleteMapping&lt;/code&gt; 어노테이션으로 하는데… 왜 405 error가 뜨는거냐!!&lt;br /&gt;
그래서, POST 방식으로 method를 변경하고, delete!!!&lt;br /&gt;
근데 밑에와 같은 에러를 뱉는다..&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;JSON parse error: Cannot deserialize instance of &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;int&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; out of START_OBJECT token&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; nested exception is 
com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;int&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; out of START_OBJECT token
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;그래서, error는 error고, JSON, id, int 어쩌구 저쩌구 써져있는 거 보니&lt;br /&gt;
id쪽에 문제가 있구나를 파악하고, 브라우저 개발자도구 network에 delete할 때 들어오는 데이터를 봤다.&lt;br /&gt;
음.. 역시나 문제가 있었구나. 이 놈의 자바스크립트..ㅠㅠ&lt;br /&gt;
스프링이랑 Typescript를 어떻게 사용할 방법이 없는 지를 알아봐야겠다.&lt;br /&gt;
자바스크립트 보다는, 타입스크립트로만 배웠던 난 타입스크립트가 편하다..&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그래서, 받아온 id 데이터를 parseInt 함수를 사용해서, id 데이터로 변경했다.
그랬더니 위와 같은 에러는 뜨지 않았지만, 되질 않는다. mybatis 쪽에서 뭔가 잘못 입력을 한것 같다..ㅠㅠ
다시 에러를 고치러 가야겠다.. 에효ㅎㅎ&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!
&lt;/div&gt;
</description>
        <pubDate>Thu, 07 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/error/0005/</link>
        <guid isPermaLink="true">http://localhost:4000/error/0005/</guid>
        
        <category>Spring</category>
        
        <category>JSON parse error:Cannot deserialize instance of `int` out of START_OBJECT token; nested exception</category>
        
        <category>JSON</category>
        
        <category>parse</category>
        
        <category>error</category>
        
        <category>Cannot</category>
        
        <category>deserialize</category>
        
        <category>instance</category>
        
        <category>of</category>
        
        <category>START_OBJECT</category>
        
        <category>nested</category>
        
        <category>exception</category>
        
        
        <category>Error</category>
        
      </item>
    
      <item>
        <title>Context 등록 후 index.html 요청하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;C#으로 유니티엔진을 사용하고, 프론트엔드 개발자가 되겠다고
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt; 와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;typescript&lt;/code&gt; , &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;next.js&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node.js&lt;/code&gt; 를 공부하던 내가
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Spring&lt;/code&gt; 을 할 줄은 생각을 못했다. 
하지만 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Spring&lt;/code&gt;을 배울 수 있는 좋은 기회라고 생각했으나..
막상 입사를 하고 코드를 보다보니 비슷하지만 다른 느낌이 있다.
MVC 패턴에 대한 이해도도 부족하고 말이다.
JPA를 배우기에는 기본기가 없으니 기본기를 배우자..
특히 회사 실무에 필요한 내용들을 배우자 생각했고
퇴근하고 공부하면서 보는 강의가 위에 적혀있는 강의이다.
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jsp, mybatis, mysql, jquery, bootstrap&lt;/code&gt; 등 부족한 게 많은 나에게 기본기를 배울 수 있는 좋은 강의라고 생각한다.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;일단, 기본 디렉터리 구조를 만들었다면 webapp 폴더에 index.html 파일을 만들어준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Insert title here&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Nerd-Lee의 홈페이지 방문을 환영합니다.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 작성했다고 끝이 아니다. Tomcat 서버와 연결을 해줘야 하는데
Servers 폴더에 있는 server.xml 에서, 150번째 줄에 있는&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Valve&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.apache.catalina.valves.AccessLogValve&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;directory=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;logs&quot;&lt;/span&gt; 
       &lt;span class=&quot;na&quot;&gt;pattern=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%h %l %u %t &amp;amp;quot;%r&amp;amp;quot; %s %b&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;prefix=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;localhost_access_log&quot;&lt;/span&gt; 
       &lt;span class=&quot;na&quot;&gt;suffix=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.txt&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;이 태그 밑에, Context 태그를 추가해줘야 한다.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Context&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;docBase=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${webapp의 경로}&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;webapp의 경로는, webapp을 오른쪽 마우스 클릭한 다음, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;properties&lt;/code&gt; 를 클릭하면, webapp의 경로가 나오는 데, 그걸 docBase에 붙여넣어주면 끝이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그리고 tomcat 서버를 실행하고, localhost:포트번호를 입력하면&lt;/p&gt;

&lt;p&gt;Nerd-Lee의 홈페이지 방문을 환영합니다. 라는 문구가 출력되는 것을 확인할 수 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;path&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;path는, 기본 경로를 설정하는데, 만약 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;path=&quot;/web&quot;&lt;/code&gt; 이라고 했다면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost:포트/web&lt;/code&gt; 이라고 해야 index.html 파일이 열릴 것이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;docBase&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;docBase는, 기본 document를 뜻하고, webapp 폴더가 기본이 되기 때문에, webapp의 경로를 넣어줘야 한다. path로 들어오면, webapp 폴더로 가서, 그 안에 html이나 jsp 파일이 있는 지를 확인하고, 있다면 해당 파일을 렌더링해주는 방식이라고 생각하면 될 것 같다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이 강의를 보면서 생각해보니, 배포를 할 때 server.xml을 변경해서 동작하게 하나? 라는 생각을 하게 된다. 기본기가 조금씩 늘어나는 기분이 든다. 아주 좋군!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Wed, 06 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/spring-boot/0004/</link>
        <guid isPermaLink="true">http://localhost:4000/spring-boot/0004/</guid>
        
        <category>context</category>
        
        <category>index.html</category>
        
        <category>tomcat context</category>
        
        <category>tomcat</category>
        
        <category>톰캣 서버</category>
        
        <category>톰캣 서버 컨텍스트 등록</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>Web Application 디렉터리 구조 공부</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;WAS ( Web Application Server ) 가 알 수 있는 구조는 다음과 같이 만들 수 있다.&lt;/p&gt;

&lt;p&gt;이클립스 환경에서, Java Project를 생성한다.
Web이라는 프로젝트를 만든다.
프로젝트를 만들면, src라는 폴더와 bin 폴더가 생긴다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Web Application 기본 디렉터리 구조&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt; 프로젝트 폴더 이름 ( root project folder )
 -- src
 -- webapp
 	-- WEB-INF
       -- lib
       -- classes 
       -- web.xml
 -- bin
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;1-web&quot;&gt;1. WEB&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;이 프로젝트 이름이 꼭 WEB이 아니여도 되지만, 그냥 최상위 프로젝트 폴더를 뜻한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-src--bin&quot;&gt;2. src / bin&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Java Project로 만들면 기본으로 생성이 되는 폴더들이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-webapp&quot;&gt;3. webapp&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Web Application을 만들 때, 기본으로 가지고 있어야 하는 상위 구조 폴더이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;4-web-inf&quot;&gt;4. WEB-INF&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;WEB-INF 폴더는, webapp 폴더의 하위 폴더로 웹 브라우저에서 직접 접근할 수 없고 웹 컨테이너 ( 톰캣 서버 ) 가 대신 접근하고 결과물만을 웹 브라우저에게 전달할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;5-lib&quot;&gt;5. lib&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;WEB-INF 폴더의 하위 폴더로 api ( .jar ) 를 가지고 있는 폴더이다. 그리고 lib 폴더는 꼭 없어도 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;6-classes&quot;&gt;6. classes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;WEB-INF 폴더의 하위 폴더로 자바 환경에서는 bin 폴더에 .class 파일들이 생성이 되지만, 웹 환경으로 변경이 되면, classes 폴더에 .class 파일들이 생성이 되게 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;7-webxml&quot;&gt;7. web.xml&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;WEB-INF 폴더에 있어야하는 파일이자, 배치 서술자 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(deploy Descritor)&lt;/code&gt; 라고 불린다. 클래스들이 어느 폴더에 위치해 있는 지를 서술해주는 파일이다. 약자로는 DD 파일이라고도 불린다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Wed, 06 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/spring-boot/0003/</link>
        <guid isPermaLink="true">http://localhost:4000/spring-boot/0003/</guid>
        
        <category>웹 애플리케이션</category>
        
        <category>jsp</category>
        
        <category>mysql</category>
        
        <category>공부</category>
        
        <category>디렉토리</category>
        
        <category>열심히 하자</category>
        
        <category>web application</category>
        
        <category>프로그래밍 공부</category>
        
        <category>directory</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>회사 첫 출근 - 구조 파악하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다. 첫 웹 개발 실무를 위해 현재 회사에 입사해서 프로젝트를 보면서&lt;br /&gt;
Spring MVC 패턴에 대한 내용들과, mybatis에 관련되서 궁금했던 내용들을 정리해봤습니다.&lt;br /&gt;
도움이 되신 분들이 있으셨으면 좋겠네요ㅠㅠ&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-mvc-패턴이란&quot;&gt;1. MVC 패턴이란?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;디자인 패턴 중 하나로써, Model, View, Controller의 약자이며 하나의 애플리케이션 또는 프로젝트를 구성할 때 그 구성요소를 세가지의 역할로 구분한 패턴.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;사용자가 컨트롤러를 조작하면 컨트롤러는 모델을 통해서 데이터를 가져오고, 가져온 데이트를 바탕으로 시각적인 표현을 담당하는 View를 제어해서 사용자에게 전달한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;간단하게 표현하자면 User -&amp;gt; Controller -&amp;gt; Model -&amp;gt; Controller -&amp;gt; View -&amp;gt; User&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Model이란?
    &lt;ul&gt;
      &lt;li&gt;애플리케이션의 정보, 데이터를 나타낸다. 데이터베이스, 정의하는 상수, 초기화값, 변수 등을 뜻한다. 또한 이러한 데이터를 가지고 가공을 책임지는 컴포넌트.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;View란?
    &lt;ul&gt;
      &lt;li&gt;사용자 인터페이스 요소를 나타낸다. Model에서 가공해준 데이터를 바탕으로 사용자들에게 보여주거나, 사용자가 입력한 내용을 바탕을, Controller에게 넘겨주는 역할을 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Controller란?
    &lt;ul&gt;
      &lt;li&gt;데이터와 사용자 인터페이스 요소들을 잇는 다리역할을 한다. 즉, 사용자가 데이터를 클릭하고 수정하는 것에 대한 이벤트들을 처리하는 부분.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-daodata-access-object란&quot;&gt;2. DAO(Data Access Object)란?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DAO는 DB를 사용해 데이터를 조회하거나 조작하는 기능을 전담하도록 만든 오브젝트를 말한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-dtodata-transfer-object란&quot;&gt;3. DTO(Data Transfer Object)란?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DTO는, VO(Value Object)로 바꿔 말할수도 있다. 하지만, DTO와 VO의 가장 큰 차이점은, VO는 read only 즉 읽기 전용으로만 사용이 가능하다. 계층간의 데이터 교환을 위한 오브젝트로
대표적으로는, 폼데이터빈, 데이터베이스 테이블빈 등이 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-그럼-bean은-또-무엇인가&quot;&gt;4. 그럼 Bean은 또 무엇인가?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Spring IOC 컨테이너가 관리하는 자바 객체를 Bean이라고 부른다. 하지만, 스프링에서 Bean은 new 키워드를 이용해서 객체를 생성하는 것이 아닌 Spring에 의해 관리당하는 자바 객체를 Bean이라고 부른다고 한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Spring Bean을 등록하는 방법에 대한 2가지&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;ComponentScan 어노테이션을 활용하기
            &lt;ul&gt;
              &lt;li&gt;ComponentScan이란, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@Component&lt;/code&gt; 어노테이션 및 streotype 어노테이션 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(@Service, @Repository, @Controller)&lt;/code&gt; 등 어노테이션이 부여된 Class들을 자동으로 Scan하여 Bean으로 등록해준다.
 &lt;br /&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;Bean 설정파일에 직접 빈 등록하기
            &lt;ul&gt;
              &lt;li&gt;직접 Bean을 등록하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@configuraton&lt;/code&gt; 및 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@Bean&lt;/code&gt; 어노테이션을 사용하면 된다.&lt;/li&gt;
              &lt;li&gt;라이브러리 혹은 내장 클래스 등의 개발자가 직접 제어 불가능한 클래스의 경우 직접 Bean을 등록해서 사용하면 된다고 한다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;5-mybatis&quot;&gt;5. Mybatis&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Mybatis란?
    &lt;ul&gt;
      &lt;li&gt;Mybatis는 자바의 관계형 데이터베이스 프로그래밍을 좀 더 쉽게 할 수 있도록 도와주는 개발 framework로써, JDBC를 통해 데이터베이스에 엑세스하는 작업을 캡슐화하고, 프로그램에 있는 SQL쿼리들을 한 구성파일에 구성해 프로그램 코드와 SQL을 분리할 수 있는 장점을 가지고 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;특징
    &lt;ul&gt;
      &lt;li&gt;복잡한 쿼리나 다이나믹한 쿼리에 강하지만, 비슷한 쿼리는 남발하게 되는 단점이 존재한다고 하며, 프로그램 코드와 SQL 쿼리의 분리로 인해 코드의 간결성 및 유지보수성이 향상된다고 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;6-mybatis-sql-include-property-태그&quot;&gt;6. Mybatis &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;sql&amp;gt;&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;include&amp;gt;&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;property&amp;gt;&lt;/code&gt; 태그&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;sql&amp;gt;&lt;/code&gt; 은 반복적으로 사용하는 쿼리를 재사용하기 위한 SQL 조각입니다.&lt;/li&gt;
  &lt;li&gt;id 속성값이 필수이며, 사용하려는 태그보다 먼저 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;sql&amp;gt;&lt;/code&gt; 태그가 선언되어 있어야 합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;sql&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	from ${testQuery}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/sql&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;위와 같은 sql 태그가 있다면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;include&amp;gt;&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;property&amp;gt;&lt;/code&gt; 태그는 다음과 같이 사용이 가능하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;include&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;refid=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  	&lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testQuery&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/include&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;test라는 id를 가지고 있는, sql 태그를 찾아서, 해당 쿼리를 사용하게 되고 property 태그는, 만약 sql 태그에 ${값} 이 있다면 사용을 한다. 위 코드를 해석하면 다음과 같다.
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;from hello&lt;/code&gt; 물론 이 자체로는 의미없는 쿼리가 되지만, 만약 from, where 절을 여러번 사용할 경우가 생긴다면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;sql&amp;gt;&lt;/code&gt; 태그에 자주 사용하는 쿼리를 만들어서 넣어놓으면 가독성이 좋아질 것이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;7-mybatis-각-태그-사용법&quot;&gt;7. Mybatis 각 태그 사용법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;각 절에 맞는 태그들이 있다. 대표적으로는&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;insert&amp;gt;&lt;/code&gt;,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;select&amp;gt;&lt;/code&gt;,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;update&amp;gt;&lt;/code&gt;,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;delete&amp;gt;&lt;/code&gt; 가 있는데, 아직 테스트 해보지는 못했지만 가독성을 위한 태그로 보여진다. 각 태그에 맞는 쿼리를 만들어서 사용하면 될 것 같다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;각 태그에는 id와 resultType과 같은 속성이 있는데 id는, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;mapper&amp;gt;&lt;/code&gt; 태그의 namespace 속성에 있는 java 클래스의 메서드를 참조하거나 아니면 해당 id를 가지고 쿼리를 실행할 수 있는 것 같다. 방법이 여러가지라 사용하기 나름이라고 생각이 들고, resultType은 return되는 자료형을 뜻하는 것 같다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;또한 메서드를 참조할 경우, 해당 메서드에 매개변수가 있다면 매개변수를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#{매개변수 이름}&lt;/code&gt; 으로 사용할 수도 있다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;8-postconstruct란&quot;&gt;8. @PostConstruct란?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@PostConstruct&lt;/code&gt; 어노테이션은, 의존성 주입이 이루어진 후 초기화를 수행하는 메서드라고 하며, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@PostConstruct&lt;/code&gt;가 붙은 메서드는 클래스가 service를 수행하기 전에 발생. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@PostConstruct&lt;/code&gt; 가 붙은 메서드는 초기화를 수행하는 메서드라면, 반대로 종료 작업을 수행하는 메서드에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@PreDestroy&lt;/code&gt; 를 사용한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;장점은, 생성자가 호출 될 때, bean은 초기화가 되지 않지만, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@PostConstruct&lt;/code&gt; 를 사용한 생성자는 bean이 초기화 됨에 따라 동시에 의존성을 확인할 수 있고, bean lifecycle에서 오직 한 번만 수행되기 때문에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@PostConstruct&lt;/code&gt;를 사용하면 여러 번 초기화되는 것을 방지할 수 있다고 한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;유일한 단점으로는, 외부 라이브러리에 적용하지 못한다는 것이고, 외부 라이브러리 초기화 및 종료를 하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@Bean&lt;/code&gt;의 initMethod / destroyMethod를 사용해야 한다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;9-spring-security-form-login-구조&quot;&gt;9. Spring Security Form Login 구조&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;사용자가 Server에 특정 URL을 요청했을 때 해당 URL이 인증이 필요할 경우 Server는 로그인 페이지를 return하게 됩니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;사용자가 id와 password를 입력하고 로그인 버튼을 클릭하면, 해당 데이터가 서버에 전송된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;서버는 해당 로그인 정보를 확인하고 해당 유저 정보가 존재한다면 Session과 Token을 생성하고 저장한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;WebSecurityConfig 클래스를 만들면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WebSecurityConfigurerAdapter&lt;/code&gt; 클래스를 상속 받아야하는데, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WebSecurityConfigurerAdapter&lt;/code&gt; 클래스는, 스프링에서 제공하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;security&lt;/code&gt; 라는 라이브러리를 가지고 있어야 한다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpSecurity&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;formLogin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    	&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;loginPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/login.html&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 사용자 정의, 로그인 페이지&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;defaultSuccessUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/home&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 로그인을 성공하면 이동 할 페이지 경로&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;failureUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/login.html?error=true&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// 로그인 실패 후 이동 할 페이지 경로&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;usernameParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// id input 태그의 name 속성 값&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;passwordParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// password input 태그의 name 속성 값&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;loginProcessingUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/login&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// 로그인 Form Action url 경로&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;successHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loginSuccessHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 로그인 성공 시 핸들러 호출&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;failureHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;failureHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// 로그인 실패 시 핸들러 호출&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;permitAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;							&lt;span class=&quot;c1&quot;&gt;// 인증을 받지 않아도 누구나 접근 가능하게 하는 함수&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Wed, 06 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/spring-boot/0002/</link>
        <guid isPermaLink="true">http://localhost:4000/spring-boot/0002/</guid>
        
        <category>회사 첫 출근</category>
        
        <category>mybatis</category>
        
        <category>jsp</category>
        
        <category>spring</category>
        
        <category>구조 파악</category>
        
        <category>웹개발 처음</category>
        
        <category>입사</category>
        
        <category>회사</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>실전! 스프링 부트와 JPA 활용 1 - 프로젝트 환경설정까지 듣고 난 뒤 정리</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
이 내용은 우아한형제들의 개발 팀장이신 김영한 님의&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;김영한의 스프링 부트와 JPA 실무 완전 정복 로드맵&amp;gt;&lt;/code&gt;을 참고해서 공부한 내용을 바탕으로 글이 작성되었습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-프로젝트-생성&quot;&gt;1. 프로젝트 생성&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://start.spring.io&quot;&gt;spring boot start page&lt;/a&gt; 가기&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;스프링 부트는 스프링 프로젝트를 쉽게 만들 수 있게 한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;maven과 gradle을 선택할 수 있는데, 요즘은 gradle로 많이 넘어가는 추세.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;언어는 자신이 사용 할 언어를 추가하면 된다. 듣고 있는 강의는 Java를 사용하기 때문에,  Java 선택&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;버전은 안정화 된 버전을 사용하는 것이 좋은데, Snapshot / M1,M2가 붙어있지 않은 버전이 안정화 된 버전이라고 생각하면 된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Project Metadata는 그룹과 아티팩트를 입력해줘야 하는데, 회사 프로젝트를 진행한다면 회사에서 정해주는 대로 입력을 하면 되지만, 포트폴리오나 개인 연습용 프로젝트라면, 그냥 입력하고 싶은대로 입력해도 상관없다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Dependencies는, 의존성이란 뜻을 가지고 있고 어떠한 라이브러리를 의존해서 사용할 것인가라는 의미를 가지고 있다. 사용을 할 라이브러리를 추가해서 프로젝트를 만들면 된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;해당 강의에서는 Spring Web, Thymeleaf, Spring Data JPA, H2 Database, Lombok을 사용
    &lt;ul&gt;
      &lt;li&gt;Spring web : Restful API나 MVC 방식을 쉽게 사용할 수 있게 한다.&lt;/li&gt;
      &lt;li&gt;Thymeleaf : 템플릿 엔진으로써, SSR ( 서버 사이드 렌더링 ) 을 할 수 있게 한다.&lt;/li&gt;
      &lt;li&gt;Spring Data JPA : query를 쉽게 날려줄 수 있는 라이브러리&lt;/li&gt;
      &lt;li&gt;H2 database : 교육용이나 테스트용으로 쉽게 사용할 수 있는 데이터베이스 라이브러리&lt;/li&gt;
      &lt;li&gt;Lombok : 지루하게 반복되는 코드를 자동으로 제너레이션 해주는 라이브러리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;GENERATE 버튼을 눌러서 다운로드를 받고 압축을 풀어준 다음 intellij로 프로젝트를 열어주면 gradle에 dependencies에 추가되어 있는 라이브러리를 설치하는 작업을 진행하게 된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Lombok을 사용하기 위해서는, intellij에서, annotation processors에서 Enable annotation processing을 클릭해야 한다. 그리고 해당 강의에서는 Lombok 플러그인을 설치했지만, intellij 2020.3 이후 버전은, lombok이 설치되어 있는 상태이기 때문에 설치하지 않아도 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-라이브러리-살펴보기&quot;&gt;2. 라이브러리 살펴보기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;라이브러리 의존성을 살펴보는 방법은 2가지가 있다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;터미널 사용
        &lt;ul&gt;
          &lt;li&gt;터미널에서, 스프링 프로젝트 경로로 이동&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/.gradlew dependencies&lt;/code&gt; 입력하면 의존성을 살펴볼 수 있다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;intellij 에서 보기
        &lt;ul&gt;
          &lt;li&gt;인텔리 J에 오른쪽을 보면, gradle 메뉴가 있다.&lt;/li&gt;
          &lt;li&gt;해당 메뉴에 dependencies 폴더를 보면, runtime / test / compile 등의 환경에 따라 실행이 되는 라이브러리들을 볼 수 있다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-view-환경-설정&quot;&gt;3. View 환경 설정&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;thymeleaf 라는 템플릿 엔진을 이용해서, View를 만들어 준다. &lt;a href=&quot;https://www.thymeleaf.org&quot;&gt;thymeleaf 홈페이지&lt;/a&gt;에 들어가면 thymeleaf에 대한 내용들을 자세히 볼 수 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;thymeleaf의 장﹒단점
    &lt;ul&gt;
      &lt;li&gt;장점
        &lt;ul&gt;
          &lt;li&gt;내추럴 템플릿을 사용한다. 다른 템플릿 엔진은, if else문을 사용하는 듯 하다. 하지만, thymeleaf는 html의 마크업을 깨지 않고 사용하기 때문에, 가독성이 좋다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;단점
        &lt;ul&gt;
          &lt;li&gt;현재 spring boot에서 프로젝트를 생성하는 경우는 해당이 되지 않지만, 3.0 이하 버전에서는, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;br&amp;gt;&lt;/code&gt; 태그를 사용 할 경우, 오류가 생긴다. 보통 html 템플릿에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;br&amp;gt;&lt;/code&gt; 만 사용해도, 알아서 한 칸 띄워주는데, thymeleaf는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&lt;/code&gt; 이렇게 사용해야 오류가 안생긴다고 한다. 그리고 메뉴얼을 잘 살펴봐야된다는 것도 단점이라고 강의에서는 말을 하셨다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Spring을 잘 모르겠다면, &lt;a href=&quot;https://spring.io&quot;&gt;홈페이지&lt;/a&gt;에 들어가서 guides를 살펴보는 것을 권장한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;기본구조 코드
    &lt;ul&gt;
      &lt;li&gt;기본 구조를 알아보는 코드이기에, 강의에는 피해가 가지 않을 것이라고 판단하여 코드를 작성함.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HelloController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;jpabook.jpashop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.stereotype.Controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.ui.Model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.web.bind.annotation.GetMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Controller&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    
	&lt;span class=&quot;nd&quot;&gt;@GetMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Model&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addAttribute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hello!!!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Model이란 무엇인가?
    &lt;ul&gt;
      &lt;li&gt;Model은, spring.ui에서 제공하는 것인데 모델에 데이터를 실어서 뷰에 넘겨줄 수 있게 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;data라는 키값에, “hello!!!” 라는 값을 추가해서, model이 가지고 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;return은 뭐야??
    &lt;ul&gt;
      &lt;li&gt;hello라는 이름을 가진 html에 파일에 해당 값들을 넘기겠다는 뜻과 같다. 템플릿 엔진에서 작동하는 html 파일은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resources / templeates&lt;/code&gt; 폴더에 있어야 한다.
 즉 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resources / templeates / hello.html&lt;/code&gt; 파일에 data 라는 값이 있다면, “hello!!!” 로 대체하겠다 라는 것과 같다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;[hello.html]

&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE HTML&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:th=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.thymeleaf.org&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Hello&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;th:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;'안녕하세요.' + ${data} &quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;안녕하세요. 손님&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;th:text는 뭐야?
    &lt;ul&gt;
      &lt;li&gt;템플릿 엔진으로 서버 사이드 렌더링을 진행하면 값이 안녕하세요. 손님이 아니라, 안녕하세요. hello!!! 가 출력이 되게 된다. ${} 안에 있는 값이 model에서 key값이다.
 thymeleaf에서 key에 맞는 value를 받아와서 변환해준다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;정적인 페이지 또한 만들 수 있다. resources / static 폴더에 html 파일을 만들면 정적인 페이지를 만들 수는 있지만, 정적 페이지는 javascript는 사용하지 못한다는 점이 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;node.js에서 nodemon 처럼은 아니지만, 저장을 하고 다시 run을 하지 않아도 페이지를 새로 수정할 수 있는 방법이 있다.
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;build.gradle 파일에서 dependencies 부분에, implementation을 추가하자.
 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;implementation 'org.springframework.boot:spring-boot-devtools'&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;추가를 했다면, 서버를 다시 실행해주고, html 파일을 변경하고 브라우저를 새로고침 해보자. 바뀌지 않는다. 하지만 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build -&amp;gt; recomplie &quot;hello.html&lt;/code&gt; 을 클릭하면 바뀐다.
 저장만 해도 바뀌는 건 있는 지 없는 지 한 번 찾아봐야겠다.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-h2-database&quot;&gt;4. H2 DATABASE&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;H2 데이터베이스는 개발이나 테스트 용도로 가볍고 편한 DB, 웹 화면을 제공한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;주의점은 h2 database 라이브러리와 같은 버전을 사용해야 한다는 점이다. &lt;a href=&quot;https://www.h2database.com/html/main.html&quot;&gt;홈페이지 링크&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다운로드를 받았다면 Mac OS는 압축을 풀고 폴더를 보면 bin 폴더가 있다. bin 폴더의 경로를 터미널에 맞춰놓고, ls를 입력하면 h2.bat, h2.sh와 같은 파일이 있는데, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ cat h2.sh&lt;/code&gt;를 입력한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그리고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./h2.sh&lt;/code&gt; 입력을 한다. 하지만 난 오류가 났다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zsh: permission denied: ./h2.sh&lt;/code&gt; 라는 오류가 떴는데, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chmode 755 h2.sh&lt;/code&gt; 를 입력하고, 다시 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./h2.sh&lt;/code&gt; 를 입력하면 브라우저에 H2 콘솔이 뜨게 된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그리고 JDBC_URL에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jdbc:h2:~/jpashop&lt;/code&gt;으로 입력하고 연결을 누르면 db 파일이 생성이 된다. 그리고 연결을 끊고, 터미널 상에 home에 가서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ls -arith&lt;/code&gt;를 입력하면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jpashop.mv.db&lt;/code&gt; 파일이 있는 것을 볼 수 있다. 이 파일이 있다면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jdbc:h2:tcp://localhost/~/jpashop&lt;/code&gt; 이 경로로 접근이 가능하다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;주의할 점은, ./h2.sh를 실행시킨 상태여야만 db 파일을 받을 수 있다는 점 명심하자!&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;5-jpa와-db-설정-동작확인&quot;&gt;5. JPA와 DB 설정, 동작확인&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;이 부분은 내가 스프링에 대해서 지식이 없이 실습으로 하는 것이기 때문에 잘 모르겠다…ㅠㅠ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;앞으로 강의듣고 난 이후의 블로그는 어려운 내용이나 에러 해결방법들만 적을 예정이다. 코드를 적으면 강의에 피해가 가기 때문이다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;

</description>
        <pubDate>Wed, 06 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/spring-boot/0001/</link>
        <guid isPermaLink="true">http://localhost:4000/spring-boot/0001/</guid>
        
        <category>JPA</category>
        
        <category>jpa</category>
        
        <category>Java</category>
        
        <category>Spring</category>
        
        <category>자바</category>
        
        <category>스프링</category>
        
        <category>자바 스프링</category>
        
        <category>자바 스프링 jpa</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>iTerm2 설치 및 테마 적용하기</title>
        <description>&lt;p&gt;안녕하세요. Nerd Lee 입니다.&lt;/p&gt;

&lt;p&gt;Mac OS에서, 터미널보단 개발자분들은 iTerm2를 많이들 사용하시더라구요.
저도 iTerm2를 사용한 지는 얼마 되진 않았는데 그래도 테마 적용을 하면 깔끔하니 보기가 좋았습니다.
그래서 설치법과 테마적용하는 방법들을 한 번 공유해보기 위해 글을 작성했습니다.&lt;/p&gt;

&lt;h3 id=&quot;1-설치하기&quot;&gt;1. 설치하기&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://iterm2.com/downloads.html&quot;&gt;iTerm2 다운로드 페이지 링크&lt;/a&gt; 에 가셔서, Stable Releases 버전을 다운로드 받으시면 됩니다.
그리고 압축을 풀고, iTerm2를 더블클릭해서 실행하면, 애플리케이션 폴더로 이동을 시킬건지 물어봅니다. Application Folder 인가? 그 버튼 클릭하면, 옮겨집니다ㅎㅎ&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-oh-my-zsh-다운로드하기&quot;&gt;2. oh my zsh 다운로드하기&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;iTerm2에 입력해서 다운로드하시면 됩니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-iterm2-테마-적용하기&quot;&gt;3. iTerm2 테마 적용하기&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;vi ~/.zshrc
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;입력하면, 아래와 같은 글들이 막 보일 것입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;# If you come from bash you might have &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;change&lt;/span&gt; your $PATH&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
# &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; PATH&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;$HOME&lt;span class=&quot;sr&quot;&gt;/bin:/&lt;/span&gt;usr&lt;span class=&quot;sr&quot;&gt;/local/&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;$PATH

# Path &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; your oh&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;my&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;zsh installation&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; ZSH&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$HOME/.oh-my-zsh&quot;&lt;/span&gt;

# Set name of the theme &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; load &lt;span class=&quot;p&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;random&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; it will
# load &lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; random theme each time oh&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;my&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;zsh &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; loaded&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; which case&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
# &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; know which specific one was loaded&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; run&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; echo $RANDOM_THEME
# See https&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;github&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ohmyzsh/&lt;/span&gt;ohmyzsh&lt;span class=&quot;sr&quot;&gt;/wiki/&lt;/span&gt;Themes
ZSH_THEME&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;robyrussell&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;-&lt;/span&gt; 이 부분을 변경해야 함&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;

# Set &lt;span class=&quot;k&quot;&gt;list&lt;/span&gt; of themes &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; pick from when loading at random
# Setting this variable when ZSH_THEME&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;random will cause zsh &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; load
# &lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; theme from this variable instead of looking &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; $ZSH&lt;span class=&quot;sr&quot;&gt;/themes/&lt;/span&gt;
# If &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; an &lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt; array&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; this variable will have no effect&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
# ZSH_THEME_RANDOM_CANDIDATES&lt;span class=&quot;p&quot;&gt;=(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;robbyrussell&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;agnoster&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

# Uncomment the following &lt;span class=&quot;nb&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; use case&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;sensitive completion&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
# CASE_SENSITIVE&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;true&quot;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;....&lt;/span&gt; 등등

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그럼 여기서 제일 중요한 부분은, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ZSH_THEME=&quot;robyrussell&quot;&lt;/code&gt; 을 찾아서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ZSH_THEME=&quot;agnoster&quot;&lt;/code&gt; 로 변경을 해야합니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;사용방법은, i 키를 누르면, INSERT로 변경이 됩니다. INSERT 상태에서만 삭제 또는 입력이 가능해지기 때문에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;robyrussell -&amp;gt; agnoster&lt;/code&gt; 로 변경합니다. 입력을 끝냈다면 esc 버튼을 누르고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:wq&lt;/code&gt;를 입력하면 다시 원래 터미널 상태로 돌아갑니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그리고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;source ~/.zshrc&lt;/code&gt; 를 입력하면, 저장 된 파일의 상태를 불러와서, 테마를 변경시켜줍니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;하지만 폰트가 깨져있죠? 그게 맞는겁니다ㅎㅎ이제 폰트만 설치해주면 됩니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-폰트-설치&quot;&gt;3. 폰트 설치&lt;/h3&gt;

&lt;p&gt;폰트는 &lt;a href=&quot;https://github.com/naver/d2codingfont#%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C&quot;&gt;D2 Coding&lt;/a&gt;이나, 아니면 &lt;a href=&quot;https://fonts.google.com/noto/specimen/Noto+Sans+KR&quot;&gt;Noto Sans&lt;/a&gt; 폰트를 설치하시면 될 것 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;폰트 설치가 완료되었다면, iTerm2를 실행하고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iTerm2 / preferences&lt;/code&gt; 메뉴를 클릭합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Profile -&amp;gt; Text&lt;/code&gt; 에 font가 있습니다. 거기서 설치하신 폰트로 변경하시면 깨지지 않고 잘 나옵니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-color-preset-변경하기&quot;&gt;4. Color preset 변경하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Color preset 변경하는 방법은, &lt;a href=&quot;https://ooeunz.tistory.com/21&quot;&gt;링크&lt;/a&gt; 에 잘 나와있기 때문에, 해당 링크를 클릭해서 보시는 것을 추천드립니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Wed, 06 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/install/0002/</link>
        <guid isPermaLink="true">http://localhost:4000/install/0002/</guid>
        
        <category>macos</category>
        
        <category>iTerm2</category>
        
        <category>iterm2</category>
        
        <category>iTerm2 theme</category>
        
        <category>iTerm2 설치</category>
        
        <category>iTerm2 테마</category>
        
        <category>터미널</category>
        
        
        <category>Install</category>
        
      </item>
    
      <item>
        <title>MacOS Homebrew 및 git bash 설치 방법</title>
        <description>&lt;hr /&gt;

&lt;p&gt;안녕하세요. Nerd Lee 입니다.&lt;/p&gt;

&lt;p&gt;MacOS Homebrew 및 git bash 설치 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt;

&lt;p&gt;git bash를 설치하기 전에, Homebrew 라고 하는 오픈소스 패키지 매니저?
패키지 관리 시스템을 설치해야 합니다.
순서대로 하시다보면 git bash 설치는 금방금방 끝낼 수 있습니다!&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;1-homebrew-홈페이지-가기&quot;&gt;1. Homebrew 홈페이지 가기&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://brew.sh/index_ko&quot;&gt;홈브루 홈페이지 링크&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;2-homebrew-설치하기&quot;&gt;2. Homebrew 설치하기&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;mac os에 내장되어 있는 터미널에 해당 명령어를 붙여넣기 하면 설치 시작! 조금 오래 걸립니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;/bin/bash &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;설치 완료 후 버전을 확인해보세요.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;설치가 되어 있다면, Homebrew 3.x.x 이런 식으로 표시됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;3-git-bash-설치하기&quot;&gt;3. Git bash 설치하기&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://git-scm.com/download/mac&quot;&gt;Git bash 홈페이지 링크&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;링크를 클릭하면, Homebrew로 설치하는 방법이 나오는데, 명령어는 다음과 같습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;git
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;위의 명령어를 터미널에 붙여넣기 하면 git이 설치가 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Wed, 06 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/install/0001/</link>
        <guid isPermaLink="true">http://localhost:4000/install/0001/</guid>
        
        <category>macos</category>
        
        <category>homebrew</category>
        
        <category>mac git bash 설치</category>
        
        <category>mac homebrew 설치</category>
        
        <category>홈브루</category>
        
        
        <category>Install</category>
        
      </item>
    
      <item>
        <title>remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead. 해결방법</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/error.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mac OS 컴퓨터를 포맷하고 난 뒤 스프링 프로젝트가 다 다운받아지고, github에 업로드 할려고 했는데
밑에와 같은 로그가 뜨면서 업로드에 실패했다고 한다.&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;remote: Support &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;password authentication was removed on August 13, 2021. Please use a personal access token instead.
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;이러한 오류를 발견했다. 아니 맥북을 몇년전에 사용했던 것도 아니고.. 한 3개월만에 새로운 마음으로 포맷을 한건데.. 3개월 전에는 이런식으로 안했는데 왜 이러지? 라고 하고 해결법을 찾는다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://hyeo-noo.tistory.com/184&quot;&gt;Github push token 에러 해결 링크&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;위의 링크를 참고해서 문제를 해결했다.&lt;/p&gt;

&lt;p&gt;아이디와 패스워드를 입력해서 로그인 하는 방식이 아닌, personal access token을 사용해서 push나 pull이 가능하도록 한 것 같다.&lt;/p&gt;

&lt;h3 id=&quot;해결방법은-다음과-같다&quot;&gt;해결방법은 다음과 같다.&lt;/h3&gt;

&lt;h4 id=&quot;1-github-홈페이지에서-settings-클릭&quot;&gt;1. github 홈페이지에서 Settings 클릭&lt;/h4&gt;

&lt;h4 id=&quot;2-메뉴-맨-밑에-있는-developer-settings-클릭&quot;&gt;2. 메뉴 맨 밑에 있는 Developer settings 클릭&lt;/h4&gt;

&lt;h4 id=&quot;3-personal-access-tokens-클릭&quot;&gt;3. Personal access tokens 클릭&lt;/h4&gt;

&lt;h4 id=&quot;4-generate-new-token-클릭&quot;&gt;4. Generate new token 클릭&lt;/h4&gt;

&lt;h4 id=&quot;5-token을-설정한다&quot;&gt;5. token을 설정한다.&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;5.1 ) Note는, 그냥 인증을 위한 것이기 때문에 auth 또는 아무렇게 이름을 입력한다.&lt;/li&gt;
  &lt;li&gt;5.2 ) repo, admin:repo_hook, gist, user, delete_repo를 클릭하고, Generate token을 클릭한다.&lt;/li&gt;
  &lt;li&gt;5.3 ) 그럼 토큰이 만들어졌을텐데, 창을 나가지말고 토큰 번호를 복사한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;6-터미널에서-user-정보를-입력하자&quot;&gt;6. 터미널에서, user 정보를 입력하자.&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.name &lt;span class=&quot;s2&quot;&gt;&quot;username&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.email &lt;span class=&quot;s2&quot;&gt;&quot;user@email.com&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;깃이 올라갈 때의 이름과, 깃허브의 이메일을 입력한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;7-git-push&quot;&gt;7. git push&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;Username &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;https://github.com : &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;아이디 입력&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;Password &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;https://github.com/id : &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;복사한 토큰 붙여넣기 또는 입력&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Username에서는, 자신의 아이디를 적고 Password는 token을 입력해야한다. macOS 같은 경우 비밀번호를 입력해도 보이지 않을텐데, 그냥 붙여넣기 하고 엔터를 눌러도 아무런 문제가 없다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이렇게 하면 push를 해도 아무런 문제 없이 push가 잘 될 것이다.&lt;/p&gt;

&lt;p&gt;이전 방식이 편했는데.. 이번 방식은 생각하지도 못해서 당황했다ㅠㅠ&lt;/p&gt;

&lt;p&gt;모두 잘 해결이 되기를 바랍니다ㅠㅠ&lt;/p&gt;

&lt;hr /&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!
&lt;/div&gt;
</description>
        <pubDate>Wed, 06 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/error/0004/</link>
        <guid isPermaLink="true">http://localhost:4000/error/0004/</guid>
        
        <category>git</category>
        
        <category>github</category>
        
        <category>remote</category>
        
        <category>remote:Support for password authentication was removed on August 13</category>
        
        <category>2021. Please use a personal access token instead.</category>
        
        <category>terminal</category>
        
        
        <category>Error</category>
        
      </item>
    
      <item>
        <title>[HTML/CSS] 4. CSS Flex (1)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/html_css.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;🖥 HTML / CSS 이전 글 보기&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/html_css/0001/&quot;&gt;01. HTML의 구조에 대해서&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/html_css/0002/&quot;&gt;02. HTML의 기본 문법에 대해서&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/html_css/0003/&quot;&gt;03. CSS 기본 구조 (1)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/html_css/0004/&quot;&gt;03. CSS 기본 구조 (2)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;안녕하세요. Nerd Lee 입니다.&lt;/p&gt;

&lt;p&gt;CSS에서 중요한 Flex에 대한 첫 번째 공부 내용을 적어보도록 하겠습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;css-flex&quot;&gt;CSS Flex&lt;/h1&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-flex--grid&quot;&gt;1. Flex &amp;amp; Grid?&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;flex&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;1차원 정렬에 대한 속성&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;grid&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;2차원 정렬에 대한 속성&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-flex에-사용되는-속성&quot;&gt;2. flex에 사용되는 속성&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;21-참고할-만한-링크&quot;&gt;2.1) 참고할 만한 링크&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://css-tricks.com/snippets/css/a-guide-to-flexbox/&quot;&gt;CSS Tricks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://studiomeal.com/archives/197&quot;&gt;1분 코딩&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;22-display-속성에서-flex로-값을-지정&quot;&gt;2.2) display 속성에서 flex로 값을 지정&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;display 속성에서, flex로 사용하면 됩니다. 기본 정렬은 row로 설정됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;23-flex-direction&quot;&gt;2.3) flex-direction&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;flex-direction은 정렬되는 방향을 정하기 위한 속성입니다.&lt;br /&gt;
row / column / row-reverse / column-reverse 이렇게 총 4가지의 정렬 값이 제공됩니다.
    &lt;ul&gt;
      &lt;li&gt;row : 가로 정렬 ( default )&lt;/li&gt;
      &lt;li&gt;column: 세로 정렬&lt;/li&gt;
      &lt;li&gt;row-reverse : 가로 역방향 정렬&lt;/li&gt;
      &lt;li&gt;column-reverse: 세로 역방향 정렬&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p data-height=&quot;300&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;LYeZRqw&quot; data-default-tab=&quot;html,result&quot; data-user=&quot;nerd-lee&quot; class=&quot;codepen split-output&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/nerd-lee/pen/LYeZRqw/&quot;&gt;hello&lt;/a&gt; by nerd-lee (&lt;a href=&quot;https://codepen.io/nerd-lee&quot;&gt;@nerd-lee&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;24-flex-wrap&quot;&gt;2.4) flex-wrap&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;no-wrap &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;|&lt;/code&gt; wrap &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;|&lt;/code&gt; wrap-reverse로 값이 제공되며, default로는 nowrap으로 설정이 되어 있습니다.
    &lt;ul&gt;
      &lt;li&gt;no-wrap : 브라우저 영역에 벗어나도, 아이템을 밑으로 내려보내지 않습니다.&lt;/li&gt;
      &lt;li&gt;wrap : 브라우저 영역을 벗어나게 되면 아이템을 밑으로 내려보냅니다.&lt;/li&gt;
      &lt;li&gt;wrap-reverse : 아이템을 밑으로 내려보내지만, 거꾸로 정렬해서 표시합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p data-height=&quot;300&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;zYpBooV&quot; data-default-tab=&quot;html,result&quot; data-user=&quot;nerd-lee&quot; class=&quot;codepen split-output&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/nerd-lee/pen/zYpBooV/&quot;&gt;hello&lt;/a&gt; by nerd-lee (&lt;a href=&quot;https://codepen.io/nerd-lee&quot;&gt;@nerd-lee&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;25-flex-flow&quot;&gt;2.5) flex-flow&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;flex-flow는, flex-direction과 flex-wrap을 한 번에 사용할 수 있는 축약형 속성입니다.&lt;br /&gt;
    &lt;ul&gt;
      &lt;li&gt;예 ) flex-flow : column wrap; 이면, 세로로 정렬되고 영역을 벗어나면&lt;br /&gt; 아이템에 크기에 맞게 다른 영역에 채워줘! 라고 한 번에 명령을 내리게 됩니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p data-height=&quot;300&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;BaJzQJY&quot; data-default-tab=&quot;html,result&quot; data-user=&quot;nerd-lee&quot; class=&quot;codepen split-output&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/nerd-lee/pen/BaJzQJY/&quot;&gt;hello&lt;/a&gt; by nerd-lee (&lt;a href=&quot;https://codepen.io/nerd-lee&quot;&gt;@nerd-lee&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;다음 내용은, 2편으로 넘어가도록 하겠습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Mon, 21 Mar 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/html_css/0005/</link>
        <guid isPermaLink="true">http://localhost:4000/html_css/0005/</guid>
        
        <category>html</category>
        
        <category>css</category>
        
        <category>head</category>
        
        <category>body</category>
        
        
        <category>HTML_CSS</category>
        
      </item>
    
      <item>
        <title>[HTML/CSS] 3. CSS 기본 구조 (2)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/html_css.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;🖥 HTML / CSS 이전 글 보기&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/html_css/0001/&quot;&gt;01. HTML의 구조에 대해서&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/html_css/0002/&quot;&gt;02. HTML의 기본 문법에 대해서&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/html_css/0003/&quot;&gt;03. CSS 기본 구조 (1)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;안녕하세요. Nerd Lee 입니다.&lt;/p&gt;

&lt;p&gt;이전 내용에 이어 CSS 기본 구조에 대한 2번째 글을 작성해보도록 하겠습니다!&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;css-기본-구조-2&quot;&gt;CSS 기본 구조 (2)&lt;/h1&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-선택자-selector&quot;&gt;1. 선택자 (Selector)&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;11-type-선택자&quot;&gt;1.1) type 선택자&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;아래 코드와 같이, HTML 태그를 지정하는 것을 type 선택자라고 합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/3888be1eda363b932253b55313a8e095.js&quot;&gt;&lt;/script&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;12-atrribute-선택자&quot;&gt;1.2) atrribute 선택자&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;아래 코드처럼, a 태그인데, href의 속성이 https://google.com 인 태그를 지정하는 것인데
쓰일일은 없다고 생각합니다. PASS!&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/aa947dd1a453ce8e84f73d81cc70ff3c.js&quot;&gt;&lt;/script&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;13-id-선택자와-class-선택자&quot;&gt;1.3) id 선택자와 class 선택자&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;클래스와 id 선택자는 같으면서도 다른 점을 가지고 있습니다.
    &lt;ul&gt;
      &lt;li&gt;클래스 선택자는 앞에 .(클래스 네임)을 붙이는 반면에 id 선택자는 #(클래스 네임)을 붙여서 사용합니다.&lt;/li&gt;
      &lt;li&gt;id 선택자는 주민등록번호라면, class는 성별이라고 생각하면 편할 것 같습니다.
        &lt;ul&gt;
          &lt;li&gt;주민등록번호는 한 사람 당 하나만 존재하지만, 성별이 남자인 사람, 여자인 사람 여러명이 있죠?&lt;/li&gt;
          &lt;li&gt;즉, id는 태그당 하나만 가질 수 있고, 클래스는 여러 태그에 넣어서 사용할 수 있습니다. 밑에 코드를 보면 자세히 이해가 갈 것입니다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/c45d2e1cd04143044a5514949f66e2dc.js&quot;&gt;&lt;/script&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;14-그룹-선택자&quot;&gt;1.4) 그룹 선택자&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;밑에 코드처럼, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; 태그와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 태그를 묶어서 한 번에 속성을 변경할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/9fb6ed93f45b322ce6ec3921c9cb6037.js&quot;&gt;&lt;/script&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;15-가상-선택자&quot;&gt;1.5) 가상 선택자&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;가상 선택자는 여러개가 있기 때문에, 가상 선택자에 대해 알고 싶다면 밑에 버튼을 클릭해보세요.&lt;br /&gt;
밑에 Codepen 예제를 넣어놨습니다. p 태그를 마우스로 가져다대면 p 태그의 배경색이 회색으로 변경하는 예제입니다.&lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://ofcourse.kr/css-course/%EA%B0%80%EC%9E%A5-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%84%A0%ED%83%9D%EC%9E%90&quot; class=&quot;btn btn--primary&quot; target=&quot;_blank&quot;&gt;가상 선택자가 궁금하다면 클릭!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p data-height=&quot;300&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;qBpZJjZ&quot; data-default-tab=&quot;html,result&quot; data-user=&quot;nerd-lee&quot; class=&quot;codepen split-output&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/nerd-lee/pen/qBpZJjZ/&quot;&gt;hello&lt;/a&gt; by nerd-lee (&lt;a href=&quot;https://codepen.io/nerd-lee&quot;&gt;@nerd-lee&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-div와-span-태그에-대해서&quot;&gt;2. div와 span 태그에 대해서&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;div와 span의 차이점은, block과 lnline이라는 차이점이 있습니다.&lt;br /&gt;
block은 글자가 하나밖에 없더라도 가로영역이 100%가 다 잡혀집니다.&lt;br /&gt;
기본으로 지정된 margin과 padding을 제외한다면 말이죠.&lt;br /&gt;
하지만 inline은, 글자가 한 글자라면, 해당 글자에 대한 영역이 잡혀집니다.&lt;br /&gt;
그리고 div는 margin을 사용할 수 있지만, inline은 margin을 사용할 수 없습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p data-height=&quot;300&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;YzYqJvx&quot; data-default-tab=&quot;html,result&quot; data-user=&quot;nerd-lee&quot; class=&quot;codepen split-output&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/nerd-lee/pen/YzYqJvx/&quot;&gt;hello&lt;/a&gt; by nerd-lee (&lt;a href=&quot;https://codepen.io/nerd-lee&quot;&gt;@nerd-lee&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-css-속성에-관해&quot;&gt;3. CSS 속성에 관해&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;css의 속성은 너무나도 많습니다. 그렇기 때문에, 필요한 속성이 있다면 밑에 버튼을 클릭해서 보시면 될 것 같습니다. &lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/CSS/Using_CSS_custom_properties&quot; class=&quot;btn btn--primary&quot; target=&quot;_blank&quot;&gt;css 속성이 궁금하다면 클릭!&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Sun, 20 Mar 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/html_css/0004/</link>
        <guid isPermaLink="true">http://localhost:4000/html_css/0004/</guid>
        
        <category>html</category>
        
        <category>css</category>
        
        <category>head</category>
        
        <category>body</category>
        
        
        <category>HTML_CSS</category>
        
      </item>
    
      <item>
        <title>[HTML/CSS] 3. CSS 기본 구조 (1)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/html_css.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;🖥 HTML / CSS 이전 글 보기&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/html_css/0001/&quot;&gt;01. HTML의 구조에 대해서&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/html_css/0002/&quot;&gt;02. HTML의 기본 문법에 대해서&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;안녕하세요. Nerd Lee 입니다.&lt;/p&gt;

&lt;p&gt;HTML과 CSS를 공부 한 내용 중 CSS의 기본구조에 대한 내용에 대해 알아보도록 하겠습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;css-기본-구조&quot;&gt;CSS 기본 구조&lt;/h1&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-css-공부-전-html의-코드&quot;&gt;1. CSS 공부 전 html의 코드&lt;/h3&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/f4d96a935f5f65292a9407f44552c928.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;위 코드로 공부를 진행했습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-css란-무엇인가&quot;&gt;2. CSS란 무엇인가?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Cascading Style Sheets의 약자로&lt;br /&gt;
HTML이나 XML로 작성된 문서의 표시 방법을 기술하기 위한 스타일 시트 언어라고 합니다.&lt;br /&gt;
CSS는 HTML의 요소 하나하나를 어떻게 렌더링되어야 하는지를 지정할 수 있고&lt;br /&gt;
Cascade란, 한국어로 종속을 뜻하는데 서로 다른 원점에서 가져온 속성 여럿을 조합해서&lt;br /&gt;
최종 결과를 도출하는 알고리즘을 뜻한다고,
&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/CSS/Cascade&quot;&gt;MDN Web Docs&lt;/a&gt;에선 표시되어 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-css의-기본-구조&quot;&gt;3. CSS의 기본 구조&lt;/h3&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/dadb54cbf3f155e11d4542d828a5c953.js&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-css-사용-방법&quot;&gt;4. CSS 사용 방법&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;41--html-style-태그에서-사용하기&quot;&gt;4.1 ) HTML style 태그에서 사용하기&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/3e4816d077b7ab01a164444bde3802ce.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 태그 안에 h1 태그의 스타일을 지정해주는 코드를 작성했습니다.&lt;br /&gt;
color는, 문자의 색상의 속성을 뜻하고 green은 아시다시피 초록색으로 지정했기에&lt;br /&gt;
청춘예찬이라는 글씨가 초록색으로 변합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;42--스타일을-변경-할-태그-안에-style-속성을-이용하기&quot;&gt;4.2 ) 스타일을 변경 할 태그 안에 style 속성을 이용하기&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/675483c4a49d75cf82773fd0b740171e.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; 태그 안에 직접 style 속성에, css의 속성값을 사용할 수도 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;43--css-파일을-만들어서-html에-연결해서-사용하기&quot;&gt;4.3 ) CSS 파일을 만들어서 html에 연결해서 사용하기&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;index.css 라는 파일을 만들어준다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 태그 안에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 태그를 추가한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/336f0da433d6f49789fda1d7dfc62158.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;link&amp;gt;&lt;/code&gt;의 rel 속성이 궁금하다면 밑에 버튼을 클릭해주세요.&lt;br /&gt;
&lt;a href=&quot;http://tcpschool.com/html-tag-attrs/link-rel&quot; class=&quot;btn btn--primary&quot; target=&quot;_blank&quot;&gt;Link의 rel 속성이 궁금하다면 클릭!&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;index.css 파일에 값을 넣어줍니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/75ea5cf71f712758a443cae815df7d87.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;글이 길어지기 때문에, 2편으로 다시 돌아오겠습니다!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Sat, 19 Mar 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/html_css/0003/</link>
        <guid isPermaLink="true">http://localhost:4000/html_css/0003/</guid>
        
        <category>html</category>
        
        <category>css</category>
        
        <category>head</category>
        
        <category>body</category>
        
        
        <category>HTML_CSS</category>
        
      </item>
    
      <item>
        <title>[HTML/CSS] 2. HTML 기본 문법</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/html_css.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;🖥 HTML / CSS 이전 글 보기&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/html_css/0001/&quot;&gt;01. HTML의 구조에 대해서&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;안녕하세요. Nerd Lee 입니다.&lt;/p&gt;

&lt;p&gt;HTML을 공부했던 내용 중, HTML의 간단한 기본 문법에 대해 알아보도록 하겠습니다!&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;html-기본-문법&quot;&gt;HTML 기본 문법&lt;/h1&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-html의-사용-방법&quot;&gt;1. HTML의 사용 방법&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;11-element&quot;&gt;1.1) element&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/449a6afedb863100f8ed230c78a92ec7.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;위의 코드처럼 HTML은 &amp;lt;&amp;gt; 태그로 감싸져있고, 끝을 표현할 때엔 &amp;lt;/&amp;gt; 이렇게 사용합니다.
만약에 &amp;lt;&amp;gt;value&amp;lt;/&amp;gt; 라면, 브라우저에 문자열을 표현하기도 하고
태그 안에 다른 자식 element나 또는 value가 필요 없다면 &lt;tag&gt;&lt;/tag&gt; 로 사용할 수 있습니다.
그리고 이것들을 element라고 부릅니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;12-attribute--속성-&quot;&gt;1.2) attribute ( 속성 )&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/00c24fed1ef34a68859d871df09e34a5.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;attribute는 태그에 대한 더 구체적인 설명을 제공하는 역할로
대표적으로 class와 id와 같이 해당 태그에 대한 속성을 지정해서 태그의 기능들을 추가해주기도 합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;13--주석&quot;&gt;1.3 ) 주석&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/c4666a2c41522253eccacd42a1fcfc30.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;html에서 주석은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;!-- --&amp;gt;&lt;/code&gt; 이렇게 표현합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-각-태그에-대한-내용들&quot;&gt;2. 각 태그에 대한 내용들&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;21-텍스트-관련-태그&quot;&gt;2.1) 텍스트 관련 태그&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/24d227b00b957dd486cb2eaec836d7da.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;~&amp;lt;h6&amp;gt;&lt;/code&gt; 태그는 Headings라고 하며, 문서의 제목 작성에 필요한 태그이며&lt;br /&gt;숫자가 크면 클수록 글씨의 크기가 작아집니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 태그는 paragraph라고 하며, 본문 또는 한 단락에 대한 글을 작성하기 좋은 태그입니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;br&amp;gt;&lt;/code&gt; 태그는 한 줄 띄어쓰기로 C언어나 JAVA에서의 \n과 같다고 생각하면 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;22--anchor-태그-및-속성&quot;&gt;2.2 ) Anchor 태그 및 속성&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/dc67bb3c9d15c281389c5f6391ce05b7.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 태그는 Anchor, 한국말로 닻인데, 왜 Anchor인지는 모르겠지만 앵커 태그라고 합니다.&lt;br /&gt;
자주 쓰이는 속성은 href, target, title 정도입니다.&lt;br /&gt;
“href” 속성은 이동하려는 링크를 값으로 주면 클릭 시 해당 홈페이지로 이동합니다.&lt;br /&gt;
“target” 속성은, 현재 페이지에서 홈페이지로 이동할 지 아니면&lt;br /&gt;
새로운 탭을 추가해서 홈페이지로 이동할 지를 결정하는 속성입니다.&lt;br /&gt;
default값으로, _self이며 _self는 현재 페이지에서 홈페이지 이동, _blank는 다른 탭에서의 홈페이지 이동입니다.&lt;br /&gt;
“title” 속성은 링크에 마우스를 가져다 대고 있으면 구글로 이동합니다. 라는 글이 뜨게 됩니다.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;23--리스트&quot;&gt;2.3 ) 리스트&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/8ca7474e3df7462946b6914c38a42dfe.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 태그는 list를 ㄹ뜻합니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; 태그는 unordered list라고 하며, 순서가 정해지지 않은 리스트를 말합니다.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;ol&amp;gt;&lt;/code&gt; 태그는 ordered list라고 하며, 순서가 정해진 리스트를 말합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;아래 코드의 실행 결과입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p data-height=&quot;300&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;LYeGjgp&quot; data-default-tab=&quot;html,result&quot; data-user=&quot;nerd-lee&quot; class=&quot;codepen split-output&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/nerd-lee/pen/LYeGjgp/&quot;&gt;hello&lt;/a&gt; by nerd-lee (&lt;a href=&quot;https://codepen.io/nerd-lee&quot;&gt;@nerd-lee&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;ul 태그는 순서는 올바르게 출력하지만, ol 태그처럼 앞에 순서를 적어서 정렬하지 않는 반면에&lt;br /&gt;
ol 태그는 순서에 맞게 1. 2. 3. 을 앞에 붙여주게 됩니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;또한 ol 태그에서는 type이란 속성을 사용할 수 있는데, type에는 “a”, “A”, “1”, “I”, “i” 라는 값을 넣어줄 수 있습니다.
해당 값에 따른 출력값은 다음과 같습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p data-height=&quot;300&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;xxpZLLo&quot; data-default-tab=&quot;html,result&quot; data-user=&quot;nerd-lee&quot; class=&quot;codepen split-output&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/nerd-lee/pen/xxpZLLo/&quot;&gt;hello&lt;/a&gt; by nerd-lee (&lt;a href=&quot;https://codepen.io/nerd-lee&quot;&gt;@nerd-lee&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;24--이미지-태그&quot;&gt;2.4 ) 이미지 태그&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;img 태그는, 이미지를 나타내는 태그이고 src 속성은, source의 줄임말로써
해당 프로젝트 폴더에 있는 경로를 넣어주거나 다른 웹페이지에 있는 이미지 url을 넣어 사용할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/etc/logo.png&quot; style=&quot;width:200px; height:200px;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;25--input-태그&quot;&gt;2.5 ) input 태그&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;input 태그는 쓰이는 속성도 많고 그만큼 사용하는 값도 많기 때문에 링크를 따로 남기겠습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/HTML/Element/Input&quot; class=&quot;btn btn--primary&quot; target=&quot;_blank&quot;&gt;Input 속성이 궁금하다면 클릭!&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;26--strong과-i-태그&quot;&gt;2.6 ) strong과 i 태그&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;strong 태그는 bold 처리, i 태그는 이탤릭체(italic)를 만들 때 사용합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p data-height=&quot;300&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;eYyJGOq&quot; data-default-tab=&quot;html,result&quot; data-user=&quot;nerd-lee&quot; class=&quot;codepen split-output&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/nerd-lee/pen/eYyJGOq/&quot;&gt;hello&lt;/a&gt; by nerd-lee (&lt;a href=&quot;https://codepen.io/nerd-lee&quot;&gt;@nerd-lee&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Fri, 18 Mar 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/html_css/0002/</link>
        <guid isPermaLink="true">http://localhost:4000/html_css/0002/</guid>
        
        <category>html</category>
        
        <category>css</category>
        
        <category>head</category>
        
        <category>body</category>
        
        
        <category>HTML_CSS</category>
        
      </item>
    
      <item>
        <title>[HTML/CSS] 1. HTML 구조</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/html_css.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;🖥 HTML / CSS 전체 글 보기&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/html_css/0001/&quot;&gt;01. HTML의 구조에 대해서&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/html_css/0002/&quot;&gt;02. HTML의 기본 문법에 대해서&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/html_css/0003/&quot;&gt;02. CSS 기본 구조 (1)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;안녕하세요. Nerd Lee 입니다.&lt;/p&gt;

&lt;p&gt;게임 프로그래밍을 전공하면서, AR / VR을 개발하다가 회의감을 느끼고 1년여간 쉬면서&lt;/p&gt;

&lt;p&gt;평소에 관심이 있던 웹 개발쪽을 공부해서 취업을 해야겠다 라고 생각을 한 뒤&lt;/p&gt;

&lt;p&gt;독학을 하고 포트폴리오를 2가지를 만들면서 HTML과 CSS를 얕봤습니다.&lt;/p&gt;

&lt;p&gt;그냥 만들면 되겠지 하다가 반응형 페이지도 만들어야 되는데, 계속 노가다 형식으로 때려 맞추다보니&lt;/p&gt;

&lt;p&gt;이래선 안되겠다 싶어, HTML / CSS를 공부했습니다.&lt;/p&gt;

&lt;p&gt;HTML을 공부했던 내용 중, HTML의 간단한 구조에 대해 알아보도록 하겠습니다!&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;html-구조&quot;&gt;HTML 구조&lt;/h1&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-html의-기본-형식&quot;&gt;1. HTML의 기본 형식&lt;/h3&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/057dc0430122148772ffd44f0add1149.js&quot;&gt;&lt;/script&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;11-doctype-html&quot;&gt;1.1) DOCTYPE html?&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;이 문서의 타입이 html이란 내용입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;12-html태그의-속성-중-lang이란&quot;&gt;1.2) html태그의 속성 중 lang이란?&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;lang이란 속성은, 이 페이지의 언어를 뜻합니다. 저 언어에 따라 구글이 자동으로 번역할 건지 안할건지를 물어보기도 합니다. 저는 한국어로 되어 있기에, ko라는 값을 넣어줬습니다.
ISO 코드에 대한 부분이 궁금하시다면 밑에 있는 버튼을 클릭해주세요.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/previous-versions/commerce-server/ee825488(v=cs.20)?redirectedfrom=MSDN&quot; class=&quot;btn btn--primary&quot; target=&quot;_blank&quot;&gt;ISO 코드&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;13-meta-태그의-charset-속성이란&quot;&gt;1.3) meta 태그의 charset 속성이란?&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;파일의 인코딩 형식에 대해 알려주는 속성입니다. UTF-8은 유니코드라는 문자 인코딩 방식 중 하나이며,
charset이 없다면, 한글 또는 특수문자 등의 문자들이 깨져서 나올 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;14-name-content-속성&quot;&gt;1.4) name, content 속성?&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;보통 name속성은, viewport라는 값으로 사용되고 있고, iOS 장치로 인해서, 표준처럼 사용되고 있고
화면 상의 화상 표시 영역을 뜻합니다.
가장 기본적으로 사용되는 content 속성의 값이 width-device-width인데, 해당 기기의 넓이에 맞게
viewport의 넓이도 조절이 된다라는 뜻입니다.
예를 들어, 나의 pc의 최대 px이 1024px이라면 1024px만큼 화면 영역을 표시해줍니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;15-title-태그&quot;&gt;1.5) title 태그?&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;title 태그는, 웹 페이지의 제목을 나타내는 태그입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/9a009054e5dde54b2dc0de43e3a55c94.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;이렇게 작성을 했다면 밑에 사진과 같이 안녕 난 타이틀이야 라고 제목이 변경되는 것을 볼 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2022-03-17/img.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;16-head-와-body-태그란&quot;&gt;1.6) &amp;lt;head&amp;gt; 와 &amp;lt;body&amp;gt; 태그란?&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;head태그는 문서의 내부 정보를 관리하는 용도로 사용되고
body태그는 화면의 모든 출력 내용을 가지는 컨테이너이며, 개발자가 내용을 출력할 수 있는 영역을 뜻합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Thu, 17 Mar 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/html_css/0001/</link>
        <guid isPermaLink="true">http://localhost:4000/html_css/0001/</guid>
        
        <category>html</category>
        
        <category>css</category>
        
        <category>head</category>
        
        <category>body</category>
        
        
        <category>HTML_CSS</category>
        
      </item>
    
      <item>
        <title>[포트폴리오 작업] 02. 주식 커뮤니티 카테고리 및 미디어 쿼리 설정</title>
        <description>&lt;p class=&quot;notice--danger&quot;&gt;작업 환경 : Mac OS 🧑🏻‍💻&lt;br /&gt;
Lauguage : Typescript&lt;br /&gt;
Web Framework: React.js&lt;br /&gt;
Framework To Use : react-router-dom, react-query, styled-components … 등등&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;-주식-커뮤니티-개발-two&quot;&gt;📈 주식 커뮤니티 개발 Two&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;모든 부분을 적지 않고, 생략되는 부분들도 많습니다.&lt;br /&gt;
프로젝트 하면서 반복되는 작업 또는 까먹을 수 있는 중요한 해결 문제들만 적을 예정이니&lt;br /&gt;
정확한 정보를 얻으실 수도 없을 수 있다는 점 알려드립니다.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-카테고리-설정&quot;&gt;1. 카테고리 설정&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;1-1--폴더-구조&quot;&gt;1-1 ) 폴더 구조&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/1bbfd15dec005445e17c5d9d560345f7.js&quot;&gt;&lt;/script&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;1-2--카테고리&quot;&gt;1-2 ) 카테고리&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;카테고리는 총 4가지로 구성. 국내 주식 / 해외 주식 / 코인 / 주식 계산기로, 주식 계산기는 예전에 만든 주식 계산기를 조금 디자인 이쁘게 만들면 될 듯 싶음.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-styled-components-미디어-쿼리-설정하기&quot;&gt;2. Styled-components 미디어 쿼리 설정하기&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;2-1--themets-수정&quot;&gt;2-1 ) theme.ts 수정&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/1ed40238d9ee52cce109b7cc3d47a87b.js&quot;&gt;&lt;/script&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;2-2--styled-components에서-미디어-쿼리-사용하기&quot;&gt;2-2 ) styled-components에서 미디어 쿼리 사용하기&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/0bd619884d2f0f2c0ac153e043d90d0c.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;한 예로, 브라우저가 laptop의 크기라면, font-size를 16 픽셀로 tablet이면, 14, 모바일 크기면 12 픽셀로 하게끔 미디어 쿼리를 작성함.
styled-components에서는 미디어 쿼리를 이렇게 사용 가능하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Wed, 16 Mar 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/project/0002/</link>
        <guid isPermaLink="true">http://localhost:4000/project/0002/</guid>
        
        <category>포트폴리오</category>
        
        <category>프로젝트</category>
        
        <category>개발</category>
        
        <category>개발환경</category>
        
        
        <category>project</category>
        
      </item>
    
      <item>
        <title>[포트폴리오 작업] 01. 주식 커뮤니티 작업환경 설정</title>
        <description>&lt;p class=&quot;notice--danger&quot;&gt;작업 환경 : Mac OS 🧑🏻‍💻&lt;br /&gt;
Lauguage : Typescript&lt;br /&gt;
Web Framework: React.js&lt;br /&gt;
Framework To Use : react-router-dom, react-query, styled-components … 등등&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;-주식-커뮤니티-개발-1일차--작업-환경-설정-&quot;&gt;📈 주식 커뮤니티 개발 1일차 ( 작업 환경 설정 )&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;모든 부분을 적지 않고, 생략되는 부분들도 많습니다.&lt;br /&gt;
프로젝트 하면서 반복되는 작업 또는 까먹을 수 있는 중요한 해결 문제들만 적을 예정이니&lt;br /&gt;
정확한 정보를 얻으실 수도 없을 수 있다는 점 알려드립니다.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-작업-환경-설정하기&quot;&gt;1. 작업 환경 설정하기&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;1-1-reactjs-설치하기&quot;&gt;1-1) react.js 설치하기&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/43081a3158f5160051fe0f4f91801c6b.js&quot;&gt;&lt;/script&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;1-2-vs-code-extension-설치하기&quot;&gt;1-2) vs code extension 설치하기&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;indent-rainbow&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;들여쓰기를 할 경우, 유용한 익스텐션 중 하나, start point와 end point가 어디인지를 알 수 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Material Icon Theme&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;해당 확장자나, 폴더의 이름이 무엇이냐에 따라, 파일의 아이콘이 이쁘게 변경된다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Prettier&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Command + S를 눌러 저장을 할 경우, 알아서 Prettier가 코드를 가독성 좋게 저장해준다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;vscode-styled-components&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;styled-components를 사용할 때, 속성 값을 보여주는 역할을 하는 익스텐션이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;h4 id=&quot;1-3-npm-패키지로-사용할-프레임워크들-설치하기&quot;&gt;1-3) npm 패키지로 사용할 프레임워크들 설치하기&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/4941413b3eda64bbe03c7ee69edf27fd.js&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Sun, 13 Mar 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/project/0001/</link>
        <guid isPermaLink="true">http://localhost:4000/project/0001/</guid>
        
        <category>포트폴리오</category>
        
        <category>프로젝트</category>
        
        <category>개발</category>
        
        <category>개발환경</category>
        
        
        <category>project</category>
        
      </item>
    
      <item>
        <title>[Next.js] 2. url 구조에 대해서 알아봅시다.</title>
        <description>&lt;p class=&quot;notice--danger&quot;&gt;작업 환경 : Mac OS 🧑🏻‍💻
언어 : Typescript&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/etc/nextjs.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;🖥 Next.js 관련 지난 글 보기&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/nextjs/0001/&quot;&gt;01. Next.js 프로젝트 생성 및 실행 방법&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;안녕하세요. Nerd Lee 입니다.&lt;/p&gt;

&lt;p&gt;이번 글은 next.js의 url 구조에 대해서 알아보겠습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;nextjs-url-구조&quot;&gt;NEXT.JS url 구조&lt;/h1&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-reactjs의-url-생성-방법&quot;&gt;1. react.js의 url 생성 방법&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;react.js의 url path 지정 방법&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;react.js는, react-router-dom을 설치하고 BrowserRouter로 감싸고, Switch 컴포넌트를 감싼 뒤, Route 컴포넌트를 이용해서, 각 컴포넌트(페이지)를 자식으로 둬야 합니다. 밑에 코드처럼 말이죠.&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/fc43c1b727ea2848127fa4953bffecdd.js&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-nextjs는-더-쉽다&quot;&gt;2. next.js는 더 쉽다!&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;next.js의 url path 지정 방법&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/nextjs/0001/#3-프로젝트-실행해보기&quot;&gt;이전 글&lt;/a&gt;에서 보시면 아시겠지만 pages 폴더가 있습니다. 그 폴더의 파일 이름이 url 주소가 됩니다. 하지만, 프레임워크인 만큼 next.js만의 룰이 있는데요. _app.tsx와 index.tsx 만큼은 가지고 있어야 합니다. index.tsx가 localhost:3000/ 이기 때문입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;예 ) 만약에 localhost:3000/test 를 만들고 싶다면?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/72e9e9f4aa1f68fade9c487143e2e871.js&quot;&gt;&lt;/script&gt;

&lt;blockquote&gt;
  &lt;p&gt;예 ) localhost:3000/coin/price를 만들고 싶다면?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/9983cad3312b1f35f60649df706a2879.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;이렇게 파일 구조를 가지게 되면, 쉽게 url 구조를 만들 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Sat, 12 Mar 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/nextjs/0002/</link>
        <guid isPermaLink="true">http://localhost:4000/nextjs/0002/</guid>
        
        <category>next.js</category>
        
        <category>typescript</category>
        
        <category>nextjs</category>
        
        <category>reactjs</category>
        
        <category>vercel</category>
        
        <category>url</category>
        
        
        <category>NextJS</category>
        
      </item>
    
      <item>
        <title>[Next.js] 1. Intro</title>
        <description>&lt;p class=&quot;notice--danger&quot;&gt;작업 환경 : Mac OS 🧑🏻‍💻&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/etc/nextjs.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;🖥 Next.js 관련 모든 글 보기&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/nextjs/0001/&quot;&gt;01. Next.js 프로젝트 생성 및 실행 방법&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/nextjs/0002/&quot;&gt;02. Next.js url 구조에 대해서 알아봅시다.&lt;/a&gt;
&lt;!-- - [02. Styled-Components 확장해서 사용하기](/styled-components/0002/) --&gt;
&lt;!-- - [03. Styled-Components에서 as와 attrs란?](/styled-components/0003/) --&gt;
&lt;!-- - [04. Styled-Components 애니메이션과 Pseudo Selector](/styled-components/0004/) --&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;안녕하세요. Nerd Lee 입니다.&lt;/p&gt;

&lt;p&gt;이번 글은 next.js를 설치하는 방법과 실행하는 방법에 대해서 글을 적어보겠습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;nextjs-intro&quot;&gt;NEXT.JS Intro&lt;/h1&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-nextjs-란&quot;&gt;1. Next.js 란?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Next.js는 node.js를 기반으로 구축된 오픈 소스 웹 개발 프레임워크로써, 서버 측 렌더링 및 정적 웹사이트 생성과 같은 React 기반 웹 애플리케이션 기능을 가능하게 한다. 라고, 위키백과는 설명하고 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;쉽게 말해서, React 또한 SSR ( Server Side Rendering ) 방식으로 설계되어 있어 SSR이 가능은 하지만, 구현하기가 굉장히 번거롭기 때문에 그래서 나온 것이 Next.js 프레임워크다. 라고 말할 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-프로젝트-생성하기&quot;&gt;2. 프로젝트 생성하기&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;React.js를 설치하는 것과 비슷합니다. 터미널을 열고 명령어를 입력합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/e9cb1449ee5b833dbbff09eeb96d3584.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;바탕화면에 설치하시려면, cd desktop을 입력해서, desktop에 위치하게 한 다음 자바스크립트 환경을 하시려면 2번째 명령어를, 타입스크립트는 3번째 명령어를 입력하시면 됩니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;입력한 뒤에 y를 입력하고, 해당 앱의 이름을 입력하시면 됩니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-프로젝트-실행해보기&quot;&gt;3. 프로젝트 실행해보기&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;vs code로, 해당 폴더를 열어보시면 다음과 같은 폴더구조를 가지고 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;[ TypeScript ]&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/cd56d0130617524cf8fb90058bfe54b8.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;[ JavaScript ]&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/3a801c5405c0e517a631295e97fb58d1.js&quot;&gt;&lt;/script&gt;

&lt;blockquote&gt;
  &lt;p&gt;vs code terminal( Command (⌘) + J )을 실행해서 명령어를 입력한 뒤 실행해봅시다!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;‘npm run dev’를 입력하면 실행이 됩니다. 하지만 react 처럼 브라우저를 열어주진 않습니다. &lt;br /&gt;
하지만 ready - started .. url : http://localhost:3000 이 보이실 것입니다.&lt;br /&gt;
그 링크를 command + 클릭 또는 브라우저에 http://localhost:3000을 입력하시면 실행이 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;script src=&quot;https://gist.github.com/Nerd-Lee/255867496d55a8bfe728013eca6235c2.js&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Sat, 12 Mar 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/nextjs/0001/</link>
        <guid isPermaLink="true">http://localhost:4000/nextjs/0001/</guid>
        
        <category>next.js</category>
        
        <category>typescript</category>
        
        <category>nextjs</category>
        
        <category>reactjs</category>
        
        <category>vercel</category>
        
        
        <category>NextJS</category>
        
      </item>
    
      <item>
        <title>Styled-Components 애니메이션과 Pseudo Selector</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/styledcomponents.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;📖 지난 글 보기&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/styled-components/0001/&quot;&gt;01. Styled-Components 설치 및 사용하기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/styled-components/0002/&quot;&gt;02. Styled-Components 확장해서 사용하기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/styled-components/0003/&quot;&gt;03. Styled-Components as와 attrs란?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;안녕하세요. Nerd Lee 입니다.&lt;/p&gt;

&lt;p&gt;지난 글에서, styled-components에서 사용되는 as와 Attrs에 대해서 알아봤습니다.&lt;/p&gt;

&lt;p&gt;이번 글에서는 styled-components에서 사용할 수 있는 애니메이션 방법과 Pesudo Selector의 사용법에 대해서 알아보도록 하겠습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;styled-components-애니메이션-pesudo-selector&quot;&gt;Styled-Components 애니메이션, Pesudo Selector&lt;/h1&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-애니메이션-사용&quot;&gt;1. 애니메이션 사용&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;App.js에 있는 모든 코드를 지우고 아래와 같은 코드로 작성해주세요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;styled-components&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Parent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`
  display: flex;
`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`
  height: 200px;
  width: 200px;
  background-color: green;
`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;ketframe 추가하기&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;styled-components&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keyframes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;styled-components&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Parent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`
  display: flex;
`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RotateAnim&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keyframes&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`
  from{
    transfrom: rotate(0deg);
  }

  to{
    transform: rotate(360deg);
  }
`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`
  height: 200px;
  width: 200px;
  background-color: green;
  animation: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RotateAnim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; 1s linear infinite;
`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;RotateAnim 이란 컴포넌트를 하나 만들고, styled-components에서 제공해주는 keyframes를 사용하면&lt;br /&gt;
기존 css과 같이 from, to를 사용해서 애니메이션의 키 프레임을 만들어 사용할 수 있습니다.&lt;br /&gt;
그리고, Box에 애니메이션 속성값을 넣어줘서, RotateAnim을 사용하고&lt;br /&gt;
1초 동안 0~360도씩 계속 회전하는 방식의 애니메이션이 보입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-pesudo-selector&quot;&gt;2. Pesudo Selector&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Box 컴포넌트 안에 span 태그를 자식으로 넣어줍니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;안녕하세요!&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;scss or sass를 사용 해보셨다면 넘어가셔도 괜찮습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Box 컴포넌트안에 기존 html 태그인, span 태그를 추가해서 안녕하세요! 라는 글을 추가했습니다.&lt;br /&gt;
이제 Pesudo Selector가 무엇인 지 사용해보겠습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Box 컴포넌트에 span 태그를 자식관계로 만들어서 속성값을 추가해봅시다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`
  height: 200px;
  width: 200px;
  background-color: green;
  animation: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RotateAnim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; 1s linear infinite;

  span {
    font-size: 36px;
  }
`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;일반 css를 사용한다면, 부모-자식관게가 형성되어 있다면, Box &amp;gt; span 이런 식으로 만들어 사용해야 했다면&lt;br /&gt;
sass / scss나 styled-components는 부모 컴포넌트 안에 자식의 태그의 속성값을 넣어줄 수도 있습니다.&lt;br /&gt;
이렇게 span 태그에 font-size 속성에 36px로 값을 줘서 안녕하세요! 라는 글의 사이즈를 키울 수 있습니다.&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;scss / sass를 html 환경에서 사용해보셨다면, scss -&amp;gt; css로 변환되는 작업을 해야 사용이 가능한데&lt;br /&gt;
css를 보면, 저 위의 코드처럼 작업을 하면, 알아서, Box span과 같이 변환해주기 때문에&lt;br /&gt;
styled-components도 html에서 사용할 수 있도록 알아서 변환해줄 것입니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;hover 이벤트 추가&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`
  height: 200px;
  width: 200px;
  background-color: green;
  animation: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RotateAnim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; 1s linear infinite;

  span {
    font-size: 36px;

    &amp;amp;:hover {
      color: white;
    }
  }

  &amp;amp;:hover {
    background-color: black;
  }
`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;저 위의 코드처럼 Box에도, hover 이벤트를, span 태그에도 hover 이벤트를 발생시키도록 했습니다.&lt;br /&gt;
글을 마우스로 가져가면 글씨 색상이 흰색, Box는 검은색으로 변경되게끔 작성된 코드입니다.&lt;br /&gt;
css라면 전부 각각 따로 Box:hover 와 같이 사용해야 했지만&lt;br /&gt;
styled-components는 &amp;amp;: / &amp;amp;:: 로 각 이벤트들을 설정해줄 수 있습니다.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;저 위의 코드는 html 태그니깐 span을 자식으로 줄 수 있는데&lt;br /&gt;
styled로 만든 컴포넌트는 어떻게 자식 관계로 만들어서 사용할 수 있나요??&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;styled-components&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keyframes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;styled-components&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Parent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`
  display: flex;
`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RotateAnim&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keyframes&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`
  from{
    transfrom: rotate(0deg);
  }

  to{
    transform: rotate(360deg);
  }
`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;``&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`
  height: 200px;
  width: 200px;
  background-color: green;
  animation: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RotateAnim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; 1s linear infinite;

  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; {
    font-size: 36px;

    &amp;amp;:hover {
      color: white;
    }
  }

  &amp;amp;:hover {
    background-color: black;
  }
`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;안녕하세요!&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Box&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;span 대신, Text라는 컴포넌트를 만들어서 안녕하세요! 라고 출력할 수 있도록 만들었습니다.&lt;br /&gt;
그럼, span 대신 ${Text} 를 사용하면 됩니다.&lt;br /&gt;
이렇게 사용하면 좋은 점은, as 키워드에 대해서 전에 쓰여진 글을 보셨다면 아시겠지만&lt;br /&gt;
as 키워드로, 이 태그가 anchor 태그가 되었든, input 태그가 되었어도 hover 이벤트는 실행되게 됩니다.&lt;br /&gt;
물론 as 키워드를 얼마나 사용하게 될지는 저도 잘 모르겠네요ㅎㅎ;;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Thu, 10 Mar 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/styled-components/0004/</link>
        <guid isPermaLink="true">http://localhost:4000/styled-components/0004/</guid>
        
        <category>styled-components</category>
        
        <category>css</category>
        
        <category>scss</category>
        
        <category>sass</category>
        
        
        <category>Styled-Components</category>
        
      </item>
    
      <item>
        <title>타입스크립트로 styled-components 설치 할 때 Cannot find module 'styled-components' or its corresponding type declarations. 오류 해결 방법</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/error.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd Lee 입니다.&lt;/p&gt;

&lt;p&gt;이번 글은 typescript용 styled-components를 설치할 때&lt;/p&gt;

&lt;p&gt;Cannot find module ‘styled-components’ or its corresponding type declarations.&lt;/p&gt;

&lt;p&gt;오류를 해결하는 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;--cannot-find-module-styled-components-or-its-corresponding-type-declarations--&quot;&gt;- Cannot find module ‘styled-components’&lt;br /&gt; or its corresponding type declarations. -&lt;/h2&gt;

&lt;h3 id=&quot;1-packagejson-수정&quot;&gt;1. package.json 수정&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;react.js 환경에 있는 package.json 파일 수정&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;dependencies 또는 dev 환경으로 설치하셨다면&lt;br /&gt;
devDependencies에 있는 버전을 수정해주셔야 합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;styled-components:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@types/styled-components:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;에러가 나는 이유는 두 버전의 값이 같지 않기 때문입니다.&lt;br /&gt;
저 두 패키지 중, 낮은 패키지의 버전에 맞춰서 값을 변경해주시면 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-node_module-폴더-삭제&quot;&gt;2. node_module 폴더 삭제&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;node_module 폴더를 삭제해주세요.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그리고 vs code terminal 환경에서 npm i를 입력합니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm i
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;그럼 package.json에 있는 dependencies에 있는 패키지들을 전부 설치하게 됩니다.&lt;br /&gt;
에러가 없어지고 웹페이지가 정상적으로 작동이 될 것이라고 생각이 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!
&lt;/div&gt;
</description>
        <pubDate>Thu, 10 Mar 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/error/0003/</link>
        <guid isPermaLink="true">http://localhost:4000/error/0003/</guid>
        
        <category>styled-components</category>
        
        <category>declarations</category>
        
        <category>typescript용 에러</category>
        
        <category>Cannot find module 'styled-components' or its corresponding type declarations</category>
        
        
        <category>Error</category>
        
      </item>
    
      <item>
        <title>Vercel process.env.CI = true 오류 해결 방법</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/error.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd Lee 입니다.&lt;/p&gt;

&lt;p&gt;이번 글은 Vercel을 이용해서 홈페이지를 배포할 때 빌드 중에 process.env.CI=true 라는 에러를 볼 때&lt;/p&gt;

&lt;p&gt;해결할 수 있는 방법에 대해서 알려드리도록 하겠습니다!&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;--vercel-processenvci--true-오류-해결-방법에-대해-알아보자--&quot;&gt;- Vercel process.env.CI = true 오류 해결 방법에 대해 알아보자! -&lt;/h2&gt;

&lt;h3 id=&quot;1-홈으로-돌아와-해당-프로젝트를-클릭&quot;&gt;1. 홈으로 돌아와 해당 프로젝트를 클릭&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;프로젝트 홈에서, 메뉴에 Settings 클릭하기&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/2022-03-09-0002/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202022-03-09%20%EC%98%A4%ED%9B%84%201.58.50.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;맨 위에 보이는 메뉴 중에, Settings를 클릭해주세요.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-environment-variables-클릭하기&quot;&gt;2. Environment Variables 클릭하기&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Settings에 있는 소메뉴 중 Environment Variables가 있습니다. 그걸 클릭해주세요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/2022-03-09-0002/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202022-03-09%20%EC%98%A4%ED%9B%84%202.02.12.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-name에는-ci-value에는-false를-입력-후-add-클릭&quot;&gt;3. NAME에는 CI, VALUE에는 false를 입력 후 Add 클릭&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;NAME 부분엔 CI를 입력하고, VALUE 부분엔 false를 입력하고 추가해줍니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/images/2022-03-09-0002/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202022-03-09%20%EC%98%A4%ED%9B%84%202.04.21.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-그리고-다시-상단에-보이는-메뉴-중-deployments를-클릭해서-redeploy를-하자&quot;&gt;4. 그리고 다시 상단에 보이는 메뉴 중, Deployments를 클릭해서 Redeploy를 하자!&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;상단에 Deployments라는 메뉴가 있습니다. 빌드가 실패 된 것을 클릭하면
&lt;br /&gt;Redeploy 버튼을 클릭할 수 있습니다. 그걸 클릭해서 재 빌드하면 됩니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!
&lt;/div&gt;
</description>
        <pubDate>Thu, 10 Mar 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/error/0002/</link>
        <guid isPermaLink="true">http://localhost:4000/error/0002/</guid>
        
        <category>vercel</category>
        
        <category>Vercel</category>
        
        <category>process.env.CI</category>
        
        <category>CI오류</category>
        
        <category>CIError</category>
        
        
        <category>Error</category>
        
      </item>
    
      <item>
        <title>Styled-Components에서 as와 attrs란?</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/styledcomponents.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;📖 지난 글 보기&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/styled-components/0001/&quot;&gt;01. Styled-Components 설치 및 사용하기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/styled-components/0002/&quot;&gt;02. Styled-Components 확장해서 사용하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;안녕하세요. Nerd Lee 입니다.&lt;/p&gt;

&lt;p&gt;지난 글에서, styled-components를 클래스처럼 상속받아서 확장시켜 사용하는 방법에 대해서 알아봤습니다.&lt;/p&gt;

&lt;p&gt;이번 글에서는 styled-components에서 사용되는 as와 Attrs에 대해서 알아보도록 하겠습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;styled-components-as--attrs&quot;&gt;Styled-Components as | Attrs&lt;/h1&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-as란-무엇일까&quot;&gt;1. as란 무엇일까?&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;이렇게 코드를 작성해보세요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;styled-components&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Parent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`
  display: flex;
`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`
  background-color: black;
  color: white;
  border: 0;
  border-radius: 5px;
`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;로그인&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;저는 button이란 태그를 가지고 있는 styled-components를 사용하려고 합니다.&lt;br /&gt;
그런데, 만약 anchor 태그를 가지고 싶은데, Button에 있는 속성값은 그대로 사용하고 싶다면 어떻게 해야할까요?&lt;br /&gt;
그 때 사용하는 게 as라는 것입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;styled-components&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Parent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`
  display: flex;
`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`
  background-color: black;
  color: white;
  border: 0;
  border-radius: 5px;
`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;로그인&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;전 a 태그입니다.&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;이러면, Button의 속성은 그대로 사용하고, a 태그로 사용이 되게 됩니다.&lt;br /&gt;
버튼 태그에서는 사용하지 못하는 href 속성을 a 태그로 사용이 가능해지거든요.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-attrs란-무엇일까&quot;&gt;2. Attrs란 무엇일까?&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Parent만 빼고 모두 지운 다음, Input을 추가해봅시다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;styled-components&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Parent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`
  display: flex;
`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`
  background-color: black;
`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;자 이렇게, 많은 Input이 있고, 모든 Input의 placeholder 속성값을 hello 라고 하고 싶다라고 에를 들어보겠습니다.&lt;br /&gt;
그런데, 여기서 hello가 아니라 bye라고 하고 싶으면, 저 5개를 다 수정해야하는데&lt;br /&gt;
프로그래머들은 저런 귀찮은 작업 하기 싫어하잖아요ㅠㅠ
그래서 styled-components에서 제공하는 것이 attrs 함수 입니다!&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;이렇게 한 번 코드를 수정해보세요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;styled-components&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Parent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`
  display: flex;
`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`
  background-color: black;
`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Input&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Input&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Input&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Input&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Input&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;styled.input.attrs() 를 해줍니다. 그러면 attrs 함수를 사용할 수 있는데요.&lt;br /&gt;
attrs 함수로, input 태그에 있는 속성값을 가질 수 있습니다. 그래서, 만약 같은 태그에 같은 속성을 사용한다면&lt;br /&gt;
attrs에 속성값만 추가해주면 된다는 것입니다!&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;이렇게 말이죠!!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`
  background-color: black;
`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;이렇게 하면, bye로 바꾸고 싶으면, hello를 bye로만 바꿔주면 됩니다ㅎㅎㅎ 참 쉽죠?&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Wed, 09 Mar 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/styled-components/0003/</link>
        <guid isPermaLink="true">http://localhost:4000/styled-components/0003/</guid>
        
        <category>styled-components</category>
        
        <category>css</category>
        
        <category>scss</category>
        
        <category>sass</category>
        
        
        <category>Styled-Components</category>
        
      </item>
    
  </channel>
</rss>