<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>코딩의 기초는 Nerd Lee</title>
    <description>코딩을 말하다</description>
    <link>http://localhost:4000//</link>
    <atom:link href="http://localhost:4000//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 18 Apr 2022 23:16:57 +0900</pubDate>
    <lastBuildDate>Mon, 18 Apr 2022 23:16:57 +0900</lastBuildDate>
    <generator>Jekyll v4.2.2</generator>
    
      <item>
        <title>[Servlet] 09. 회원리스트 가져오기(묶고(VO)-담고(List))</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/java.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;br /&gt;
MVC 1단계인, Servlet 환경으로만 만들어보고, MVC 2단계로 넘어가고&lt;br /&gt;
나중에는 Spring Framework를 사용하는 방식의 강의입니다.&lt;br /&gt;
MVC 1단계는, Controller + Model 만을 사용하는 방식입니다.&lt;/p&gt;

&lt;p&gt;진도가 빠르게 나가지 않아, 중요하다고 생각하는 부분들만 작성할 예정입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-unique-key-만들기&quot;&gt;1. unique key 만들기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;기존 회원테이블에 id를 unique key로 만들어서, 아이디가 중복이 될 경우 테이블에 추가를 못하게 만든다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;
&lt;span class=&quot;c1&quot;&gt;-- 테이블 삭제하기&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- 테이블 생성&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;primary&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auto_increment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;phone&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;unique&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-memberlistcontroller-및-dao-메서드-구현하기&quot;&gt;2. MemberListController 및 DAO 메서드 구현하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;member 테이블에 저장되어 있는 데이터들을 가져와서 출력해주는 서블릿을 하나 만든다.&lt;/li&gt;
  &lt;li&gt;이름은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MemberListController&lt;/code&gt; 다.&lt;/li&gt;
  &lt;li&gt;MemberDAO에서 전체 회원리스트를 가져오는 메서드를 구현한다.&lt;/li&gt;
  &lt;li&gt;이번 select 쿼리는 executeUpdate가 아닌 executeQuery 라는 메서드로, 실행을 시킨다.&lt;br /&gt;
실행을 하면, 반환값은 ResultSet이기 때문에, 위에 만들어준 ResultSet 형 변수 rs로 대입시킨다.&lt;/li&gt;
  &lt;li&gt;그리고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rs.next()&lt;/code&gt; 라는 함수를 이용해서, 값을 받아올 수 있을 때까지 받아온다.&lt;/li&gt;
  &lt;li&gt;그 다음, ArrayList를 만들어서, 값을 저장하면 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;// 전체 회원 리스트 가져오기&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MemberVO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;memberGetList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SQL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;select * from member&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		
		&lt;span class=&quot;c1&quot;&gt;// 데이터베이스 연결&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;getConnect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		
		&lt;span class=&quot;nc&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MemberVO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MemberVO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;
		
		&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;prepareStatement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SQL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			
			&lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;executeQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
			
			&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;number&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;age&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;phone&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;nc&quot;&gt;MemberVO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MemberVO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;dbClose&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;c1&quot;&gt;// 데이터베이스 연결 해제&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dbClose&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Mon, 18 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//study/0009/</link>
        <guid isPermaLink="true">http://localhost:4000//study/0009/</guid>
        
        <category>Servlet</category>
        
        <category>서블릿</category>
        
        <category>JAVA</category>
        
        <category>servlet</category>
        
        <category>비지니스 로직</category>
        
        <category>프리젠테이션 로직</category>
        
        <category>회원가입</category>
        
        <category>서블릿 회원가입</category>
        
        
        <category>Study</category>
        
      </item>
    
      <item>
        <title>[Servlet] 08. 회원가입 구현하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/java.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;br /&gt;
MVC 1단계인, Servlet 환경으로만 만들어보고, MVC 2단계로 넘어가고&lt;br /&gt;
나중에는 Spring Framework를 사용하는 방식의 강의입니다.&lt;br /&gt;
MVC 1단계는, Controller + Model 만을 사용하는 방식입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-회원-저장-메서드-생성&quot;&gt;1. 회원 저장 메서드 생성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;memberInsert&lt;/code&gt; 라는 이름을 가진 메서드를 만들고, 매개변수를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MemberVO&lt;/code&gt; 클래스의 변수를 이용해서&lt;br /&gt;
받아온 값을 저장해주면 된다. 일일히 변수에 대한 데이터값을 파라미터로 받지 않고 말이다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;그럼 받아온 값을, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;insert&lt;/code&gt; 쿼리로 데이터베이스에 저장하면 된다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;메서드 안에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;String SQL = &quot;insert into member(id, pass, name, age, email, phone) values(?,?,?,?,?,?)&quot;;&lt;/code&gt; 라는 쿼리문을 만들어준다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;쿼리문에서, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;?&lt;/code&gt;를 파라미터라고 한다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;getConnect 함수를 호출해서, 데이터베이스를 연결할 수 있게 Connection 객체를 만들어주고&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PreparedStatement&lt;/code&gt; 형 변수를 이용해서, SQL 문장을 전송할 수 있는 객체를 생성해서, 미리 컴파일을 시킨다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;미리 컴파일을 시키는 이유는 속도가 빠르기 때문이다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;이제 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;?&lt;/code&gt; 로 된 쿼리 파라미터에 값만 추가해주고, 데이터베이스에 전송시키면 된다.&lt;/li&gt;
  &lt;li&gt;코드는 다음과 같다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;memberInsert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MemberVO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// 1. ? (파라미터 ) 순서는 1 2 3 4 5 6 으로, 0번이 아닌 1번으로 시작한다.&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SQL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;insert into member(id, password, name, age, email, phone) values(?,?,?,?,?,?)&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;success&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		
		&lt;span class=&quot;c1&quot;&gt;// 2. Connection 객체 만들기&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;getConnect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		
		&lt;span class=&quot;c1&quot;&gt;// 3. SQL 문장을 전송하는 객체 생성하기&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;prepareStatement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SQL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// 미리 컴파일을 시킨다. ( 속도가 빠르다. )&lt;/span&gt;
			
			&lt;span class=&quot;c1&quot;&gt;// 4. 파라미터에 값 추가하기&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getEmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getPhone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
			
			&lt;span class=&quot;c1&quot;&gt;// 5. 전송&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;success&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;executeUpdate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// executeUpdate는, 0 or 1이 반환되는데. 반환 값이 0이면 전송이 실패된것이고 1이면 전송이 잘 된 것으로 처리가 된다.&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-controller에서-회원저장-메서드-실행하기&quot;&gt;2. Controller에서, 회원저장 메서드 실행하기&lt;/h3&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;		&lt;span class=&quot;nc&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		
		&lt;span class=&quot;c1&quot;&gt;// Model과 연동하기&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;MemberDAO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dao&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MemberDAO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;success&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;memberInsert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;success&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;c1&quot;&gt;// 가입 성공시&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;insert success!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;c1&quot;&gt;// 가입 실패시 예외객체를 만들어서 WAS(톰캣서버) 에게 던진다.&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;not insert!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-mysql-실행하기&quot;&gt;3. MySQL 실행하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;이전 공부내용에서, MySQL 실행하듯이 실행하고 서버를 실행해서 데이터들을 입력하고 가입버튼을 클릭해보자.&lt;br /&gt;
insert success! 라는 내용이 출력되면, sql 파일로 쿼리를 실행해서 데이터가 잘 들어갔는 지 확인하자. 난 잘됐다.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-sql-results-메뉴에-plug-in-error가-발생할-경우-해결법&quot;&gt;4. SQL Results 메뉴에 plug-in error가 발생할 경우 해결법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;이클립스를 잠시 닫는다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;프로젝트가 들어있는 상위 폴더로 가서, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.metadata&lt;/code&gt; 를 클릭한다.&lt;/li&gt;
  &lt;li&gt;org.eclipse.datatools.sqltools.result 폴더 안에 들어가서 results라는 파일을 지워주고 실행하면 해결된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Sun, 17 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//study/0008/</link>
        <guid isPermaLink="true">http://localhost:4000//study/0008/</guid>
        
        <category>Servlet</category>
        
        <category>서블릿</category>
        
        <category>JAVA</category>
        
        <category>servlet</category>
        
        <category>비지니스 로직</category>
        
        <category>프리젠테이션 로직</category>
        
        <category>회원가입</category>
        
        <category>서블릿 회원가입</category>
        
        
        <category>Study</category>
        
      </item>
    
      <item>
        <title>[Servlet] 07. 한글처리와 JDBC(DAO)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/java.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;br /&gt;
MVC 1단계인, Servlet 환경으로만 만들어보고, MVC 2단계로 넘어가고&lt;br /&gt;
나중에는 Spring Framework를 사용하는 방식의 강의입니다.&lt;br /&gt;
MVC 1단계는, Controller + Model 만을 사용하는 방식입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-한글처리-방법&quot;&gt;1. 한글처리 방법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;영어와는 다르게 한글은 한글자당 2byte를 가지고 있다. 영어는 1byte다. (이건 알고 있는 내용이니깐..)&lt;br /&gt;
이름에 한글을 입력하게 되면 다음과 같이 출력이 된다.&lt;br /&gt;
&lt;img src=&quot;/images/2022-04-15/01.PNG&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;그럼 한글이 깨지지 않게 하는 방법을 한 번 알아보도록 하자.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;방법은 간단하다. 클라이언트에서 온 데이터는 request를 통해 전달받기 때문에, request의 인코딩 방식을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;utf-8&lt;/code&gt; 로 변경해주면 된다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;request.setCharacterEncoding(&quot;utf-8&quot;);&lt;/code&gt;를 추가해주자&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;@WebServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/memberInsert.do&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MemberInsertController&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpServlet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serialVersionUID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
       
	&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		
		&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setCharacterEncoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// 1. 클라이언트에서 넘어온 파라미터 수집(VO에 하나의 정보로 묶어서 넣어주면 된다.)&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;age&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;phone&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		
		&lt;span class=&quot;c1&quot;&gt;// vo 수집은, 생성자로 해도 되고, Setter로 해도 된다.&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;//MemberVO vo = new MemberVO(id, password, name, age, email, phone);&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;MemberVO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MemberVO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setEmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setPhone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;phone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		
		&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-데이터-베이스-연결&quot;&gt;2. 데이터 베이스 연결&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터베이스를 연결하기 위해서는, URL과, user, password가 필요하다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;user와 password는 데이터베이스를 만들 때 생성한 이름과 암호를 변수에 넣어주면 되고&lt;br /&gt;
주소는 다음과 같이 찾을 수 있다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Data Source Explorer&lt;/code&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SQL 데이터베이스 오른쪽 마우스 클릭&lt;/code&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Properties&lt;/code&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Driver Properties&lt;/code&gt; 를 누르면, URL이 나온다.&lt;/li&gt;
  &lt;li&gt;해당 URL을 복사해서, 변수에 저장한다.&lt;/li&gt;
  &lt;li&gt;그리고, DB회사에서 제공해주는 driver를 다운받거나, 전자정부 프레임워크를 사용한다면&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;maven&lt;/code&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;repository&lt;/code&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mysql&lt;/code&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mysql-connector-java&lt;/code&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;원하는 버전&lt;/code&gt; 에서&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mysql-connector-java-version&lt;/code&gt;을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WEB-INF&lt;/code&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib&lt;/code&gt; 폴더에 복사해주면 된다.&lt;/li&gt;
  &lt;li&gt;그 다음, Driver를 로딩해줘야 한다. MySQL은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;com.mysql.jdbc.Driver&lt;/code&gt; 이다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Class.forName(&quot;com.mysql.jdbc.Driver&quot;)&lt;/code&gt; 을 try catch 문을 이용해, Driver 클래스를 찾고&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DriverManager.getConnection(URL, user, password);&lt;/code&gt; 를 해주면 되는데, getConnection은, 데이터베이스 연결정보들을 반환한다.&lt;br /&gt;
그게 바로 Connection 클래스형태로 반환을 하기 때문에, conn이란 변수에 반환된 값을 대입하면 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-데이터베이스-driver란&quot;&gt;3. 데이터베이스 Driver란?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;대표적인 데이터베이스로, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MySQL&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ORACLE&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MS-SQL&lt;/code&gt;이 있다.&lt;br /&gt;
그런데 만약 이 회사들이 사용하는 API가 다르다면 어떻게 될까?&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MySQL&lt;/code&gt;로 만들어진 프로젝트에서 갑자기 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MS-SQL&lt;/code&gt;로 바뀐다..? 그럼 하나하나 다시 전부 바꿔줘야하는가? 그건 아니다.&lt;br /&gt;
그래서 각자 프로그램에서 제공하는 것이 Driver다.&lt;br /&gt;
자바에서 제공하는 interface를 가지고, 각 DB 회사들은 자신들만의 클래스를 만든다.&lt;br /&gt;
그럼 해당 회사들이 그 클래스들을 제공하도록 하는 것이 바로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Driver&lt;/code&gt;가 된다.&lt;br /&gt;
그래서 자바 개발자들은, JDBC(java.sql)만 알면 되고, 각 회사에 맞는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Driver&lt;/code&gt;만 있으면 사용이 가능해진다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;연결이 되는 지 안되는 지는 다음 강의에서, insert 쿼리를 만들면서 확인을 해볼 것이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Fri, 15 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//study/0007/</link>
        <guid isPermaLink="true">http://localhost:4000//study/0007/</guid>
        
        <category>Servlet</category>
        
        <category>서블릿</category>
        
        <category>JAVA</category>
        
        <category>servlet</category>
        
        <category>비지니스 로직</category>
        
        <category>프리젠테이션 로직</category>
        
        <category>MVC</category>
        
        <category>DAO</category>
        
        <category>JDBC</category>
        
        <category>한글처리</category>
        
        
        <category>Study</category>
        
      </item>
    
      <item>
        <title>[Servlet] 06. 회원관리 UI 및 파라미터 수집(VO) 하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/java.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;br /&gt;
MVC 1단계인, Servlet 환경으로만 만들어보고, MVC 2단계로 넘어가고&lt;br /&gt;
나중에는 Spring Framework를 사용하는 방식의 강의입니다.&lt;br /&gt;
MVC 1단계는, Controller + Model 만을 사용하는 방식입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-servlet에서-controller와-model의-동작원리&quot;&gt;1. Servlet에서 Controller와 Model의 동작원리&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Servlet에서, Controller는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Servlet&lt;/code&gt;으로, Model은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Java class&lt;/code&gt; 파일로 만든다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;모델은 데이터베이스를 연동하는 DAO를 만든다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;JDBC로, DAO와 DB를 연결한다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;DAO에는, method들이 있을 것이고 생성,삭제,업데이트,추가와 같은 기능을 하는 메서드들이 있을 것이다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;Client가 요청을 Controller에게 하면, Controller가 Model(DAO) 에게, 해당 요청에 맞는 메서드를 실행하고&lt;br /&gt;
Model(DAO)에서, DB에 접근해서, 요청에 맞는 쿼리문을 실행하고, 그 값을 Controller에게 전달한다.&lt;br /&gt;
하지만 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Servlet&lt;/code&gt;에서, Controller는 View의 역할도 하기 때문에, 상당히 까다롭지만…&lt;br /&gt;
요청에 맞는 View를 실행시켜서 Client에게 응답한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-tables-generator-홈페이지에서-테이블-만들기&quot;&gt;2. Tables Generator 홈페이지에서 테이블 만들기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;테이블을 만들어서, 회원가입 틀을 만들 것이다. html 태그를 편하게 가져올 수 있게&lt;br /&gt;
&lt;a href=&quot;https://www.tablesgenerator.com/html_tables#&quot;&gt;Tables Generator&lt;/a&gt;라는 곳에서 7행 2열의 테이블을 쉽게 만들 수 있다.&lt;br /&gt;
File에, New table을 클릭해서, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Row : 7, Column : 2&lt;/code&gt;로 테이블을 생성한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Insert title here&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script
	&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.slim.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script
	&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script
	&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
	회원가입 화면
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;memberInsert.do&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;table&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;table table-bordered&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;아이디&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;패스워드&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;이름&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;나이&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;age&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;이메일&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;전화번호&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;phone&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;colspan=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;align=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;center&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;btn btn-primary&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;가입&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
					&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;btn btn-warning&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;reset&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;취소&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;만든 코드는 다음과 같다. 값을 다 입력하고, 전송버튼을 누르면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;form&lt;/code&gt; 태그에 있는 action 속성에 맵핑되어 있는 url로 넘어가서&lt;br /&gt;
DB에 있는 user 테이블에 값을 추가해주는 기능을 만들면 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-servlet을-만들자&quot;&gt;2. Servlet을 만들자.&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;controller 패키지에, MemberInsertController 서블릿을 만든다. 맵핑은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/memberInsert.do&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;@WebServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/memberInsert.do&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MemberInsertController&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpServlet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serialVersionUID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
       
	&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		
		&lt;span class=&quot;c1&quot;&gt;// 1. 클라이언트에서 넘어온 파라미터 수집(VO에 하나의 정보로 묶어서 넣어주면 된다.)&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;age&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;email&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;phone&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		
		&lt;span class=&quot;c1&quot;&gt;// vo 수집은, 생성자로 해도 되고, Setter로 해도 된다.&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;//MemberVO vo = new MemberVO(id, password, name, age, email, phone);&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;MemberVO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MemberVO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setEmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setPhone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;phone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		
		&lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;코드는 위에처럼 짰다. DB작업은 다음 강의에서 공부를 할 수 있을 것 같다.&lt;/li&gt;
  &lt;li&gt;일단, 이 상태로 테스트를 진행해보자. 그런데, 404 에러가 뜬다. 그 이유가 있다.&lt;br /&gt;
memberRegister.html에 있는 form 태그에 action 속성이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/memberInsert.do&lt;/code&gt; 로 되어 있다.&lt;br /&gt;
이렇게 되면, 경로가 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;member/memberInsert.do&lt;/code&gt;로 나오게 되기 때문에&lt;br /&gt;
action의 속성을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;../memberInsert.do&lt;/code&gt;로 만들어줘야 한다.&lt;br /&gt;
그리고 다시 서버를 껐다 킨 다음, 테스트를 진행해보면, Console창에 잘 뜨게 된다. 아주 귀찮다..&lt;br /&gt;
Spring이라면 더 편하게 했을텐데ㅠㅠ하지만 Spring까진 많은 강의가 남았고..&lt;br /&gt;
기본을 알아둬야 나중에 편하기 때문에.. 귀찮더라도 열심히 하자ㅠㅠ&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Thu, 14 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//study/0006/</link>
        <guid isPermaLink="true">http://localhost:4000//study/0006/</guid>
        
        <category>Servlet</category>
        
        <category>서블릿</category>
        
        <category>JAVA</category>
        
        <category>servlet</category>
        
        <category>비지니스 로직</category>
        
        <category>프리젠테이션 로직</category>
        
        <category>MVC</category>
        
        <category>VO</category>
        
        
        <category>Study</category>
        
      </item>
    
      <item>
        <title>[Servlet] 05. Controller에서 Model 분리하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/java.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;br /&gt;
MVC 1단계인, Servlet 환경으로만 만들어보고, MVC 2단계로 넘어가고&lt;br /&gt;
나중에는 Spring Framework를 사용하는 방식의 강의입니다.&lt;br /&gt;
MVC 1단계는, Controller + Model 만을 사용하는 방식입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-controller에서-계산하는-부분을-model로-빼보기&quot;&gt;1. Controller에서, 계산하는 부분을 Model로 빼보기&lt;/h3&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;@WebServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/calc.do&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CalcController&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpServlet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serialVersionUID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;su1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;su1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;su2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;su2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

		&lt;span class=&quot;nc&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

		&lt;span class=&quot;cm&quot;&gt;/*
		int sum = 0;

		for (int i = su1; i &amp;lt;= su2; i++) {
			sum += i;
		}
		*/&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;total : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;주석이 되어있는 부분을 모델로 빼서 변경을 해보자.&lt;/li&gt;
  &lt;li&gt;model 패키지에, MyCalc 라는 java 클래스 파일을 만든다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyCalc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;su1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;su2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;su1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;su2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;이제 기존 서블릿 클래스에, MyCalc를 생성하고 sum 함수를 실행해서 변수에 넣어주고, 응답해주면 끝.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;@WebServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/calc.do&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CalcController&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpServlet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serialVersionUID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// 1. 클라이언트에서 넘어오는 폼 파라미터 받기 ( 파라미터 수집, su1, su2 )&lt;/span&gt;

		&lt;span class=&quot;cm&quot;&gt;/*
		 * 서블릿에서 파라미터는 무조건 String만 받을 수 있기 때문에 Integer.parseInt 함수를 사용해서 문자열을 정수형으로
		 * 변환한다.
		 */&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;su1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;su1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;su2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;su2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

		&lt;span class=&quot;nc&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

		&lt;span class=&quot;cm&quot;&gt;/*
		 * int sum = 0;
		 * 
		 * for (int i = su1; i &amp;lt;= su2; i++) { sum += i; }
		   out.println(&quot;total : &quot; + sum);
		 */&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;// 윗 부분(주석되어 있는 코드)을 아랫부분으로 변경&lt;/span&gt;

		&lt;span class=&quot;nc&quot;&gt;MyCalc&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myCalc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyCalc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myCalc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;su1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;su2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;total : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Thu, 14 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//study/0005/</link>
        <guid isPermaLink="true">http://localhost:4000//study/0005/</guid>
        
        <category>Servlet</category>
        
        <category>서블릿</category>
        
        <category>JAVA</category>
        
        <category>servlet</category>
        
        <category>비지니스 로직</category>
        
        <category>프리젠테이션 로직</category>
        
        <category>Controller</category>
        
        <category>MVC</category>
        
        <category>Model</category>
        
        
        <category>Study</category>
        
      </item>
    
      <item>
        <title>[Servlet] 04. GET과 POST 요청 이해하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/java.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;br /&gt;
MVC 1단계인, Servlet 환경으로만 만들어보고, MVC 2단계로 넘어가고&lt;br /&gt;
나중에는 Spring Framework를 사용하는 방식의 강의입니다.&lt;br /&gt;
MVC 1단계는, Controller + Model 만을 사용하는 방식입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-get-방식의-특징&quot;&gt;1. GET 방식의 특징&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;URL에 변수(데이터)를 포함시켜 전송시킨다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;데이터를 Header에 포함하여 전송한다.&lt;/li&gt;
  &lt;li&gt;URL에 데이터가 노출되어 보안에 취약하다.&lt;/li&gt;
  &lt;li&gt;캐싱을 할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-post-방식의-특징&quot;&gt;2. POST 방식의 특징&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;URL에 변수(데이터)를 노출하지 않고 요청한다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;데이터를 Body에 포함시킨다.&lt;/li&gt;
  &lt;li&gt;URL에 데이터가 노출되지 않아 기본적인 보안은 되어있다.&lt;/li&gt;
  &lt;li&gt;캐싱을 할 수 없다.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-get-방식과-post-방식이-사용되는-종류&quot;&gt;3. GET 방식과 POST 방식이 사용되는 종류&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;POST
    &lt;ul&gt;
      &lt;li&gt;POST는, 회원가입이나 글쓰기에 많이 사용되고, form 태그로 데이터를 전송을 할 경우 POST 방식을 주로 사용한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;GET
    &lt;ul&gt;
      &lt;li&gt;GET은, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 태그로 링크를 걸어서 넘길 때 많이 사용된다. GET 방식에서, ?가 붙은 부분들을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;querystring(쿼리스트링)&lt;/code&gt; 이라고 부른다.&lt;br /&gt;
  쿼리스트링은 공백을 사용할 수가 없다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Thu, 14 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//study/0004/</link>
        <guid isPermaLink="true">http://localhost:4000//study/0004/</guid>
        
        <category>Servlet</category>
        
        <category>서블릿</category>
        
        <category>JAVA</category>
        
        <category>servlet</category>
        
        <category>비지니스 로직</category>
        
        <category>프리젠테이션 로직</category>
        
        <category>GET</category>
        
        <category>POST</category>
        
        
        <category>Study</category>
        
      </item>
    
      <item>
        <title>[Servlet] 03. 요청(HttpServletRequest)과 응답(HttpServletResponse) 이해하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/java.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;br /&gt;
MVC 1단계인, Servlet 환경으로만 만들어보고, MVC 2단계로 넘어가고&lt;br /&gt;
나중에는 Spring Framework를 사용하는 방식의 강의입니다.&lt;br /&gt;
MVC 1단계는, Controller + Model 만을 사용하는 방식입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-controller-역할에서의-코드를-보고-실행하는-로직-생각해보기&quot;&gt;1. Controller 역할에서의 코드를 보고, 실행하는 로직 생각해보기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;jsp에, form 태그에 action 속성에는 calc.do 라고 맵핑이 되어 있다.&lt;/li&gt;
  &lt;li&gt;submit 버튼을 클릭하면, input의 name으로 되어 있는 값들이 변수가 되어 해당 값들을 calc.do에 넘겨주게(요청) 된다.&lt;br /&gt;
이 때 넘어가는 정보를 요청정보라고 한다. 요청정보는 하나의 패킷으로 전송된다. 패킷은, header와 body로 이루어져있다.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;header에 들어있는 값(예)
    &lt;ul&gt;
      &lt;li&gt;ip정보 : 127.87.35.1&lt;/li&gt;
      &lt;li&gt;port정보 : 9000&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;body에 들어있는 값
    &lt;ul&gt;
      &lt;li&gt;su1 = 1&lt;/li&gt;
      &lt;li&gt;su2 = 100&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;톰캣은 header와 body 정보를 먼저 받아야한다. 그러기 위해서는 2개의 객체를 만들게 된다.&lt;br /&gt;
그 객체가 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HttpServletRequest(요청객체)&lt;/code&gt; 와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HttpServletResponse(응답객체)&lt;/code&gt; 객체이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-httpservletrequest란&quot;&gt;2. HttpServletRequest란?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;WAS(tomcat 서버)가 패킷을 받으면, 생성하게 되는 2개의 객체 중 하나로, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;요청객체&lt;/code&gt;이다.&lt;/li&gt;
  &lt;li&gt;클라이언트가 요청을 하면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HttpServletRequest&lt;/code&gt;는 header와 body를 저장하게 된다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HttpServletRequest&lt;/code&gt; 형 변수가 service라는 메서드 안에 매개변수로 되어 있고&lt;br /&gt;
해당 변수에서 getParameter라는 함수에, body의 키값을 입력하면 값을 받아오게 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-httpservletresponse란&quot;&gt;3. HttpServletResponse란?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;WAS(tomcat 서버)가 패킷을 받으면, 생성하게 되는 2개의 객체 중 하나로, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;응답객체&lt;/code&gt;이다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HttpServletResponse&lt;/code&gt;는 패킷에서 body가 아닌 header 정보를 가지게 된다.&lt;br /&gt;
그래야 요청받은 값을 프로그래밍해서, 클라이언트에게 응답해줄 수 있기 때문이다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HttpServletResponse&lt;/code&gt; 형 변수가 service 메서드 안에 매개변수로 되어 있고&lt;br /&gt;
해당 변수에서 getWriter라는 함수에는 클라이언트의 정보가 담겨있고&lt;br /&gt;
그 정보를 PrintWriter형 변수에 대입하게 되면 빨대 역할을 하게 된다.&lt;br /&gt;
그 빨대에, println 함수로, html이나 값을 넣어서 클라이언트에게 응답하게 되는 것이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-get과-post-방식의-차이점&quot;&gt;4. GET과 POST 방식의 차이점&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;html 또는 jsp에서, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 태그는 기본적으로, GET 방식을 사용한다.&lt;br /&gt;
그런데, 숫자를 입력하고, calc.do로 넘어가게 되면&lt;br /&gt;
url에 /calc.do?su1=1&amp;amp;su2=100 이라고 값이 보여버리게 된다.&lt;br /&gt;
하지만, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;form method=&quot;post&quot;&amp;gt;&lt;/code&gt; 라고 post 방식으로 변경하면, url에 보여지지 않는다.&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;GET 방식의 특징
    &lt;ul&gt;
      &lt;li&gt;보안에 취약하다.&lt;/li&gt;
      &lt;li&gt;데이터의 한계가 온다. url을 이용해서 서버로 넘기기 때문이다.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;POST 방식
    &lt;ul&gt;
      &lt;li&gt;packet에 쌓아서 넘기기 때문에, 보안성이 좋다.&lt;/li&gt;
      &lt;li&gt;또한 데이터의 한계도 없고 용량제한도 없다.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;보통 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;form&lt;/code&gt; 태그를 사용한다면, POST 방식으로 사용하는 것이 좋다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;다음 공부 내용은, GET과 POST 요청 이해하기이다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Thu, 14 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//study/0003/</link>
        <guid isPermaLink="true">http://localhost:4000//study/0003/</guid>
        
        <category>Servlet</category>
        
        <category>서블릿</category>
        
        <category>JAVA</category>
        
        <category>servlet</category>
        
        <category>비지니스 로직</category>
        
        <category>프리젠테이션 로직</category>
        
        <category>HttpServlet</category>
        
        <category>Request</category>
        
        <category>Response</category>
        
        
        <category>Study</category>
        
      </item>
    
      <item>
        <title>[Jasper] 01. Jasper란 무엇인가?</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/jasper.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;안녕하세요. ‘Nerd-Lee’ 입니다.&lt;br /&gt;
이번엔, Jaspersoft Studio가 어떤 것인지에 대해서 알아보도록 하겠습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-jaspersoft-studio&quot;&gt;1. Jaspersoft Studio&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://community.jaspersoft.com/project/jaspersoft-studio&quot;&gt;Jaspersoft Studio&lt;/a&gt;란, Eclipse 기반의 리포팅 도구이고 iReport Designer라는 Eclipse의 플러그인을 독립형 애플리케이션인 Jaspersoft Studio로 새로 작성된 프로그램입니다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;특징은, 독립형 방식으로 사용할 수 있고, JasperReport Server와도 연동이 가능하다고 합니다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;기능으로는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WYSIWYG(위지위그)&lt;/code&gt; 방식 리포트 UI 디자인과 데이터 소스 연결을 통한 차트와 보고서를 생성할 수 있고, HTML, PPT, DOC, XLS, PDF 등의 다양한 방식으로 내보내기가 가능합니다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;여기서 WYSIWYG란, What You See Is What You Get의 약자로 보이는대로 표현이 가능하다라는 말과 같습니다. 말 그대로, 사용자 입장에서는 복잡한 코드를 작성해서 만드는 것이 아니라, 코드들을 몰라도, 눈에 보이는 대로 작성을 할 수 있습니다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;하나의 예로, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;안녕하세요.&lt;/code&gt; 라는 내용을 블로그에서 적는데 사용자는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt;안녕하세요.&amp;lt;/p&amp;gt;&lt;/code&gt; 라고 직접 적지 않는 것이라고 생각하면 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-jaspersoft-studio-설치-방법&quot;&gt;2. Jaspersoft Studio 설치 방법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;기본적으로, Jaspersoft Studio를 실행하기 위해서는 JDK가 설치가 되어 있어야 합니다.&lt;br /&gt;명령 프롬프트창(cmd)을 열고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;java -version&lt;/code&gt;을 실행해서 설치된 JDK 버전을 확인합니다.&lt;br /&gt;
만약 JAVA가 설치가 되지 않았다면, 설치를 해주시고 Jaspersoft Studio를 설치하셔야 합니다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://community.jaspersoft.com/&quot;&gt;Jaspersoft studio 홈페이지&lt;/a&gt;를 클릭하시고, 우측에 Download Now 버튼 클릭 후&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Jaspersoft Studio&lt;/code&gt; Download 버튼을 클릭한 다음, 자신의 OS 환경에 맞는 파일을 설치하면 됩니다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;로그인이나 회원가입을 요청하면, 오른쪽 하단에 있는 No Thanks를 클릭하시면 됩니다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;설치방법은, 설치하시는 방법 그대로, next랑 finish 버튼만 눌러주시면 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Thu, 14 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//jasper/0001/</link>
        <guid isPermaLink="true">http://localhost:4000//jasper/0001/</guid>
        
        <category>Jasper</category>
        
        <category>자스퍼</category>
        
        <category>Jasper Studio</category>
        
        <category>WYSIWYG</category>
        
        <category>위지위그</category>
        
        
        <category>Jasper</category>
        
      </item>
    
      <item>
        <title>Ajax FormData 사용할 때 Illegal invocation 에러 해결 방법</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/error.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;Ajax로 통신을 할 때, FormData형의 데이터를 넘길 때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Illegal invocation&lt;/code&gt; 이란 값이 나올 수 있다.&lt;br /&gt;
Ajax에, 옵션값을 두개 추가하면 된다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;processData : false&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;서버로 보내지는 data는 “application/x-www-form-urlencoded”에 맞는 쿼리 문자열로 처리 및 변환된 형태라고 한다.
        &lt;ul&gt;
          &lt;li&gt;DOMDocument 또는 처리되지 않은 데이터를 보낼 때에는, 이 옵션값을 false로 지정해야한다고 한다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;contentType: false&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;default 값은, “application/x-www-form-urlencoded; charset=UTF-8” 라고 한다.&lt;/li&gt;
      &lt;li&gt;“multipart/form-data” 로 전송이 되게 옵션값을 false로 지정해야 한다고 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;도움이 된 글
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://bravesuccess.tistory.com/274&quot;&gt;Ajax formData 사용 시 Illegal invocation 해결 방법&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 13 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//error/0008/</link>
        <guid isPermaLink="true">http://localhost:4000//error/0008/</guid>
        
        <category>Ajax</category>
        
        <category>FormData</category>
        
        <category>Illegal invocation</category>
        
        <category>Ajax FormData</category>
        
        
        <category>Error</category>
        
      </item>
    
      <item>
        <title>HttpMediaTypeNotSupportedException 에러 해결 방법</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/error.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;해당 오류는, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@RequestBody&lt;/code&gt; 어노테이션 때문에 생기는 문제이다. &lt;br /&gt;
기존 코드는, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@RequestBody&lt;/code&gt; 어노테이션으로 http의 요청 본문을 가져와서, VO에 담아놓는 방식이였으나&lt;br /&gt;
Resolved [org.springframework.web.HttpMediaTypeNotSupportedException:&lt;br /&gt;Content type ‘application/x-www-form-urlencoded;charset=UTF-8’ not supported 와 같은 오류를 내서 찾아봤더니&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@RequestBody&lt;/code&gt; 어노테이션 사용으로 인해 생기는 오류라는 말이 있어서, 없애고 실행해봤더니 잘 됐다.&lt;br /&gt;
왜 그런지는 이유를 모르겠다. 예상해보자면, Json이 아닌 FormData 방식으로 요청을 하면 body에서 들어오는 방식이 다르기 때문에&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@RequestBody&lt;/code&gt;를 사용하면 이상하게 되는 것이 아닌가라는 생각을 해본다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;아는 분 계시다면 댓글 남겨주세요ㅠㅠ&lt;/p&gt;

&lt;hr /&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!
&lt;/div&gt;
</description>
        <pubDate>Wed, 13 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//error/0007/</link>
        <guid isPermaLink="true">http://localhost:4000//error/0007/</guid>
        
        <category>HttpMediaTypeNotSupportedException</category>
        
        <category>Spring</category>
        
        <category>Spring Error</category>
        
        <category>Content type &apos;application/x-www-form-urlencoded;charset=UTF-8&apos; not supported</category>
        
        
        <category>Error</category>
        
      </item>
    
      <item>
        <title>[Servlet] 02. Controller의 역할</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/java.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;br /&gt;
MVC 1단계인, Servlet 환경으로만 만들어보고, MVC 2단계로 넘어가고&lt;br /&gt;
나중에는 Spring Framework를 사용하는 방식의 강의입니다.&lt;br /&gt;
MVC 1단계는, Controller + Model 만을 사용하는 방식입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-테스트-html-파일-만들기&quot;&gt;1. 테스트 html 파일 만들기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;두 숫자를 입력해서, 전송버튼을 누르면 서블릿으로 넘겨서 계산을 하고, 그 값이 html 파일로 응답하는 예제&lt;/li&gt;
  &lt;li&gt;수1~수2까지의 합을 더하는 예제&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script
	&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.slim.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script
	&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script
	&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Insert title here&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;table&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;table&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;수1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;su1&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;

		&lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;수2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;su2&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;colspan=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;전송&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;btn btn-primary&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;취소&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;btn btn-warning&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-서블릿으로-넘기는-과정-공부&quot;&gt;2. 서블릿으로 넘기는 과정 공부&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;일단, input 태그에 있는 name이 변수역할을 한다. 웹에서는 파라미터라고 부른다.&lt;/li&gt;
  &lt;li&gt;전송과 취소를 눌러도 아무런 반응을 하지 않는다. 이건 당연한 것이다.&lt;br /&gt;
아무런 기능을 제공하지 않고 있기 때문이다.&lt;/li&gt;
  &lt;li&gt;데이터를 입력받기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 태그를 이용한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;table&amp;gt;&lt;/code&gt; 태그의 부모로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 태그를 열고 닫아준다.&lt;/li&gt;
  &lt;li&gt;그리고 취소 버튼의 type을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reset&lt;/code&gt; 으로 변경을 해본다.&lt;/li&gt;
  &lt;li&gt;전송버튼의 type은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;submit&lt;/code&gt; 으로 변경한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script
	&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.slim.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script
	&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script
	&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Insert title here&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;table&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;table&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;수1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;su1&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;

		&lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;수2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;su2&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;colspan=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;전송&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;btn btn-primary&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
				&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;reset&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;취소&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;btn btn-warning&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;이대로 하면, 취소버튼을 누를 경우, input창에 있는 값이 reset이 되고&lt;br /&gt;
전송버튼을 누르게 되면, url에 쿼리가 추가가 되는데, 쿼리는 input의 name 부분과 값으로 되어있다.&lt;/li&gt;
  &lt;li&gt;이제 form 태그에 action 이란 속성을 이용해서, 서블릿에 전송을 해주는 역할을 만들어줘야 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;calc.do&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-서블릿-만들기&quot;&gt;3. 서블릿 만들기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;CalcController 라는, 서블릿을 하나 만들고, URL 맵핑을, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/calc.do&lt;/code&gt;로 한다.&lt;/li&gt;
  &lt;li&gt;service 메서드에 있는 매개변수 중 request라는 변수로, 폼 파라미터가 넘어온다.&lt;/li&gt;
  &lt;li&gt;서블릿에서 파라미터는 무조건 String만 받을 수 있기 때문에&lt;br /&gt;
Integer.parseInt 함수를 이용해서, 문자열을 정수형으로 변환해야 한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;response.getWriter()&lt;/code&gt;로 클라이언트의 정보를 PrintWriter로 얻어서 클라이언트에게 화면을 렌더링해준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.IOException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.PrintWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.ServletException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.annotation.WebServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.http.HttpServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.http.HttpServletRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.http.HttpServletResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@WebServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/calc.do&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CalcController&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpServlet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serialVersionUID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// 1. 클라이언트에서 넘어오는 폼 파라미터 받기 ( 파라미터 수집, su1, su2 )&lt;/span&gt;

		&lt;span class=&quot;cm&quot;&gt;/*
		 * 서블릿에서 파라미터는 무조건 String만 받을 수 있기 때문에 Integer.parseInt 함수를 사용해서 문자열을 정수형으로
		 * 변환한다.
		 */&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;su1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;su1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;su2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;su2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
		
		&lt;span class=&quot;nc&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;su1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;su2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;수1의 값을 더 크게 입력하세요.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;c1&quot;&gt;// su1 ~ su2 = ?&lt;/span&gt;
			&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

			&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;su1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;su2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

			&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;total : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;그리고 서버를 실행하면, 1과 100을 입력했을 때, calc.do로 url을 변경하면서
total : 5050 이란 값이 나오게 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Tue, 12 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//study/0002/</link>
        <guid isPermaLink="true">http://localhost:4000//study/0002/</guid>
        
        <category>Servlet</category>
        
        <category>서블릿</category>
        
        <category>JAVA</category>
        
        <category>servlet</category>
        
        <category>비지니스 로직</category>
        
        <category>프리젠테이션 로직</category>
        
        
        <category>Study</category>
        
      </item>
    
      <item>
        <title>스프링부트 Linux 서버에 배포 및 MySQL 설치하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/bootstrap.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;안녕하세요. ‘Nerd-Lee’ 입니다.&lt;br /&gt;
스프링부트 리눅스 서버에 배포하는 법과 MySQL 설치하는 방법에 대해서 정리해봤습니다.&lt;br /&gt;
완벽하진 않지만, 배운 내용이나 터득한 방법에 대해서 한 번 정리해봤으니 도움이 되시기를 바랍니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-filezlila--putty-설치&quot;&gt;1. FileZlila &amp;amp; Putty 설치&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FlieZilla&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Putty&lt;/code&gt;를 설치해서, 리눅스 서버를 쉽게 구동할 수 있다.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://filezilla-project.org/download.php?type=client&quot;&gt;FileZilla 다운로드 링크&lt;/a&gt; , &lt;a href=&quot;https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html&quot;&gt;Putty 다운로드 링크&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;그리고, ip주소, 포트번호, 서버 사용자 이름, 패스워드를 입력해서 실행하면 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-mysql-설치하기&quot;&gt;2. MySQL 설치하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;putty&lt;/code&gt;로 MySQL을 명령어를 입력해서, 설치 및 설정을 하면 된다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt update&lt;/code&gt; 라는 명령어를 입력해서 ubuntu 패키지 정보들을 업데이트한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt install mysql-server&lt;/code&gt; 명령어를 입력하면, mysql이 설치가 된다.&lt;/li&gt;
  &lt;li&gt;MySQL이 잘 설치되었는 지 확인하기 위해서, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dpkg -l | grep mysql-server&lt;/code&gt; 를 입력하자.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;ii  mysql-server  5.7.37-0ubuntu0.18.04.1  all  MySQL database server &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;metapackage depending on the latest version&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이런식으로 뜬다면, 설치가 성공한 것이다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MySQL가 실행이 되고 있는 지 확인하기 위해서는, netstat 이라는 것을 이용해서 확인해야 하는데&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo netstat -tap | grep mysql&lt;/code&gt; 명령어를 입력하자.&lt;br /&gt;
만약 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;netstat: command not found&lt;/code&gt; 에러가 발생하면 아래의 명령어를 입력하자.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt install net-tools&lt;/code&gt; 명령어를 입력해서, netstat을 설치하면 된다.&lt;/li&gt;
  &lt;li&gt;그리고 다시 시도하면, 실행중인 지 확인이 된다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd /etc/mysql/mysql.conf.d&lt;/code&gt; 폴더로 이동&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo vi mysqld.cnf&lt;/code&gt; 를 입력해서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bind-address&lt;/code&gt; 부분에, 127.0.0.1 ip를 0.0.0.0으로 변경하자&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo mysql&lt;/code&gt; 을 입력해서, MySQL을 실행하자.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;계정이름&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;%&apos;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;identified&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;패스워드&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                  &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;외부&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;접속&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;계정이름과&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;비밀번호를&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;설정하자&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;grant&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;privileges&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;계정이름&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;%&apos;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;grant&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;option&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;해당&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;계정이름에&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;권한을&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;부여하자&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;이 다음은 내가 한 부분이 아닌 상사가 한 부분이기 때문에, 만약 aws를 사용하는 개발자라면
&lt;a href=&quot;https://mirae-kim.tistory.com/73&quot;&gt;이 링크&lt;/a&gt;를 참고하는 것이 좋다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-java-설치하기&quot;&gt;3. JAVA 설치하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;오늘 출근하고 그냥 파일질라를 이용해서, JAVA를 지워서 처음 환경 그대로 다시 시도를 해보려고 했으나..&lt;br /&gt;
큰 오류를 발생할 줄은 몰랐다. putty에서, 삭제에 대한 명령어를 사용해서 삭제를 했어야했는데.. 에효..&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;java -version&lt;/code&gt; 을 입력해도, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&apos;java&apos; command not found&lt;/code&gt; 와 같은 로그만 뜨고..&lt;br /&gt;
그래서, 어쩔 수 없이 일단 sudo 명령어를 이용해서 삭제를 먼저 실행했다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get remove openjdk-8-jre
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get remove openjdk-8-jdk
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;그리고, 다시 java 8 버전을 설치를 해봤으나.. 소용이 없었다.. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;echo $JAVA_HOME&lt;/code&gt; 을 입력하면 경로는 뜨지만&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;java -version&lt;/code&gt;을 입력했을 때 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&apos;java&apos; command not found&lt;/code&gt; 가 뜨면 의미가 없어보인다.&lt;br /&gt;
그럼 11버전으로 사용해야지ㅎㅎ 만약 8버전을 사용할 예정이라면, 11을 8로 바꾸면 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;openjdk-11-jdk
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;openjdk-11-jre
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;이후, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;java -version&lt;/code&gt; 이나, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;javac -version&lt;/code&gt; 명령어를 입력하면 자바의 버전이 뜰 것이다.&lt;br /&gt;
만약 안뜬다면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo reboot now&lt;/code&gt;를 입력해서, 서버를 한 번 꺼주고&lt;br /&gt;
다시 파일질라와 putty로 서버에 접속을 해보자.&lt;/li&gt;
  &lt;li&gt;java 환경변수 설정을 해줘야한다. 환경변수 설정은 다음과 같다.&lt;br /&gt;
보통 자바가 설치된 경로는 /usr/lib/jvm 폴더에 설치가 되어있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nano /etc/profile
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;위의 명령어를 입력하면, 다음과 같은 텍스트들이 출력된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# /etc/profile: system-wide .profile file for the Bourne shell (sh(1))&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PS1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
  if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;BASH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$BASH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/bin/sh&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# The file bash.bashrc already sets the default PS1.&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# PS1=&apos;\h:\w\$ &apos;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; /etc/bash.bashrc &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; /etc/bash.bashrc
    &lt;span class=&quot;k&quot;&gt;fi
  else
    if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-eq&lt;/span&gt; 0 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
      &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PS1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;# &apos;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else
      &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PS1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;$ &apos;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fi
  fi
fi

if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; /etc/profile.d &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
  for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /etc/profile.d/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.sh&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
    if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;fi
  done
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;unset &lt;/span&gt;i
&lt;span class=&quot;k&quot;&gt;fi
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TMOUT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;324000
&lt;span class=&quot;nv&quot;&gt;HISTFILESIZE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;그럼 제일 마지막에 다음과 같은 문장을 추가해주자.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/lib/jvm/java-11-openjdk-amd64 // 만약 8 버전이면, 11대신 8입력
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$JAVA_HOME&lt;/span&gt;/bin/:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CLASS_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$JAVA_HOME&lt;/span&gt;/lib:&lt;span class=&quot;nv&quot;&gt;$CLASS_PATH&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;이렇게 문장을 추가해줬다면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + O&lt;/code&gt; 를 입력해주고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Enter&lt;/code&gt; 키 입력해서 저장해주고&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + X&lt;/code&gt; 키를 눌러서 밖으로 빠져나오자.&lt;/li&gt;
  &lt;li&gt;그리고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;source /etc/profile&lt;/code&gt; 을 입력해서, 추가된 문장을 적용시키고&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo reboot now&lt;/code&gt; 명령어를 입력해서 서버를 끄고, 다시 프로그램으로 접속을 한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;echo $JAVA_HOME&lt;/code&gt;과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$JAVA_HOME/bin/javac -version&lt;/code&gt;을 입력해서&lt;br /&gt;
환경변수가 제대로 설정이 잘 되었는 지 확인하자.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-tomcat-설치&quot;&gt;4. Tomcat 설치&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;나 같은 경우는, putty를 이용해서 tomcat을 설치하지 않고&lt;br /&gt;설치된 tomcat 8.5.5 버전을 Filezilla를 이용해서, 복사했다.&lt;/li&gt;
  &lt;li&gt;설치를 해도 방법은 비슷하다. 경로만 알고 있도록 하자.&lt;/li&gt;
  &lt;li&gt;설치는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt-get install tomcat&lt;/code&gt; 이란 명령어이다.&lt;/li&gt;
  &lt;li&gt;톰캣 버전을 확인하는 방법은, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd ${톰캣 경로}/bin&lt;/code&gt;로&lt;br /&gt;
톰캣 설치된 경로에 있는 bin 폴더를 참고하고 있도록 하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./version.sh&lt;/code&gt; 를 입력해서 실행하면 되는데..&lt;/li&gt;
  &lt;li&gt;Permission Error가 뜨는 경우가 있다. 그럴 땐, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chmod +x version.sh&lt;/code&gt; 를 입력해서&lt;br /&gt;
해당 파일을 실행할 수 있는 접근 권한을 허용시키고 다시 실행하자.&lt;/li&gt;
  &lt;li&gt;실행이 잘 되었다면, 톰캣 서버 버전과 OS 이름, 버전 등등 여러가지가 출력되는 것을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;5-톰캣서버-포트번호-설정&quot;&gt;5. 톰캣서버 포트번호 설정&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;톰캣서버가 깔려있는 경로로 이동하면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;conf&lt;/code&gt; 폴더가 있는데, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;conf&lt;/code&gt; 폴더로 이동한다.&lt;/li&gt;
  &lt;li&gt;그 안에 server.xml 파일을 열어본다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;$ apache-tomcat-8.5.5/conf $ vi server.xml
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;?xml &lt;span class=&quot;k&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0&quot;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;?&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt;
  Licensed &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; the Apache Software Foundation &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ASF&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; under one &lt;span class=&quot;nb&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;more&lt;/span&gt;
  contributor license agreements&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;  See the NOTICE &lt;span class=&quot;k&quot;&gt;file&lt;/span&gt; distributed with
  this work &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; additional information regarding copyright ownership&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
  The ASF licenses this &lt;span class=&quot;k&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; You under the Apache License&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Version &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;the &lt;span class=&quot;s2&quot;&gt;&quot;License&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;; you may not use this &lt;span class=&quot;k&quot;&gt;file&lt;/span&gt; except &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; compliance with
  the License&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;  You may obtain &lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;copy&lt;/span&gt; of the License at

      http&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;www&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;apache&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;org&lt;span class=&quot;sr&quot;&gt;/licenses/&lt;/span&gt;LICENSE&lt;span class=&quot;m&quot;&gt;-2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;

  Unless required by applicable law &lt;span class=&quot;nb&quot;&gt;or&lt;/span&gt; agreed &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; writing&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; software
  distributed under the License &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; distributed &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; an &lt;span class=&quot;s2&quot;&gt;&quot;AS IS&quot;&lt;/span&gt; BASIS&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; either express &lt;span class=&quot;nb&quot;&gt;or&lt;/span&gt; implied&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
  See the License &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; the specific &lt;span class=&quot;k&quot;&gt;language&lt;/span&gt; governing permissions &lt;span class=&quot;nb&quot;&gt;and&lt;/span&gt;
  limitations under the License&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt; Note&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  A &lt;span class=&quot;s2&quot;&gt;&quot;Server&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; not itself &lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Container&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;so&lt;/span&gt; you may not
     &lt;span class=&quot;nb&quot;&gt;define&lt;/span&gt; subcomponents such &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Valves&quot;&lt;/span&gt; at this level&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
     Documentation at &lt;span class=&quot;sr&quot;&gt;/docs/&lt;/span&gt;config/server&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;html
 &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Server port&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;8105&quot;&lt;/span&gt; shutdown&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SHUTDOWN&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Listener className&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.apache.catalina.startup.VersionLoggerListener&quot;&lt;/span&gt; /&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt; Security listener&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; Documentation at &lt;span class=&quot;sr&quot;&gt;/docs/&lt;/span&gt;config/listeners&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;html
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Listener className&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.apache.catalina.security.SecurityListener&quot;&lt;/span&gt; /&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt;APR library loader&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; Documentation at &lt;span class=&quot;sr&quot;&gt;/docs/&lt;/span&gt;apr&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;html &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Listener className&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.apache.catalina.core.AprLifecycleListener&quot;&lt;/span&gt; SSLEngine&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;on&quot;&lt;/span&gt; /&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt; Prevent memory leaks due &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; use of particular java/javax APIs&lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Listener className&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.apache.catalina.core.JreMemoryLeakPreventionListener&quot;&lt;/span&gt; /&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Listener className&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.apache.catalina.mbeans.GlobalResourcesLifecycleListener&quot;&lt;/span&gt; /&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Listener className&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.apache.catalina.core.ThreadLocalLeakPreventionListener&quot;&lt;/span&gt; /&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt; Global JNDI resources
       Documentation at &lt;span class=&quot;sr&quot;&gt;/docs/&lt;/span&gt;jndi&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;resources&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;howto&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;html
  &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;GlobalNamingResources&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt; Editable user database that can also be used by
         UserDatabaseRealm &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; authenticate users
    &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Resource name&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;UserDatabase&quot;&lt;/span&gt; auth&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Container&quot;&lt;/span&gt;
              &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.apache.catalina.UserDatabase&quot;&lt;/span&gt;
              description&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;User database that can be updated and saved&quot;&lt;/span&gt;
              factory&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.apache.catalina.users.MemoryUserDatabaseFactory&quot;&lt;/span&gt;
              pathname&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;conf/tomcat-users.xml&quot;&lt;/span&gt; /&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;/GlobalNamingResources&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt; A &lt;span class=&quot;s2&quot;&gt;&quot;Service&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; collection of one &lt;span class=&quot;nb&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;more&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Connectors&quot;&lt;/span&gt; that share
       &lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; single &lt;span class=&quot;s2&quot;&gt;&quot;Container&quot;&lt;/span&gt; Note&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  A &lt;span class=&quot;s2&quot;&gt;&quot;Service&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; not itself &lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Container&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;so&lt;/span&gt; you may not &lt;span class=&quot;nb&quot;&gt;define&lt;/span&gt; subcomponents such &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Valves&quot;&lt;/span&gt; at this level&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
       Documentation at &lt;span class=&quot;sr&quot;&gt;/docs/&lt;/span&gt;config/service&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;html
   &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Service name&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Catalina&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt;The connectors can use &lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; shared executor&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; you can &lt;span class=&quot;nb&quot;&gt;define&lt;/span&gt; one &lt;span class=&quot;nb&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;more&lt;/span&gt; named thread pools&lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Executor name&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tomcatThreadPool&quot;&lt;/span&gt; namePrefix&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;catalina-exec-&quot;&lt;/span&gt;
        maxThreads&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;150&quot;&lt;/span&gt; minSpareThreads&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;4&quot;&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;


    &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt; A &lt;span class=&quot;s2&quot;&gt;&quot;Connector&quot;&lt;/span&gt; represents an endpoint by which requests are received
         &lt;span class=&quot;nb&quot;&gt;and&lt;/span&gt; responses are returned&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; Documentation at &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
         Java HTTP Connector&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/docs/&lt;/span&gt;config/http&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;html
         Java AJP  Connector&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/docs/&lt;/span&gt;config/ajp&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;html
         APR &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;HTTP&lt;span class=&quot;sr&quot;&gt;/AJP) Connector: /&lt;/span&gt;docs/apr&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;html
         Define &lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; non&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;SSL&lt;span class=&quot;sr&quot;&gt;/TLS HTTP/&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; Connector &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; port &lt;span class=&quot;m&quot;&gt;8080&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;

    ★★★ 이 부분 중요
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Connector port&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;포트번호&quot;&lt;/span&gt; protocol&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HTTP/1.1&quot;&lt;/span&gt;
               connectionTimeout&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;20000&quot;&lt;/span&gt;
               redirectPort&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;리디렉트 포트번호&quot;&lt;/span&gt; /&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt; A &lt;span class=&quot;s2&quot;&gt;&quot;Connector&quot;&lt;/span&gt; using the shared thread pool&lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Connector executor&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tomcatThreadPool&quot;&lt;/span&gt;
               port&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;8080&quot;&lt;/span&gt; protocol&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HTTP/1.1&quot;&lt;/span&gt;
               connectionTimeout&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;20000&quot;&lt;/span&gt;
               redirectPort&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;8443&quot;&lt;/span&gt; /&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt; Define &lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; SSL&lt;span class=&quot;sr&quot;&gt;/TLS HTTP/&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; Connector &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; port &lt;span class=&quot;m&quot;&gt;8443&lt;/span&gt;
         This connector uses the NIO implementation with the JSSE engine&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; When
         using the JSSE engine&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; the JSSE configuration attributes must be used&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Connector port&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;8443&quot;&lt;/span&gt; protocol&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.apache.coyote.http11.Http11NioProtocol&quot;&lt;/span&gt;
               maxThreads&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;150&quot;&lt;/span&gt; SSLEnabled&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;SSLHostConfig&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Certificate certificateKeystoreFile&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;conf/localhost-rsa.jks&quot;&lt;/span&gt;
                         &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;RSA&quot;&lt;/span&gt; /&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;/SSLHostConfig&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;/Connector&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt; Define &lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; SSL&lt;span class=&quot;sr&quot;&gt;/TLS HTTP/&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; Connector &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; port &lt;span class=&quot;m&quot;&gt;8443&lt;/span&gt; with HTTP/&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
         This connector uses the APR/native implementation&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; When using the
         APR/native implementation &lt;span class=&quot;nb&quot;&gt;or&lt;/span&gt; the OpenSSL engine with NIO &lt;span class=&quot;nb&quot;&gt;or&lt;/span&gt; NIO2 then
         the OpenSSL configuration attributes must be used&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Connector port&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;8443&quot;&lt;/span&gt; protocol&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.apache.coyote.http11.Http11AprProtocol&quot;&lt;/span&gt;
               maxThreads&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;150&quot;&lt;/span&gt; SSLEnabled&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;UpgradeProtocol className&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.apache.coyote.http2.Http2Protocol&quot;&lt;/span&gt; /&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;SSLHostConfig&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Certificate certificateKeyFile&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;conf/localhost-rsa-key.pem&quot;&lt;/span&gt;
                         certificateFile&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;conf/localhost-rsa-cert.pem&quot;&lt;/span&gt;
                         certificateChainFile&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;conf/localhost-rsa-chain.pem&quot;&lt;/span&gt;
                         &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;RSA&quot;&lt;/span&gt; /&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;/SSLHostConfig&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;/Connector&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt; Define an AJP &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; Connector &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; port &lt;span class=&quot;m&quot;&gt;8009&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Connector port&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;8009&quot;&lt;/span&gt; protocol&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;AJP/1.3&quot;&lt;/span&gt; redirectPort&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;8443&quot;&lt;/span&gt; /&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;


    &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt; An Engine represents the entry point &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;within Catalina&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; that processes
         every request&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;  The Engine implementation &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; Tomcat stand alone
         analyzes the HTTP headers included with the request&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;and&lt;/span&gt; passes them
         &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; the appropriate Host &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;virtual host&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
         Documentation at &lt;span class=&quot;sr&quot;&gt;/docs/&lt;/span&gt;config/engine&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;html &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt; You should &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; jvmRoute &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; support load&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;balancing via AJP ie &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Engine name&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Catalina&quot;&lt;/span&gt; defaultHost&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;localhost&quot;&lt;/span&gt; jvmRoute&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;jvm1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Engine name&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Catalina&quot;&lt;/span&gt; defaultHost&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;localhost&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;

      &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt;For clustering&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; please take &lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; look at documentation at&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;sr&quot;&gt;/docs/&lt;/span&gt;cluster&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;howto&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;html  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;simple how &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;sr&quot;&gt;/docs/&lt;/span&gt;config/cluster&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;html &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;reference documentation&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Cluster className&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.apache.catalina.ha.tcp.SimpleTcpCluster&quot;&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;

      &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt; Use the LockOutRealm &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; prevent attempts &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; guess user passwords
           via &lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; brute&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;force attack &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Realm className&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.apache.catalina.realm.LockOutRealm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt; This Realm uses the UserDatabase configured &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; the global JNDI
             resources under the &lt;span class=&quot;nb&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;UserDatabase&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;  Any edits
             that are performed against this UserDatabase are immediately
             available &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; use by the Realm&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Realm className&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.apache.catalina.realm.UserDatabaseRealm&quot;&lt;/span&gt;
               resourceName&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;UserDatabase&quot;&lt;/span&gt;/&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;/Realm&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;

      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Host name&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;localhost&quot;&lt;/span&gt;  appBase&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;webapps&quot;&lt;/span&gt;
            unpackWARs&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;true&quot;&lt;/span&gt; autoDeploy&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt; SingleSignOn valve&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; share authentication between web applications
             Documentation at&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/docs/&lt;/span&gt;config/valve&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;html &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Valve className&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.apache.catalina.authenticator.SingleSignOn&quot;&lt;/span&gt; /&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;&amp;lt;!--&lt;/span&gt; Access &lt;span class=&quot;nb&quot;&gt;log&lt;/span&gt; processes &lt;span class=&quot;k&quot;&gt;all&lt;/span&gt; example&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
             Documentation at&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/docs/&lt;/span&gt;config/valve&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;html
             Note&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; The pattern used &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; equivalent &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; using pattern&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;common&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;--&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;Valve className&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.apache.catalina.valves.AccessLogValve&quot;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;logs&quot;&lt;/span&gt;
               prefix&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;localhost_access_log&quot;&lt;/span&gt; suffix&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.txt&quot;&lt;/span&gt;
               pattern&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%h %l %u %t &amp;amp;quot;%r&amp;amp;quot; %s %b&quot;&lt;/span&gt; /&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;

      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;/Host&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;/Engine&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;/Service&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;/Server&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;★★★ 이 부분 중요!! 라고 되어 있는 부분에, 해당 서버에 접근할 수 있도록 설정한 포트번호를 입력하면 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;6-톰캣서버-실행하기&quot;&gt;6. 톰캣서버 실행하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;tomcat server를 실행하기 위해선, 윗 부분에서, version.sh를 실행하던 폴더로 이동하면&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;startup.sh&lt;/code&gt;가 있고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shutdown.sh&lt;/code&gt; 파일이 있는데 두 파일은, 실행과 종료 파일이다.&lt;br /&gt;
실행하는 방법은 다음과 같다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tomcat/bin &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./startup.sh
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tomcat/bin &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./shutdown.sh
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;이렇게 입력하면, 톰캣서버가 실행이 된다.&lt;br /&gt;
만약에 또 Permission 관련 에러가 발생하면 위에 적어놓은 방법처럼, chmod 명령어로 접근 권한을 허용해주면 된다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;startup.sh&lt;/code&gt; 파일을 실행하고 브라우저에, ip번호와 server.xml에 설정해놓은 포트번호를 입력하면 실행이 된다.&lt;/li&gt;
  &lt;li&gt;만약 안된다면, tomcat 경로에 있는 logs라는 폴더로 이동해서, catalina.out 파일을 열어보자.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;...apache-tomcat-8.5.5/logs/vi catalina.out
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;...apache-tomcat-8.5.5/logs/tail &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; catalina.out
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;첫 번째 명령어는 모든 로그를 다 볼 수 있고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Shift + G&lt;/code&gt; 키를 누르면, 제일 아래로 내려갈 수 있다.&lt;/li&gt;
  &lt;li&gt;두 번째 명령어는 실시간으로 로그를 확인할 수 있다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;로그를 확인해서, 어떤 부분이 잘못됐는 지 확인하고, 다시 ./startup.sh를 입력하면 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;7-applicationyml-파일-수정하기&quot;&gt;7. application.yml 파일 수정하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;만약 database 에러가 났다면, application.yml을 수정해야 하는데&lt;br /&gt;
이 부분은 다시 STS에서 수정하고 빌드를 해도 되지만 만약 ROOT 폴더에 있는 파일을 수정하고 싶은 거라면?&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;apache-tomcat-8.5.5 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;webapps/ROOT/WEB-INF/classes
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;명령어를 입력하고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ls&lt;/code&gt; 라고 입력을 해보면, application.yml 또는 application.properties 파일이 있을 것이다.&lt;/li&gt;
  &lt;li&gt;그 부분에서, DB 주소를 입력하고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./shutdown.sh&lt;/code&gt; 를 입력해서 톰캣서버를 종료하고 다시 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./startup.sh&lt;/code&gt; 명령어로 톰캣서버를 실행하면 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;해당 작업을 하면서 알게 된 부분들과, Database Dump 부분은 내일 다시 적어보도록 할 것이다. 나처럼 헤맸던 사람들이라면 도움이 되었길 바랄 뿐이다. 이 내용으로 도움이 될 지는 의문이지만ㅠㅠ&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;도움을 받았던 글&lt;br /&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://jiwontip.tistory.com/45?category=367314&quot;&gt;스프링 프로젝트 AWS 배포 3탄&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://mirae-kim.tistory.com/73&quot;&gt;[AWS] AWS EC2에 mysql 설치하기 (ubuntu)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://cookinghoil.tistory.com/94&quot;&gt;Linux - 톰캣 로그 확인하기&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 12 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//organize/0001/</link>
        <guid isPermaLink="true">http://localhost:4000//organize/0001/</guid>
        
        <category>Linux</category>
        
        <category>SpringBoot</category>
        
        <category>스프링부트</category>
        
        <category>리눅스서버</category>
        
        <category>스프링부트 배포</category>
        
        <category>MySQL</category>
        
        
        <category>Organize</category>
        
      </item>
    
      <item>
        <title>[Servlet] 01. Servlet과 Model로 회원관리 만들기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/java.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;br /&gt;
MVC 1단계인, Servlet 환경으로만 만들어보고, MVC 2단계로 넘어가고&lt;br /&gt;
나중에는 Spring Framework를 사용하는 방식의 강의입니다.&lt;br /&gt;
MVC 1단계는, Controller + Model 만을 사용하는 방식입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-프로젝트-만들기&quot;&gt;1. 프로젝트 만들기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로젝트는, Dynamic web project로 생성.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-servlet&quot;&gt;2. Servlet&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;보통 MVC란, Model, View, Controller를 나눠서 작업하는 디자인패턴을 얘기하지만&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Servlet&lt;/code&gt;은 Controller면서, View도 한꺼번에 하게 된다. 불편하지만 이것이 시초였다.&lt;/li&gt;
  &lt;li&gt;기본을 알아야 jsp를 배우든, spring을 배우든 로직이 어떻게 돌아가는 지가 잘 보이고 쉽게 배울 수 있다.&lt;/li&gt;
  &lt;li&gt;이 강의에서는 Model만 밖에 빼서 회원관리 프로그램을 만들게 된다. 왜냐하면 JAVA로 실행하기 때문이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-기본-디렉터리-구조-만들기&quot;&gt;3. 기본 디렉터리 구조 만들기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src&lt;/code&gt; 폴더에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;controller&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;model&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;db&lt;/code&gt; 패키지를 만든다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WebContent&lt;/code&gt; 폴더에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;member&lt;/code&gt; 폴더를 만든다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;db&lt;/code&gt; 패키지에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;member.sql&lt;/code&gt; 파일을 만든다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-membervo-만들기&quot;&gt;4. MemberVO 만들기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Member의 정보를 저장 할 클래스인, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MemberVO&lt;/code&gt; 클래스를 만든다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;model&lt;/code&gt; 패키지에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MemberVO&lt;/code&gt; 클래스를 만들어준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 회원(Object)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MemberVO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MemberVO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;phone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// 데이터베이스를 위한 생성자&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MemberVO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;phone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setNumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getEmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setEmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getPhone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setPhone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;phone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;MemberVO [number=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, id=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, password=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, name=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, age=&quot;&lt;/span&gt;
				&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, email=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;, phone=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;]&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;member 데이터베이스에 맞는 자료형 변수와, getter, setter 메서드, 그리고, 테스트를 위한 toString 메서드까지 만들어준다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;변수만 입력하고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;alt + shift + s&lt;/code&gt;를 입력하면, getter,setter, tostring 메서드를 만들 수 있는 하위메뉴로 이동이 된다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;그리고 생성자를 두개 만들어주는데, 하나는 데이터베이스를 위한 생성자이다.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;5-memberdao-만들기&quot;&gt;5. MemberDAO 만들기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;JDBC 환경으로, 데이터베이스를 접근한다. 이 부분은 나중에 Mybatis 또는 JPA로 변경하게 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.sql.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// JDBC-&amp;gt; Mybatis, JPA&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MemberDAO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Connection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PreparedStatement&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ResultSet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;일단, DAO 부분보단, html로, 회원가입을 할 수 있게 하는 html 파일을 먼저 만든다.&lt;/li&gt;
  &lt;li&gt;그 부분은, 다음 공부글에 작성하도록 하겠다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Mon, 11 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//study/0001/</link>
        <guid isPermaLink="true">http://localhost:4000//study/0001/</guid>
        
        <category>Servlet</category>
        
        <category>서블릿</category>
        
        <category>JAVA</category>
        
        <category>servlet</category>
        
        <category>비지니스 로직</category>
        
        <category>프리젠테이션 로직</category>
        
        
        <category>Study</category>
        
      </item>
    
      <item>
        <title>MySQL Table 만들기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-sql-파일-만들기&quot;&gt;1. sql 파일 만들기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;src 폴더 내에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;kr.web.db&lt;/code&gt;라는 패키지 파일을 만든다.&lt;/li&gt;
  &lt;li&gt;패키지 내에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;member.sql&lt;/code&gt; 파일을 만들어준다.&lt;/li&gt;
  &lt;li&gt;참고로, sql 파일은, Eclipse에서&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Data Source Explorer / Database Connections&lt;/code&gt; 에 데이터베이스가 연결이 되어 있어야 사용이 가능하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-mysql-실행하기&quot;&gt;2. MySQL 실행하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;cmd 또는 powershell로, 해당 db 폴더로 이동을 해서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;startup.bat or ./ startup&lt;/code&gt; 을 입력하자.&lt;/li&gt;
  &lt;li&gt;그럼 실행이 잘된다. 만약 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Do you already have another mysqld server running on port: 3306 ?&lt;/code&gt; 이런 에러가 발생한다면&lt;br /&gt;
&lt;a href=&quot;/error/0006&quot;&gt;에러 해결 방법&lt;/a&gt; 을 클릭해서, 해결해보자.&lt;/li&gt;
  &lt;li&gt;그리고, 이클립스에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Database Connections&lt;/code&gt; 에 있는 db를 더블클릭하면, 연결이 된다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;member.sql&lt;/code&gt; 로 넘어가서, Name에, 해당 DB를 연결해주고, 테이블도 연결해주면, 연결상태로 변경된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-회원-테이블-생성하기&quot;&gt;3. 회원 테이블 생성하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;member.sql&lt;/code&gt;에 회원 테이블을 생성하는 쿼리를 작성하자&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;primary&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auto_increment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;phone&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;쿼리 부분을 드래그해서, 오른쪽 마우스를 클릭&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Execute Selected Text&lt;/code&gt;를 클릭하면, 드래그 한 부분만 쿼리가 실행되고 테이블이 생성된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-회원-테이블에-값-추가하기&quot;&gt;4. 회원 테이블에 값 추가하기&lt;/h3&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;phone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;id입력&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;비밀번호 입력&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;이름 입력&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;나이입력&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;이메일&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;전화번호 입력&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;쿼리 실행 후, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;select * from member;&lt;/code&gt; 쿼리 실행해서, 데이터가 잘 들어갔는 지 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;5-회원-테이블에-입력-된-값-수정하기&quot;&gt;5. 회원 테이블에 입력 된 값 수정하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;만약 나이를 수정하고 싶다면??&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;나이입력&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;입력되어 있는 아이디&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;6-테이블에-등록되어-있는-값-삭제하기&quot;&gt;6. 테이블에 등록되어 있는 값 삭제하기&lt;/h3&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;입력되어 있는 아이디&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Mon, 11 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//spring-boot/0011/</link>
        <guid isPermaLink="true">http://localhost:4000//spring-boot/0011/</guid>
        
        <category>MySQL</category>
        
        <category>eclipse</category>
        
        <category>jsp</category>
        
        <category>mvc</category>
        
        <category>spring</category>
        
        <category>spring boot</category>
        
        <category>스프링</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>Doyoualreadyhaveanothermysqldserverrunningonport 3306 에러 해결 방법</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/error.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;이 오류는, 3306이란 포트를 어떤 곳에서 사용하고 있다는 내용이다.&lt;br /&gt;
현재 공부중인 것은 MySQL을 사용하는데 MariaDB가 이미 설치가 되어 있는 상태에서&lt;br /&gt;
MySQL을 사용하려고 하니깐 생긴 에러다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;MariaDB를 삭제하면 쉽게 해결하지만, MariaDB를 삭제하지 않고 사용할 수 있는 방법이 있다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;일단, 윈도우 하단에 검색하는 곳에 서비스라고 입력을 하자. 그리고 MariaDB를 찾아서 일시중지 또는 중지를 시켜주면 완료된다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;에러 해결 끝!!&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!
&lt;/div&gt;
</description>
        <pubDate>Mon, 11 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//error/0006/</link>
        <guid isPermaLink="true">http://localhost:4000//error/0006/</guid>
        
        <category>Do you already have another mysqld server running on port 3306</category>
        
        <category>error</category>
        
        <category>spring</category>
        
        <category>mySQL</category>
        
        <category>MySQL</category>
        
        <category>데이터베이스</category>
        
        
        <category>Error</category>
        
      </item>
    
      <item>
        <title>[부트스트랩4] 01. Containers(컨테이너)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/bootstrap.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;안녕하세요. ‘Nerd-Lee’ 입니다.&lt;br /&gt;
이번엔, 부트스트랩의 컨테이너에 대해서 알아보도록 하겠습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://www.w3schools.com/bootstrap4/bootstrap_containers.asp&quot;&gt;참고 페이지 W3 Schools 링크&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-container&quot;&gt;1. Container?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;부트스트랩에서, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Container&lt;/code&gt;는 내부 콘텐츠를 채우는 데 사용되고, 두가지로 나뉩니다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.container&lt;/code&gt; 와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.container-fluid&lt;/code&gt;가 있고, 이 두 가지의 차이점은 다음 사진과 같습니다.&lt;br /&gt;
&lt;img src=&quot;/images/2022-04-11/001.PNG&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.container&lt;/code&gt; 는, 반응형 고정 너비 컨테이너를 제공하지만&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.container-fluid&lt;/code&gt; 는 전체 viewport의 넓이에 해당하는 컨테이너를 제공합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-contrainer의-반응형-크기&quot;&gt;2. .Contrainer의 반응형 크기&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt;Extra-small &amp;lt; 576px&lt;/th&gt;
      &lt;th&gt;Small &amp;gt;= 576px&lt;/th&gt;
      &lt;th&gt;Medium &amp;gt;= 768px&lt;/th&gt;
      &lt;th&gt;Large &amp;gt;= 992px&lt;/th&gt;
      &lt;th&gt;Extra-large &amp;gt;= 1200px&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;max-width&lt;/td&gt;
      &lt;td&gt;100%&lt;/td&gt;
      &lt;td&gt;540px&lt;/td&gt;
      &lt;td&gt;720px&lt;/td&gt;
      &lt;td&gt;960px&lt;/td&gt;
      &lt;td&gt;1140px&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;container&lt;/code&gt;는 반응형이다. 홈페이지의 크기에 따라&lt;br /&gt;
컨테이너의 최대 넓이가 알아서 설정이 되어 있는데&lt;br /&gt;
브라우저의 넓이가 1200px보다 크거나 같다면, 최대 넓이는 1140px로 고정되어 있고&lt;br /&gt;
브라우저의 넓이가 992px보다 크거나 같고, 1200px 보다 작으면, 960px&lt;br /&gt;
브라우저의 넓이가 768px보다 크거나 같고, 992px보다 작으면, 720px&lt;br /&gt;
브라우저의 넓이가 576px보다 크거나 같고, 768px보다 작으면, 540px&lt;br /&gt;
브라우저의 넓이가 576px보다 작으면, 100%의 넓이를 가지게 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;My First Bootstrap Page&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is some text.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;Codepen으로 Container가 어떻게 되어 있는 지 볼 수 있도록 예제를 넣어놨습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p data-height=&quot;300&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;vYprbqM&quot; data-default-tab=&quot;html,result&quot; data-user=&quot;nerd-lee&quot; class=&quot;codepen split-output&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/nerd-lee/pen/vYprbqM/&quot;&gt;hello&lt;/a&gt; by nerd-lee (&lt;a href=&quot;https://codepen.io/nerd-lee&quot;&gt;@nerd-lee&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-fluid-container&quot;&gt;3. Fluid Container&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;위에서도 설명했지만, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.container-fluid&lt;/code&gt; 는 항상 화면 전체 넓이를 가집니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container-fluid&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;My First Bootstrap Page&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is some text.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p data-height=&quot;300&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;LYeraYX&quot; data-default-tab=&quot;html,result&quot; data-user=&quot;nerd-lee&quot; class=&quot;codepen split-output&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/nerd-lee/pen/LYeraYX/&quot;&gt;hello&lt;/a&gt; by nerd-lee (&lt;a href=&quot;https://codepen.io/nerd-lee&quot;&gt;@nerd-lee&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;ul&gt;
  &lt;li&gt;codepen에서, 1x가 아닌, 0.5x, 0.25x를 눌러보면, 전체 넓이를 차지하고 있는 것이 보일 것입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-responsive-containers--반응형-컨테이너-&quot;&gt;4. Responsive Containers ( 반응형 컨테이너 )&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;반응형 컨테이너는, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.container-&lt;/code&gt; 에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sm/md/lg/xl&lt;/code&gt;을 붙이는 형태로&lt;br /&gt;
해당 값에 따라서 브라우저의 넓이에 따라, px로 나눌 지 아니면, 100%로 보여줄 지가 나뉘게 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;class&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Extra-small &amp;lt; 576px&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Small &amp;gt;= 576px&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Medium &amp;gt;= 768px&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Large &amp;gt;= 992px&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Extra-large &amp;gt;= 1200px&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.container-sm&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;540px&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;720px&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;960px&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1140px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.container-md&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;720px&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;960px&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1140px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.container-lg&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;960px&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1140px&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.container-xl&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;100%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1140px&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p data-height=&quot;300&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;dyJKrOE&quot; data-default-tab=&quot;html,result&quot; data-user=&quot;nerd-lee&quot; class=&quot;codepen split-output&quot;&gt;
  See the Pen &lt;a href=&quot;https://codepen.io/nerd-lee/pen/dyJKrOE/&quot;&gt;hello&lt;/a&gt; by nerd-lee (&lt;a href=&quot;https://codepen.io/nerd-lee&quot;&gt;@nerd-lee&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Mon, 11 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//bootstrap/0001/</link>
        <guid isPermaLink="true">http://localhost:4000//bootstrap/0001/</guid>
        
        <category>부트스트랩</category>
        
        <category>BootStrap</category>
        
        <category>Container</category>
        
        <category>컨테이너</category>
        
        <category>css</category>
        
        <category>jquery</category>
        
        
        <category>BootStrap</category>
        
      </item>
    
      <item>
        <title>@WebServlet 사용하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-webservlet이란&quot;&gt;1. @WebServlet이란?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;web.xml에 계속 그럼 태그를 생성하고 매핑을 해줘야 하는가? 아니다.&lt;/li&gt;
  &lt;li&gt;JAVA에서는 @WebServlet이란, 어노테이션을 제공해서 해당 어노테이션안에&lt;br /&gt;
경로를 입력하면 클라이언트에서, 해당 경로를 입력할 때 알아서 톰캣서버가 찾아서 실행해주게 된다.&lt;/li&gt;
  &lt;li&gt;주의할 점으로는, web.xml 파일과 중복된 값이 있으면 충돌이 일어나기 때문에 한 곳에서만 사용해야 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;@WebServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/hs.do&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// &amp;lt;- 이 부분 중요.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloServlet&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpServlet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;MyUtil&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyUtil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		
		&lt;span class=&quot;c1&quot;&gt;// 요청한 클라이언트에게 응답하기&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;html&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;body&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;/body&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;/html&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Servlet은, MVC에서, Controller 역할을 하게 된다.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Sun, 10 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//spring-boot/0010/</link>
        <guid isPermaLink="true">http://localhost:4000//spring-boot/0010/</guid>
        
        <category>WebServlet</category>
        
        <category>어노테이션</category>
        
        <category>서블릿 어노테이션</category>
        
        <category>Annotation</category>
        
        <category>jsp</category>
        
        <category>mvc</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>Servlet 실행하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-servlet을-사용하기-위해서는-servlet-mapping-작업을-거쳐야한다&quot;&gt;1. Servlet을 사용하기 위해서는 servlet-mapping 작업을 거쳐야한다.&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;지금 만들어진대로 만약 경로를 지정한다면&lt;br /&gt;
`http://localhost:port/web/WEB-INF/classes/kr.web.controller.HelloServlet 이란 경로로&lt;br /&gt;
클라이언트가 접근을 해야되는 것인가? 어차피 하지도 못한다.&lt;br /&gt;
할 수 있더라도 보안성이 취약해지기 때문에 servlet-mapping 작업을 해서 간단한 경로로 만들어줘야 한다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;그럼 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;servlet-mapping&lt;/code&gt; 작업은 어디서 해야 할까? web.xml에 해야한다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;servlet-mapping&amp;gt;&lt;/code&gt; 태그를 추가하고, 그 안에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;url-pattern&amp;gt;&lt;/code&gt; 태그를 추가한 다음 그 태그 안에 /hs.do를 입력한다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;servlet&amp;gt;&lt;/code&gt; 태그를 추가하고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;servlet-class&amp;gt;&lt;/code&gt; 태그에, 패키지 네임.클래스 이름을 입력하자.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;servlet&amp;gt;&lt;/code&gt; 태그와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;servlet-mapping&amp;gt;&lt;/code&gt; 태그에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;servlet-name&amp;gt;&lt;/code&gt; 태그를 추가해서&lt;br /&gt;
서블릿 클래스와 매핑을 연결해줘야 한다. 보통 클래스 이름으로 맞춘다고 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;web-app&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;3.1&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;HelloServlet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-class&amp;gt;&lt;/span&gt;kr.web.controller.HelloServlet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-class&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet&amp;gt;&lt;/span&gt;

	&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-mapping&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;HelloServlet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;url-pattern&amp;gt;&lt;/span&gt;/hs.do&lt;span class=&quot;nt&quot;&gt;&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-mapping&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/web-app&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;톰캣 서버를 실행하고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost:포트번호/hs.do&lt;/code&gt; 를 입력하면&lt;br /&gt;
HelloServlet 클래스가 실행이 되면서 1~10까지의 합산 값이 출력된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Sun, 10 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//spring-boot/0009/</link>
        <guid isPermaLink="true">http://localhost:4000//spring-boot/0009/</guid>
        
        <category>서블릿</category>
        
        <category>서블릿 실행하기</category>
        
        <category>Spring</category>
        
        <category>JSP</category>
        
        <category>JAVA</category>
        
        <category>Servlet</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>Servlet(서블릿)이란??</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-servlet이-뭐야&quot;&gt;1. Servlet이 뭐야??&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Servlet&lt;/code&gt;은 100% JAVA로 이루어져 있고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Server&lt;/code&gt; + &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Let&lt;/code&gt;가 결합된 단어라고 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-파일을-만들어보자&quot;&gt;2. 파일을 만들어보자.&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src / kr.web.controller(package) / HelloSevlet.java&lt;/code&gt; 를 만들어보자.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HelloServlet.java&lt;/code&gt; 파일을 서블릿 형태로 만들어야&lt;br /&gt;
톰캣서버가 구동이 가능해지기 때문에 서블릿 형태로 만들어보자.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HttpServlet&lt;/code&gt; 이란 클래스를 상속받자. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;패키지명은 javax.servlet.http.HttpServlet&lt;/code&gt; 이다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Servlet&lt;/code&gt; 에서, Main 함수와 같은 제일 먼저 실행되는 메서드가 필요한 데&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;alt + shift + s&lt;/code&gt; 키를 눌러서, override/implements methods 라는 버튼을 클릭해서&lt;br /&gt;
HttpServlet 클래스가 가진 메서드를 재정의 해야하는데&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;service(HttpServletRequest, HttpServletResponse)&lt;/code&gt; 를 체크하고 OK 클릭!&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;이렇게 만들어진 것이, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Servlet&lt;/code&gt;의 골격이다. 이 다음, jsp에서 만들었던 것 처럼&lt;br /&gt;
1~10까지의 총합을 서블릿으로 만들어보면 된다. 밑에 코드처럼 추가해보자.&lt;br /&gt;
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nc&quot;&gt;MyUtil&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyUtil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;이제 해당 데이터를 클라이언트와 연결을 시켜서 요청을 받고 응답을 하면&lt;br /&gt;
해당 값을 보낼 수 있도록 만들어야 한다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PrintWriter out = res.getWriter();&lt;/code&gt; 를 추가해주자.&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;res.getWriter()&lt;/code&gt; 는 요청한 클라이언트와 연결시키는 IO를 만들어내는 메서드이다.&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PrintWriter out&lt;/code&gt; 변수는 getWriter로 받아온, 출력스트림을 받아온다.&lt;br /&gt;
그리고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;out&lt;/code&gt; 변수가 요청한 클라이언트와 연결되어 있는 하나의 빨대 역할을 하는것이다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;이제 HTML 코드를 하나 작성해서, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;out&lt;/code&gt; 변수에게 넘겨서, 클라이언트로 보내면 된다.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;kr.web.controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.IOException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.PrintWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.ServletException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.http.HttpServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.http.HttpServletRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;javax.servlet.http.HttpServletResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;kr.web.util.MyUtil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// JavaEE -&amp;gt; Servlet&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloServlet&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpServlet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HttpServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// TODO Auto-generated method stub&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;MyUtil&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyUtil&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		
		&lt;span class=&quot;c1&quot;&gt;// 요청한 클라이언트에게 응답하기&lt;/span&gt;
		&lt;span class=&quot;nc&quot;&gt;PrintWriter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;html&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;body&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;/body&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&amp;lt;html&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;최종 서블릿 예제 코드이다. 이제 서블릿에 대해서 보니깐, 현재 내가 회사에서 보고 있는 프로젝트가….ㅠㅠ&lt;br /&gt;
어떻게 진행되고 있었던건지를 깨닫게 된다. 서블릿도 있고, jsp도 있고..난장판인데&lt;br /&gt;
이걸 리팩토링하자니 아직 실력이 부족하고 물론 천천히 진행해도 상관은 없으나 막상 서블릿과 jsp의 차이를 알게되니..&lt;br /&gt;
코드를 처음보면서도 이걸 왜 이렇게 만들었지? 라는 생각을 늘 품고 있었는데.. 에효.. 하나로 통일이 된게 아니였구나..를 깨닫게 된다.&lt;br /&gt;
하하하하.. 나중에 리팩토링 하자. jsp로 깔끔하게ㅠㅠ&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;일단 오늘은 토요일이라 하루 쉴려고 했으나..&lt;br /&gt;
그래도 공부 하나 정도는 듣고 자는 게 좋을 것 같다는 생각에 글을 작성해본다.&lt;br /&gt;
내일은 더 많은 공부를 할 예정이다. 일단 영어도 시작했으니깐&lt;br /&gt;
영어부터 공부를 해보고 프로그래밍 공부를 시작하자..ㅠㅠ 화이팅!&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Sat, 09 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//spring-boot/0008/</link>
        <guid isPermaLink="true">http://localhost:4000//spring-boot/0008/</guid>
        
        <category>스프링부트</category>
        
        <category>박매일</category>
        
        <category>JSP</category>
        
        <category>서블릿</category>
        
        <category>Servlet</category>
        
        <category>Java</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>JSP에서 비즈니스 로직 분리 공부</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-jsp만의-독특한-태그&quot;&gt;1. jsp만의 독특한 태그&lt;/h3&gt;

&lt;h4 id=&quot;11---지시자--&quot;&gt;1.1 - 지시자 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;%@ %&amp;gt;&lt;/code&gt;&lt;/h4&gt;

&lt;div class=&quot;language-jsp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;%@page &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;import=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;java.util.Date&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;%@ page &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;java&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt; contentType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;
	pageEncoding=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;%@ %&amp;gt;&lt;/code&gt; 태그를 jsp에선 지시자라고 부른다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;12---스크립트릿--&quot;&gt;1.2 - 스크립트릿 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;% %&amp;gt;&lt;/code&gt;&lt;/h4&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;lt;%
	Date d = new Date();
%&amp;gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; 태그를 jsp에서 스크립트릿 이라고 부른다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;13---출력식--&quot;&gt;1.3 - 출력식 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt;&lt;/h4&gt;

&lt;div class=&quot;language-jsp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;지금 몇시야? &lt;span class=&quot;nt&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;%&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt; 태그를 jsp에서 출력식이라고 부른다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-view--jsp-&quot;&gt;2. VIEW ( jsp )&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프리젠테이션 로직이라고도 하고, 클라이언트가 서버에 요청을 할 때, 응답을 하면서 보내주는 것이 jsp (view) 다.&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;MVC 패턴이라고 불리는 것 중 V에 해당한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-비즈니스-로직-생성해보기&quot;&gt;3. 비즈니스 로직 생성해보기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;webapp에 sum.jsp 파일을 만들어보자.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;예--110까지의-총합을-구해서-출력해보자&quot;&gt;예 ) 1~10까지의 총합을 구해서 출력해보자.&lt;/h5&gt;
&lt;div class=&quot;language-jsp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;%@ page &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;java&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt; contentType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;
	pageEncoding=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;%&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 비즈니스 로직&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 프리젠테이션 로직 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Insert title here&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;table&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;border=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;1~10까지의 총합&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;%&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;util 패키지를 만들고, MyUtil 이란 클래스를 생성하자.
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src / kr.web.util (package) / MyUtil.java&lt;/code&gt; 생성&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;kr.web.util&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyUtil&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;그런데, 이렇게 하고 톰캣 서버를 구동을 하면, 오류가 뜰 것이다.&lt;br /&gt;
왜냐하면 &lt;a href=&quot;/spring-boot/0003/&quot;&gt;첫 번째 공부 정리 내역&lt;/a&gt;을 보면&lt;br /&gt;
web에서 자바를 사용하기 위해서는, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webapp / WEB-INF / classes&lt;/code&gt; 폴더에&lt;br /&gt;
.class들이 생성된다고 정리가 되어있다. 그래서, bin이 아닌 classes로 설정을 해줘야 한다.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;프로젝트 오른쪽 마우스 클릭 -&amp;gt; Build Path -&amp;gt; Configure Build Path 클릭&lt;/li&gt;
  &lt;li&gt;Source -&amp;gt; Default output folder Browse 클릭&lt;/li&gt;
  &lt;li&gt;webapp / WEB-INF / classes 폴더 선택 후, Apply and Close 클릭
&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;이렇게 하면 오류없이 잘 작동이 되는 것을 확인할 수 있다.&lt;br /&gt;
이렇게 해서 비즈니스 로직이 어떤것인지 알아봤고, 나눠서 구현해보았다.&lt;br /&gt;
퇴근 후 공부 끝!&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Fri, 08 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//spring-boot/0007/</link>
        <guid isPermaLink="true">http://localhost:4000//spring-boot/0007/</guid>
        
        <category>스프링부트</category>
        
        <category>박매일</category>
        
        <category>JSP</category>
        
        <category>비즈니스 로직</category>
        
        <category>비즈니스</category>
        
        <category>스프링 비즈니스</category>
        
        <category>MVC 비즈니스</category>
        
        <category>MVC business</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>STS (Spring Tool Suite) 단축키 정리 끝판왕 ( + 추가중 )</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
프로그래머들은 귀찮은 걸 굉장히 싫어합니다. 그래서 단축키 몇 개 정도만 알아도 마우스에 손을 가져 갈 일이 없어지는데요.&lt;br /&gt;
이번 글은 STS &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(Spring Tool Suite)&lt;/code&gt; 단축키에 대한 내용을 정리해봤습니다.&lt;br /&gt;
단축키에 대한 내용들은 생각날 때 마다 추가 할 예정입니다.&lt;br /&gt;
Window 환경에서 작업중이기 때문에, Window 환경에 맞는 단축키가 적혀있는 점 양해 부탁드립니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-검색-ctrl--f&quot;&gt;1. 검색 (Ctrl + F)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + F&lt;/code&gt; 를 눌러서, 해당 파일에 있는 단어를 한 번에 고치거나 찾을 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-전체-검색-ctrl--h&quot;&gt;2. 전체 검색 (Ctrl + H)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + H&lt;/code&gt; 키를 눌러서, 프로젝트 내에 있는 모든 폴더들을 탐색할 수 있습니다.&lt;br /&gt;
만약 새로 입사를 해서 진행되어 있는 프로젝트의 파일을 살펴보다가&lt;br /&gt;
이 부분은 어디에 있을까? 라고 고민 된다면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + H&lt;/code&gt; 키를 잊지마세요!&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-저장--ctrl--s-&quot;&gt;3. 저장 ( Ctrl + S )&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;프로그래밍 초보 분들은, 코드를 작성할 때 마다, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + S&lt;/code&gt;를 누르는 습관을 가집시다!&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-자동-정렬--ctrl--shift--f-&quot;&gt;4. 자동 정렬 ( Ctrl + Shift + F )&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;코드를 자동으로 정렬시켜주는 단축키입니다. 하지만, 개인적으로는 맘에 들지는 않습니다.&lt;br /&gt;
가독성이 더 떨어지게 정렬을 해주는 듯한?&lt;br /&gt;
그래서 정말 필요할 때 빼고는 보기 편하게 그냥 알아서 작성하는 게 편합니다.&lt;br /&gt;
그래도 없는 것 보단 좋습니다^^&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;5-import-java--ctrl--shift--o-&quot;&gt;5. import java ( Ctrl + Shift + O )&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;java 파일 작성 중 import가 추가되지 않은 클래스를 사용 할 경우&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + Shift + O&lt;/code&gt;를 누르면, 패키지를 import 할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;6-주석-생성--ctrl--shift---&quot;&gt;6. 주석 생성 ( Ctrl + Shift + / )&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;주석을 생성해야 할 때 유용한 단축키입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;7-생성한-주석-풀기--ctrl--shift---&quot;&gt;7. 생성한 주석 풀기 ( Ctrl + Shift + \ )&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;생성한 주석을 풀 때, 사용되는 단축키입니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt; 이거랑 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\&lt;/code&gt; 이걸 헷갈리지 마시고 사용하셔야 합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;8-현재-마우스-커서가-있는-코드-또는-블록으로-지정되어-있는-부분-주석-생성-or-주석-풀기--ctrl--shift--c-&quot;&gt;8. 현재 마우스 커서가 있는 코드 또는 블록으로 지정되어 있는 부분&lt;br /&gt; 주석 생성 or 주석 풀기 ( Ctrl + Shift + C )&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + /&lt;/code&gt; 이것도 물론 사용은 가능하지만, 자바 한정이다.&lt;br /&gt;
js나 jsp 파일에서는 동작이 되질 않기 때문에&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + Shift + C&lt;/code&gt; 키를 사용하는 것이 좋다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Thu, 07 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//spring-boot/0006/</link>
        <guid isPermaLink="true">http://localhost:4000//spring-boot/0006/</guid>
        
        <category>sts</category>
        
        <category>이클립스</category>
        
        <category>Eclipse</category>
        
        <category>spring boot</category>
        
        <category>spring</category>
        
        <category>jsp</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>JSP 만들어서 동적인 페이지로 구동하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-정적-페이지--동적-페이지-&quot;&gt;1. 정적 페이지 ? 동적 페이지 ?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;정적 페이지가 어떤 것이고, 동적 페이지가 어떤 것이냐
1분마다 시간을 물어본다고 예를 들어보도록 하자.&lt;br /&gt;
그런데, 정적인 페이지는 시간이 변경이 되질 않는다.&lt;br /&gt;
하지만 동적인 페이지는 2시 50분이면, 2시 50분이라고 출력이 되고 1분 뒤에는 2시 51분이 출력되게 된다.&lt;br /&gt;
가장 큰 차이점은, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;프로그래밍&lt;/code&gt;을 할 수 있느냐 없느냐라는 것이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-홈페이지-파일의-역할&quot;&gt;2. 홈페이지 파일의 역할&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;HTML
    &lt;ul&gt;
      &lt;li&gt;뼈대를 나타내는 파일이며, 홈페이지의 쌩얼이라고 생각하자.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;CSS
    &lt;ul&gt;
      &lt;li&gt;Casting Style Sheet의 약자로, 꾸미기 위한 파일이며, 홈페이지의 색조 화장품이라고 생각하자.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Javascript
    &lt;ul&gt;
      &lt;li&gt;동작 기능을 만들 수 있는 파일이며, 예를 들어서, 홈페이지에서 버튼을 클릭하면 밥을 먹는다. 와 같이 사람으로 표현하자면 행동이라고 생각하자.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;HTML + CSS + Javascript = Front-end&lt;/li&gt;
  &lt;li&gt;Backend
    &lt;ul&gt;
      &lt;li&gt;Java, PHP, C# 등의 언어로 만들 수 있는 서버를 뜻하고 UI에 입력을 받아 DB에 데이터들을 처리하는 역할을 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-jsp&quot;&gt;3. JSP&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;webapp 폴더에, time.jsp 라는 파일을 하나 만들어주자.&lt;/li&gt;
  &lt;li&gt;jsp를 사용하기 위해서는, java용 api 뿐만 아니라, Web용 api가 필요하다.&lt;/li&gt;
  &lt;li&gt;Web용 api는, 톰캣 서버에서 제공을 해주는데, 톰캣 서버가 설치되어 있는 경로로 이동한 다음 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib&lt;/code&gt; 폴더로 들어가자.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib&lt;/code&gt; 폴더에 있는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;servlet-api.jar&lt;/code&gt; 파일을 복사한 다음, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WEB-INF / lib&lt;/code&gt; 폴더에 붙여넣기 해주자.&lt;/li&gt;
  &lt;li&gt;해당 프로젝트는 수동으로 만들었기 때문에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;servlet-api.jar&lt;/code&gt; 파일을 연결해줘야 한다.&lt;/li&gt;
  &lt;li&gt;연결 방법은 다음과 같다.
    &lt;ul&gt;
      &lt;li&gt;해당 프로젝트를 오른쪽 마우스 클릭&lt;/li&gt;
      &lt;li&gt;Build Path -&amp;gt; Configure Build Path 클릭&lt;/li&gt;
      &lt;li&gt;Libraries 메뉴로 이동&lt;/li&gt;
      &lt;li&gt;Add External JARs 클릭 후, 톰캣 경로에 있던 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;servlet-api.jar&lt;/code&gt; 더블클릭해서 연결&lt;/li&gt;
      &lt;li&gt;Apply 클릭하면, jsp에 &amp;lt;%@ %&amp;gt; 이 부분의 에러가 없어진다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-jsp-페이지에-java-사용해서-시간-넣기&quot;&gt;4. JSP 페이지에 JAVA 사용해서, 시간 넣기&lt;/h3&gt;

&lt;div class=&quot;language-jsp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;%@ page &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;java&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt; contentType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;
	pageEncoding=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Insert title here&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Nerd-Lee의 홈페이지 방문을 환영합니다.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;지금 몇시야? 2시 50분!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위의 코드는 기본으로 만든 jsp 템플릿이다.&lt;br /&gt;
이제 java로 프로그래밍을 해서 현재 시간을 구해서, 2시 50분이 아닌 현재 시간을 넣어주면 끝난다.&lt;/p&gt;

&lt;p&gt;java로 프로그래밍을 할 때엔 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; 태그 안에서 하고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;% %&amp;gt;&lt;/code&gt;에서 얻은 데이터 값을 출력할 때엔&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt;로 받아오면 된다. 코드를 한 번 보도록 하자.&lt;/p&gt;

&lt;div class=&quot;language-jsp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;%@page &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;import=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;java.util.Date&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;%@ page &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;language=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;java&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt; contentType=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;
	pageEncoding=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;%&lt;/span&gt;
	&lt;span class=&quot;nc&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Insert title here&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Nerd-Lee의 홈페이지 방문을 환영합니다.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;지금 몇시야? &lt;span class=&quot;nt&quot;&gt;&amp;lt;%=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;%&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;위의 코드로 jsp를 만들어서 톰캣 서버를 실행해서, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost:port/time.jsp&lt;/code&gt; 로 하면&lt;br /&gt;
새로고침을 할 때마다 시간이 바뀐 것을 확인할 수 있다. 이러한 것을 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;동적인 페이지&lt;/code&gt;라고 하는 것이다.&lt;/li&gt;
  &lt;li&gt;Tomcat server가 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; 와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt;를 해석한 것이라고 볼 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Thu, 07 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//spring-boot/0005/</link>
        <guid isPermaLink="true">http://localhost:4000//spring-boot/0005/</guid>
        
        <category>jsp</category>
        
        <category>동적 페이지</category>
        
        <category>정적 페이지</category>
        
        <category>html</category>
        
        <category>spring-boot</category>
        
        <category>공부</category>
        
        <category>study 공부</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>스프링 JSON parse error: Cannot deserialize instance of `int` out of START_OBJECT token; nested exception</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/error.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;입사한 지, 6일차.. 스프링으로 회사 코드 내에 테스트 게시판을 만들어서 진행하고 있다.&lt;br /&gt;
현재 삭제기능을 만들고 있는데….ㅠㅠ&lt;br /&gt;
왠지 모르겠으나, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@DeleteMapping&lt;/code&gt; 어노테이션으로 하는데… 왜 405 error가 뜨는거냐!!&lt;br /&gt;
그래서, POST 방식으로 method를 변경하고, delete!!!&lt;br /&gt;
근데 밑에와 같은 에러를 뱉는다..&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;JSON parse error: Cannot deserialize instance of &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;int&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; out of START_OBJECT token&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; nested exception is 
com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;int&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; out of START_OBJECT token
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;그래서, error는 error고, JSON, id, int 어쩌구 저쩌구 써져있는 거 보니&lt;br /&gt;
id쪽에 문제가 있구나를 파악하고, 브라우저 개발자도구 network에 delete할 때 들어오는 데이터를 봤다.&lt;br /&gt;
음.. 역시나 문제가 있었구나. 이 놈의 자바스크립트..ㅠㅠ&lt;br /&gt;
스프링이랑 Typescript를 어떻게 사용할 방법이 없는 지를 알아봐야겠다.&lt;br /&gt;
자바스크립트 보다는, 타입스크립트로만 배웠던 난 타입스크립트가 편하다..&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그래서, 받아온 id 데이터를 parseInt 함수를 사용해서, id 데이터로 변경했다.
그랬더니 위와 같은 에러는 뜨지 않았지만, 되질 않는다. mybatis 쪽에서 뭔가 잘못 입력을 한것 같다..ㅠㅠ
다시 에러를 고치러 가야겠다.. 에효ㅎㅎ&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!
&lt;/div&gt;
</description>
        <pubDate>Thu, 07 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//error/0005/</link>
        <guid isPermaLink="true">http://localhost:4000//error/0005/</guid>
        
        <category>Spring</category>
        
        <category>JSON parse error:Cannot deserialize instance of `int` out of START_OBJECT token; nested exception</category>
        
        <category>JSON</category>
        
        <category>parse</category>
        
        <category>error</category>
        
        <category>Cannot</category>
        
        <category>deserialize</category>
        
        <category>instance</category>
        
        <category>of</category>
        
        <category>START_OBJECT</category>
        
        <category>nested</category>
        
        <category>exception</category>
        
        
        <category>Error</category>
        
      </item>
    
      <item>
        <title>Context 등록 후 index.html 요청하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;C#으로 유니티엔진을 사용하고, 프론트엔드 개발자가 되겠다고
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;React&lt;/code&gt; 와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;typescript&lt;/code&gt; , &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;next.js&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;node.js&lt;/code&gt; 를 공부하던 내가
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Spring&lt;/code&gt; 을 할 줄은 생각을 못했다. 
하지만 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Spring&lt;/code&gt;을 배울 수 있는 좋은 기회라고 생각했으나..
막상 입사를 하고 코드를 보다보니 비슷하지만 다른 느낌이 있다.
MVC 패턴에 대한 이해도도 부족하고 말이다.
JPA를 배우기에는 기본기가 없으니 기본기를 배우자..
특히 회사 실무에 필요한 내용들을 배우자 생각했고
퇴근하고 공부하면서 보는 강의가 위에 적혀있는 강의이다.
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jsp, mybatis, mysql, jquery, bootstrap&lt;/code&gt; 등 부족한 게 많은 나에게 기본기를 배울 수 있는 좋은 강의라고 생각한다.&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;일단, 기본 디렉터리 구조를 만들었다면 webapp 폴더에 index.html 파일을 만들어준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Insert title here&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Nerd-Lee의 홈페이지 방문을 환영합니다.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이렇게 작성했다고 끝이 아니다. Tomcat 서버와 연결을 해줘야 하는데
Servers 폴더에 있는 server.xml 에서, 150번째 줄에 있는&lt;/p&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Valve&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.apache.catalina.valves.AccessLogValve&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;directory=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;logs&quot;&lt;/span&gt; 
       &lt;span class=&quot;na&quot;&gt;pattern=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%h %l %u %t &amp;amp;quot;%r&amp;amp;quot; %s %b&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;prefix=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;localhost_access_log&quot;&lt;/span&gt; 
       &lt;span class=&quot;na&quot;&gt;suffix=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.txt&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;이 태그 밑에, Context 태그를 추가해줘야 한다.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Context&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;docBase=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${webapp의 경로}&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;webapp의 경로는, webapp을 오른쪽 마우스 클릭한 다음, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;properties&lt;/code&gt; 를 클릭하면, webapp의 경로가 나오는 데, 그걸 docBase에 붙여넣어주면 끝이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그리고 tomcat 서버를 실행하고, localhost:포트번호를 입력하면&lt;/p&gt;

&lt;p&gt;Nerd-Lee의 홈페이지 방문을 환영합니다. 라는 문구가 출력되는 것을 확인할 수 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;path&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;path는, 기본 경로를 설정하는데, 만약 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;path=&quot;/web&quot;&lt;/code&gt; 이라고 했다면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost:포트/web&lt;/code&gt; 이라고 해야 index.html 파일이 열릴 것이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;docBase&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;docBase는, 기본 document를 뜻하고, webapp 폴더가 기본이 되기 때문에, webapp의 경로를 넣어줘야 한다. path로 들어오면, webapp 폴더로 가서, 그 안에 html이나 jsp 파일이 있는 지를 확인하고, 있다면 해당 파일을 렌더링해주는 방식이라고 생각하면 될 것 같다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이 강의를 보면서 생각해보니, 배포를 할 때 server.xml을 변경해서 동작하게 하나? 라는 생각을 하게 된다. 기본기가 조금씩 늘어나는 기분이 든다. 아주 좋군!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Wed, 06 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//spring-boot/0004/</link>
        <guid isPermaLink="true">http://localhost:4000//spring-boot/0004/</guid>
        
        <category>context</category>
        
        <category>index.html</category>
        
        <category>tomcat context</category>
        
        <category>tomcat</category>
        
        <category>톰캣 서버</category>
        
        <category>톰캣 서버 컨텍스트 등록</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>Web Application 디렉터리 구조 공부</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
공부 내용은, 인프런 박매일님의
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[NarP Series]MVC 프레임워크는 내 손에[나프1탄]&lt;/code&gt; 을 참고하였습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;WAS ( Web Application Server ) 가 알 수 있는 구조는 다음과 같이 만들 수 있다.&lt;/p&gt;

&lt;p&gt;이클립스 환경에서, Java Project를 생성한다.
Web이라는 프로젝트를 만든다.
프로젝트를 만들면, src라는 폴더와 bin 폴더가 생긴다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Web Application 기본 디렉터리 구조&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt; 프로젝트 폴더 이름 ( root project folder )
 -- src
 -- webapp
 	-- WEB-INF
       -- lib
       -- classes 
       -- web.xml
 -- bin
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;1-web&quot;&gt;1. WEB&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;이 프로젝트 이름이 꼭 WEB이 아니여도 되지만, 그냥 최상위 프로젝트 폴더를 뜻한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-src--bin&quot;&gt;2. src / bin&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Java Project로 만들면 기본으로 생성이 되는 폴더들이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-webapp&quot;&gt;3. webapp&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Web Application을 만들 때, 기본으로 가지고 있어야 하는 상위 구조 폴더이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;4-web-inf&quot;&gt;4. WEB-INF&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;WEB-INF 폴더는, webapp 폴더의 하위 폴더로 웹 브라우저에서 직접 접근할 수 없고 웹 컨테이너 ( 톰캣 서버 ) 가 대신 접근하고 결과물만을 웹 브라우저에게 전달할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;5-lib&quot;&gt;5. lib&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;WEB-INF 폴더의 하위 폴더로 api ( .jar ) 를 가지고 있는 폴더이다. 그리고 lib 폴더는 꼭 없어도 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;6-classes&quot;&gt;6. classes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;WEB-INF 폴더의 하위 폴더로 자바 환경에서는 bin 폴더에 .class 파일들이 생성이 되지만, 웹 환경으로 변경이 되면, classes 폴더에 .class 파일들이 생성이 되게 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;7-webxml&quot;&gt;7. web.xml&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;WEB-INF 폴더에 있어야하는 파일이자, 배치 서술자 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(deploy Descritor)&lt;/code&gt; 라고 불린다. 클래스들이 어느 폴더에 위치해 있는 지를 서술해주는 파일이다. 약자로는 DD 파일이라고도 불린다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Wed, 06 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//spring-boot/0003/</link>
        <guid isPermaLink="true">http://localhost:4000//spring-boot/0003/</guid>
        
        <category>웹 애플리케이션</category>
        
        <category>jsp</category>
        
        <category>mysql</category>
        
        <category>공부</category>
        
        <category>디렉토리</category>
        
        <category>열심히 하자</category>
        
        <category>web application</category>
        
        <category>프로그래밍 공부</category>
        
        <category>directory</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>회사 첫 출근 - 구조 파악하기</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다. 첫 웹 개발 실무를 위해 현재 회사에 입사해서 프로젝트를 보면서&lt;br /&gt;
Spring MVC 패턴에 대한 내용들과, mybatis에 관련되서 궁금했던 내용들을 정리해봤습니다.&lt;br /&gt;
도움이 되신 분들이 있으셨으면 좋겠네요ㅠㅠ&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-mvc-패턴이란&quot;&gt;1. MVC 패턴이란?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;디자인 패턴 중 하나로써, Model, View, Controller의 약자이며 하나의 애플리케이션 또는 프로젝트를 구성할 때 그 구성요소를 세가지의 역할로 구분한 패턴.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;사용자가 컨트롤러를 조작하면 컨트롤러는 모델을 통해서 데이터를 가져오고, 가져온 데이트를 바탕으로 시각적인 표현을 담당하는 View를 제어해서 사용자에게 전달한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;간단하게 표현하자면 User -&amp;gt; Controller -&amp;gt; Model -&amp;gt; Controller -&amp;gt; View -&amp;gt; User&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Model이란?
    &lt;ul&gt;
      &lt;li&gt;애플리케이션의 정보, 데이터를 나타낸다. 데이터베이스, 정의하는 상수, 초기화값, 변수 등을 뜻한다. 또한 이러한 데이터를 가지고 가공을 책임지는 컴포넌트.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;View란?
    &lt;ul&gt;
      &lt;li&gt;사용자 인터페이스 요소를 나타낸다. Model에서 가공해준 데이터를 바탕으로 사용자들에게 보여주거나, 사용자가 입력한 내용을 바탕을, Controller에게 넘겨주는 역할을 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Controller란?
    &lt;ul&gt;
      &lt;li&gt;데이터와 사용자 인터페이스 요소들을 잇는 다리역할을 한다. 즉, 사용자가 데이터를 클릭하고 수정하는 것에 대한 이벤트들을 처리하는 부분.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-daodata-access-object란&quot;&gt;2. DAO(Data Access Object)란?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DAO는 DB를 사용해 데이터를 조회하거나 조작하는 기능을 전담하도록 만든 오브젝트를 말한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-dtodata-transfer-object란&quot;&gt;3. DTO(Data Transfer Object)란?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;DTO는, VO(Value Object)로 바꿔 말할수도 있다. 하지만, DTO와 VO의 가장 큰 차이점은, VO는 read only 즉 읽기 전용으로만 사용이 가능하다. 계층간의 데이터 교환을 위한 오브젝트로
대표적으로는, 폼데이터빈, 데이터베이스 테이블빈 등이 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-그럼-bean은-또-무엇인가&quot;&gt;4. 그럼 Bean은 또 무엇인가?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Spring IOC 컨테이너가 관리하는 자바 객체를 Bean이라고 부른다. 하지만, 스프링에서 Bean은 new 키워드를 이용해서 객체를 생성하는 것이 아닌 Spring에 의해 관리당하는 자바 객체를 Bean이라고 부른다고 한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Spring Bean을 등록하는 방법에 대한 2가지&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;ComponentScan 어노테이션을 활용하기
            &lt;ul&gt;
              &lt;li&gt;ComponentScan이란, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@Component&lt;/code&gt; 어노테이션 및 streotype 어노테이션 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(@Service, @Repository, @Controller)&lt;/code&gt; 등 어노테이션이 부여된 Class들을 자동으로 Scan하여 Bean으로 등록해준다.
 &lt;br /&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;ol&gt;
          &lt;li&gt;Bean 설정파일에 직접 빈 등록하기
            &lt;ul&gt;
              &lt;li&gt;직접 Bean을 등록하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@configuraton&lt;/code&gt; 및 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@Bean&lt;/code&gt; 어노테이션을 사용하면 된다.&lt;/li&gt;
              &lt;li&gt;라이브러리 혹은 내장 클래스 등의 개발자가 직접 제어 불가능한 클래스의 경우 직접 Bean을 등록해서 사용하면 된다고 한다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;5-mybatis&quot;&gt;5. Mybatis&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Mybatis란?
    &lt;ul&gt;
      &lt;li&gt;Mybatis는 자바의 관계형 데이터베이스 프로그래밍을 좀 더 쉽게 할 수 있도록 도와주는 개발 framework로써, JDBC를 통해 데이터베이스에 엑세스하는 작업을 캡슐화하고, 프로그램에 있는 SQL쿼리들을 한 구성파일에 구성해 프로그램 코드와 SQL을 분리할 수 있는 장점을 가지고 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;특징
    &lt;ul&gt;
      &lt;li&gt;복잡한 쿼리나 다이나믹한 쿼리에 강하지만, 비슷한 쿼리는 남발하게 되는 단점이 존재한다고 하며, 프로그램 코드와 SQL 쿼리의 분리로 인해 코드의 간결성 및 유지보수성이 향상된다고 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;6-mybatis-sql-include-property-태그&quot;&gt;6. Mybatis &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;sql&amp;gt;&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;include&amp;gt;&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;property&amp;gt;&lt;/code&gt; 태그&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;sql&amp;gt;&lt;/code&gt; 은 반복적으로 사용하는 쿼리를 재사용하기 위한 SQL 조각입니다.&lt;/li&gt;
  &lt;li&gt;id 속성값이 필수이며, 사용하려는 태그보다 먼저 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;sql&amp;gt;&lt;/code&gt; 태그가 선언되어 있어야 합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;sql&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	from ${testQuery}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/sql&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;위와 같은 sql 태그가 있다면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;include&amp;gt;&lt;/code&gt;와 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;property&amp;gt;&lt;/code&gt; 태그는 다음과 같이 사용이 가능하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;include&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;refid=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  	&lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;testQuery&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/include&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;test라는 id를 가지고 있는, sql 태그를 찾아서, 해당 쿼리를 사용하게 되고 property 태그는, 만약 sql 태그에 ${값} 이 있다면 사용을 한다. 위 코드를 해석하면 다음과 같다.
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;from hello&lt;/code&gt; 물론 이 자체로는 의미없는 쿼리가 되지만, 만약 from, where 절을 여러번 사용할 경우가 생긴다면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;sql&amp;gt;&lt;/code&gt; 태그에 자주 사용하는 쿼리를 만들어서 넣어놓으면 가독성이 좋아질 것이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;7-mybatis-각-태그-사용법&quot;&gt;7. Mybatis 각 태그 사용법&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;각 절에 맞는 태그들이 있다. 대표적으로는&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;insert&amp;gt;&lt;/code&gt;,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;select&amp;gt;&lt;/code&gt;,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;update&amp;gt;&lt;/code&gt;,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;delete&amp;gt;&lt;/code&gt; 가 있는데, 아직 테스트 해보지는 못했지만 가독성을 위한 태그로 보여진다. 각 태그에 맞는 쿼리를 만들어서 사용하면 될 것 같다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;각 태그에는 id와 resultType과 같은 속성이 있는데 id는, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;mapper&amp;gt;&lt;/code&gt; 태그의 namespace 속성에 있는 java 클래스의 메서드를 참조하거나 아니면 해당 id를 가지고 쿼리를 실행할 수 있는 것 같다. 방법이 여러가지라 사용하기 나름이라고 생각이 들고, resultType은 return되는 자료형을 뜻하는 것 같다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;또한 메서드를 참조할 경우, 해당 메서드에 매개변수가 있다면 매개변수를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#{매개변수 이름}&lt;/code&gt; 으로 사용할 수도 있다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;8-postconstruct란&quot;&gt;8. @PostConstruct란?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@PostConstruct&lt;/code&gt; 어노테이션은, 의존성 주입이 이루어진 후 초기화를 수행하는 메서드라고 하며, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@PostConstruct&lt;/code&gt;가 붙은 메서드는 클래스가 service를 수행하기 전에 발생. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@PostConstruct&lt;/code&gt; 가 붙은 메서드는 초기화를 수행하는 메서드라면, 반대로 종료 작업을 수행하는 메서드에는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@PreDestroy&lt;/code&gt; 를 사용한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;장점은, 생성자가 호출 될 때, bean은 초기화가 되지 않지만, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@PostConstruct&lt;/code&gt; 를 사용한 생성자는 bean이 초기화 됨에 따라 동시에 의존성을 확인할 수 있고, bean lifecycle에서 오직 한 번만 수행되기 때문에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@PostConstruct&lt;/code&gt;를 사용하면 여러 번 초기화되는 것을 방지할 수 있다고 한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;유일한 단점으로는, 외부 라이브러리에 적용하지 못한다는 것이고, 외부 라이브러리 초기화 및 종료를 하기 위해서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@Bean&lt;/code&gt;의 initMethod / destroyMethod를 사용해야 한다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;9-spring-security-form-login-구조&quot;&gt;9. Spring Security Form Login 구조&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;사용자가 Server에 특정 URL을 요청했을 때 해당 URL이 인증이 필요할 경우 Server는 로그인 페이지를 return하게 됩니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;사용자가 id와 password를 입력하고 로그인 버튼을 클릭하면, 해당 데이터가 서버에 전송된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;서버는 해당 로그인 정보를 확인하고 해당 유저 정보가 존재한다면 Session과 Token을 생성하고 저장한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;WebSecurityConfig 클래스를 만들면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WebSecurityConfigurerAdapter&lt;/code&gt; 클래스를 상속 받아야하는데, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WebSecurityConfigurerAdapter&lt;/code&gt; 클래스는, 스프링에서 제공하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;security&lt;/code&gt; 라는 라이브러리를 가지고 있어야 한다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpSecurity&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;formLogin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    	&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;loginPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/login.html&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 사용자 정의, 로그인 페이지&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;defaultSuccessUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/home&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 로그인을 성공하면 이동 할 페이지 경로&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;failureUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/login.html?error=true&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// 로그인 실패 후 이동 할 페이지 경로&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;usernameParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// id input 태그의 name 속성 값&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;passwordParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// password input 태그의 name 속성 값&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;loginProcessingUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/login&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// 로그인 Form Action url 경로&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;successHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loginSuccessHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 로그인 성공 시 핸들러 호출&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;failureHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;failureHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// 로그인 실패 시 핸들러 호출&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;permitAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;							&lt;span class=&quot;c1&quot;&gt;// 인증을 받지 않아도 누구나 접근 가능하게 하는 함수&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Wed, 06 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//spring-boot/0002/</link>
        <guid isPermaLink="true">http://localhost:4000//spring-boot/0002/</guid>
        
        <category>회사 첫 출근</category>
        
        <category>mybatis</category>
        
        <category>jsp</category>
        
        <category>spring</category>
        
        <category>구조 파악</category>
        
        <category>웹개발 처음</category>
        
        <category>입사</category>
        
        <category>회사</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>실전! 스프링 부트와 JPA 활용 1 - 프로젝트 환경설정까지 듣고 난 뒤 정리</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/javaspring.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;안녕하세요. Nerd-Lee입니다.&lt;br /&gt;
이 내용은 우아한형제들의 개발 팀장이신 김영한 님의&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;김영한의 스프링 부트와 JPA 실무 완전 정복 로드맵&amp;gt;&lt;/code&gt;을 참고해서 공부한 내용을 바탕으로 글이 작성되었습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;1-프로젝트-생성&quot;&gt;1. 프로젝트 생성&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://start.spring.io&quot;&gt;spring boot start page&lt;/a&gt; 가기&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;스프링 부트는 스프링 프로젝트를 쉽게 만들 수 있게 한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;maven과 gradle을 선택할 수 있는데, 요즘은 gradle로 많이 넘어가는 추세.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;언어는 자신이 사용 할 언어를 추가하면 된다. 듣고 있는 강의는 Java를 사용하기 때문에,  Java 선택&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;버전은 안정화 된 버전을 사용하는 것이 좋은데, Snapshot / M1,M2가 붙어있지 않은 버전이 안정화 된 버전이라고 생각하면 된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Project Metadata는 그룹과 아티팩트를 입력해줘야 하는데, 회사 프로젝트를 진행한다면 회사에서 정해주는 대로 입력을 하면 되지만, 포트폴리오나 개인 연습용 프로젝트라면, 그냥 입력하고 싶은대로 입력해도 상관없다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Dependencies는, 의존성이란 뜻을 가지고 있고 어떠한 라이브러리를 의존해서 사용할 것인가라는 의미를 가지고 있다. 사용을 할 라이브러리를 추가해서 프로젝트를 만들면 된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;해당 강의에서는 Spring Web, Thymeleaf, Spring Data JPA, H2 Database, Lombok을 사용
    &lt;ul&gt;
      &lt;li&gt;Spring web : Restful API나 MVC 방식을 쉽게 사용할 수 있게 한다.&lt;/li&gt;
      &lt;li&gt;Thymeleaf : 템플릿 엔진으로써, SSR ( 서버 사이드 렌더링 ) 을 할 수 있게 한다.&lt;/li&gt;
      &lt;li&gt;Spring Data JPA : query를 쉽게 날려줄 수 있는 라이브러리&lt;/li&gt;
      &lt;li&gt;H2 database : 교육용이나 테스트용으로 쉽게 사용할 수 있는 데이터베이스 라이브러리&lt;/li&gt;
      &lt;li&gt;Lombok : 지루하게 반복되는 코드를 자동으로 제너레이션 해주는 라이브러리&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;GENERATE 버튼을 눌러서 다운로드를 받고 압축을 풀어준 다음 intellij로 프로젝트를 열어주면 gradle에 dependencies에 추가되어 있는 라이브러리를 설치하는 작업을 진행하게 된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Lombok을 사용하기 위해서는, intellij에서, annotation processors에서 Enable annotation processing을 클릭해야 한다. 그리고 해당 강의에서는 Lombok 플러그인을 설치했지만, intellij 2020.3 이후 버전은, lombok이 설치되어 있는 상태이기 때문에 설치하지 않아도 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-라이브러리-살펴보기&quot;&gt;2. 라이브러리 살펴보기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;라이브러리 의존성을 살펴보는 방법은 2가지가 있다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;터미널 사용
        &lt;ul&gt;
          &lt;li&gt;터미널에서, 스프링 프로젝트 경로로 이동&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/.gradlew dependencies&lt;/code&gt; 입력하면 의존성을 살펴볼 수 있다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;intellij 에서 보기
        &lt;ul&gt;
          &lt;li&gt;인텔리 J에 오른쪽을 보면, gradle 메뉴가 있다.&lt;/li&gt;
          &lt;li&gt;해당 메뉴에 dependencies 폴더를 보면, runtime / test / compile 등의 환경에 따라 실행이 되는 라이브러리들을 볼 수 있다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-view-환경-설정&quot;&gt;3. View 환경 설정&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;thymeleaf 라는 템플릿 엔진을 이용해서, View를 만들어 준다. &lt;a href=&quot;https://www.thymeleaf.org&quot;&gt;thymeleaf 홈페이지&lt;/a&gt;에 들어가면 thymeleaf에 대한 내용들을 자세히 볼 수 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;thymeleaf의 장﹒단점
    &lt;ul&gt;
      &lt;li&gt;장점
        &lt;ul&gt;
          &lt;li&gt;내추럴 템플릿을 사용한다. 다른 템플릿 엔진은, if else문을 사용하는 듯 하다. 하지만, thymeleaf는 html의 마크업을 깨지 않고 사용하기 때문에, 가독성이 좋다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;단점
        &lt;ul&gt;
          &lt;li&gt;현재 spring boot에서 프로젝트를 생성하는 경우는 해당이 되지 않지만, 3.0 이하 버전에서는, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;br&amp;gt;&lt;/code&gt; 태그를 사용 할 경우, 오류가 생긴다. 보통 html 템플릿에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;br&amp;gt;&lt;/code&gt; 만 사용해도, 알아서 한 칸 띄워주는데, thymeleaf는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&lt;/code&gt; 이렇게 사용해야 오류가 안생긴다고 한다. 그리고 메뉴얼을 잘 살펴봐야된다는 것도 단점이라고 강의에서는 말을 하셨다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Spring을 잘 모르겠다면, &lt;a href=&quot;https://spring.io&quot;&gt;홈페이지&lt;/a&gt;에 들어가서 guides를 살펴보는 것을 권장한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;기본구조 코드
    &lt;ul&gt;
      &lt;li&gt;기본 구조를 알아보는 코드이기에, 강의에는 피해가 가지 않을 것이라고 판단하여 코드를 작성함.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HelloController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;jpabook.jpashop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.stereotype.Controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.ui.Model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.springframework.web.bind.annotation.GetMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Controller&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HelloController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    
	&lt;span class=&quot;nd&quot;&gt;@GetMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Model&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addAttribute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hello!!!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Model이란 무엇인가?
    &lt;ul&gt;
      &lt;li&gt;Model은, spring.ui에서 제공하는 것인데 모델에 데이터를 실어서 뷰에 넘겨줄 수 있게 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;data라는 키값에, “hello!!!” 라는 값을 추가해서, model이 가지고 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;return은 뭐야??
    &lt;ul&gt;
      &lt;li&gt;hello라는 이름을 가진 html에 파일에 해당 값들을 넘기겠다는 뜻과 같다. 템플릿 엔진에서 작동하는 html 파일은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resources / templeates&lt;/code&gt; 폴더에 있어야 한다.
 즉 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resources / templeates / hello.html&lt;/code&gt; 파일에 data 라는 값이 있다면, “hello!!!” 로 대체하겠다 라는 것과 같다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;[hello.html]

&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE HTML&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:th=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.thymeleaf.org&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Hello&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/html; charset=UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;th:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&apos;안녕하세요.&apos; + ${data} &quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;안녕하세요. 손님&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;th:text는 뭐야?
    &lt;ul&gt;
      &lt;li&gt;템플릿 엔진으로 서버 사이드 렌더링을 진행하면 값이 안녕하세요. 손님이 아니라, 안녕하세요. hello!!! 가 출력이 되게 된다. ${} 안에 있는 값이 model에서 key값이다.
 thymeleaf에서 key에 맞는 value를 받아와서 변환해준다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;정적인 페이지 또한 만들 수 있다. resources / static 폴더에 html 파일을 만들면 정적인 페이지를 만들 수는 있지만, 정적 페이지는 javascript는 사용하지 못한다는 점이 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;node.js에서 nodemon 처럼은 아니지만, 저장을 하고 다시 run을 하지 않아도 페이지를 새로 수정할 수 있는 방법이 있다.
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;build.gradle 파일에서 dependencies 부분에, implementation을 추가하자.
 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;implementation &apos;org.springframework.boot:spring-boot-devtools&apos;&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;추가를 했다면, 서버를 다시 실행해주고, html 파일을 변경하고 브라우저를 새로고침 해보자. 바뀌지 않는다. 하지만 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build -&amp;gt; recomplie &quot;hello.html&lt;/code&gt; 을 클릭하면 바뀐다.
 저장만 해도 바뀌는 건 있는 지 없는 지 한 번 찾아봐야겠다.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-h2-database&quot;&gt;4. H2 DATABASE&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;H2 데이터베이스는 개발이나 테스트 용도로 가볍고 편한 DB, 웹 화면을 제공한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;주의점은 h2 database 라이브러리와 같은 버전을 사용해야 한다는 점이다. &lt;a href=&quot;https://www.h2database.com/html/main.html&quot;&gt;홈페이지 링크&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다운로드를 받았다면 Mac OS는 압축을 풀고 폴더를 보면 bin 폴더가 있다. bin 폴더의 경로를 터미널에 맞춰놓고, ls를 입력하면 h2.bat, h2.sh와 같은 파일이 있는데, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ cat h2.sh&lt;/code&gt;를 입력한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그리고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./h2.sh&lt;/code&gt; 입력을 한다. 하지만 난 오류가 났다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zsh: permission denied: ./h2.sh&lt;/code&gt; 라는 오류가 떴는데, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chmode 755 h2.sh&lt;/code&gt; 를 입력하고, 다시 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./h2.sh&lt;/code&gt; 를 입력하면 브라우저에 H2 콘솔이 뜨게 된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그리고 JDBC_URL에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jdbc:h2:~/jpashop&lt;/code&gt;으로 입력하고 연결을 누르면 db 파일이 생성이 된다. 그리고 연결을 끊고, 터미널 상에 home에 가서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ls -arith&lt;/code&gt;를 입력하면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jpashop.mv.db&lt;/code&gt; 파일이 있는 것을 볼 수 있다. 이 파일이 있다면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jdbc:h2:tcp://localhost/~/jpashop&lt;/code&gt; 이 경로로 접근이 가능하다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;주의할 점은, ./h2.sh를 실행시킨 상태여야만 db 파일을 받을 수 있다는 점 명심하자!&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;5-jpa와-db-설정-동작확인&quot;&gt;5. JPA와 DB 설정, 동작확인&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;이 부분은 내가 스프링에 대해서 지식이 없이 실습으로 하는 것이기 때문에 잘 모르겠다…ㅠㅠ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;앞으로 강의듣고 난 이후의 블로그는 어려운 내용이나 에러 해결방법들만 적을 예정이다. 코드를 적으면 강의에 피해가 가기 때문이다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;

</description>
        <pubDate>Wed, 06 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//spring-boot/0001/</link>
        <guid isPermaLink="true">http://localhost:4000//spring-boot/0001/</guid>
        
        <category>JPA</category>
        
        <category>jpa</category>
        
        <category>Java</category>
        
        <category>Spring</category>
        
        <category>자바</category>
        
        <category>스프링</category>
        
        <category>자바 스프링</category>
        
        <category>자바 스프링 jpa</category>
        
        
        <category>Spring-Boot</category>
        
      </item>
    
      <item>
        <title>iTerm2 설치 및 테마 적용하기</title>
        <description>&lt;p&gt;안녕하세요. Nerd Lee 입니다.&lt;/p&gt;

&lt;p&gt;Mac OS에서, 터미널보단 개발자분들은 iTerm2를 많이들 사용하시더라구요.
저도 iTerm2를 사용한 지는 얼마 되진 않았는데 그래도 테마 적용을 하면 깔끔하니 보기가 좋았습니다.
그래서 설치법과 테마적용하는 방법들을 한 번 공유해보기 위해 글을 작성했습니다.&lt;/p&gt;

&lt;h3 id=&quot;1-설치하기&quot;&gt;1. 설치하기&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://iterm2.com/downloads.html&quot;&gt;iTerm2 다운로드 페이지 링크&lt;/a&gt; 에 가셔서, Stable Releases 버전을 다운로드 받으시면 됩니다.
그리고 압축을 풀고, iTerm2를 더블클릭해서 실행하면, 애플리케이션 폴더로 이동을 시킬건지 물어봅니다. Application Folder 인가? 그 버튼 클릭하면, 옮겨집니다ㅎㅎ&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-oh-my-zsh-다운로드하기&quot;&gt;2. oh my zsh 다운로드하기&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;iTerm2에 입력해서 다운로드하시면 됩니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-iterm2-테마-적용하기&quot;&gt;3. iTerm2 테마 적용하기&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;vi ~/.zshrc
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;입력하면, 아래와 같은 글들이 막 보일 것입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;# If you come from bash you might have &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;change&lt;/span&gt; your $PATH&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
# &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; PATH&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;$HOME&lt;span class=&quot;sr&quot;&gt;/bin:/&lt;/span&gt;usr&lt;span class=&quot;sr&quot;&gt;/local/&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;$PATH

# Path &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; your oh&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;my&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;zsh installation&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; ZSH&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$HOME/.oh-my-zsh&quot;&lt;/span&gt;

# Set name of the theme &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; load &lt;span class=&quot;p&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;random&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; it will
# load &lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; random theme each time oh&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;my&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;zsh &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; loaded&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; which case&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
# &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; know which specific one was loaded&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; run&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; echo $RANDOM_THEME
# See https&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;github&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ohmyzsh/&lt;/span&gt;ohmyzsh&lt;span class=&quot;sr&quot;&gt;/wiki/&lt;/span&gt;Themes
ZSH_THEME&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;robyrussell&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;-&lt;/span&gt; 이 부분을 변경해야 함&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;

# Set &lt;span class=&quot;k&quot;&gt;list&lt;/span&gt; of themes &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; pick from when loading at random
# Setting this variable when ZSH_THEME&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;random will cause zsh &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; load
# &lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; theme from this variable instead of looking &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; $ZSH&lt;span class=&quot;sr&quot;&gt;/themes/&lt;/span&gt;
# If &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; an &lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt; array&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; this variable will have no effect&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
# ZSH_THEME_RANDOM_CANDIDATES&lt;span class=&quot;p&quot;&gt;=(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;robbyrussell&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;agnoster&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

# Uncomment the following &lt;span class=&quot;nb&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; use case&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;sensitive completion&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
# CASE_SENSITIVE&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;true&quot;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;....&lt;/span&gt; 등등

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그럼 여기서 제일 중요한 부분은, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ZSH_THEME=&quot;robyrussell&quot;&lt;/code&gt; 을 찾아서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ZSH_THEME=&quot;agnoster&quot;&lt;/code&gt; 로 변경을 해야합니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;사용방법은, i 키를 누르면, INSERT로 변경이 됩니다. INSERT 상태에서만 삭제 또는 입력이 가능해지기 때문에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;robyrussell -&amp;gt; agnoster&lt;/code&gt; 로 변경합니다. 입력을 끝냈다면 esc 버튼을 누르고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:wq&lt;/code&gt;를 입력하면 다시 원래 터미널 상태로 돌아갑니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그리고 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;source ~/.zshrc&lt;/code&gt; 를 입력하면, 저장 된 파일의 상태를 불러와서, 테마를 변경시켜줍니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;하지만 폰트가 깨져있죠? 그게 맞는겁니다ㅎㅎ이제 폰트만 설치해주면 됩니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-폰트-설치&quot;&gt;3. 폰트 설치&lt;/h3&gt;

&lt;p&gt;폰트는 &lt;a href=&quot;https://github.com/naver/d2codingfont#%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C&quot;&gt;D2 Coding&lt;/a&gt;이나, 아니면 &lt;a href=&quot;https://fonts.google.com/noto/specimen/Noto+Sans+KR&quot;&gt;Noto Sans&lt;/a&gt; 폰트를 설치하시면 될 것 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;폰트 설치가 완료되었다면, iTerm2를 실행하고, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iTerm2 / preferences&lt;/code&gt; 메뉴를 클릭합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Profile -&amp;gt; Text&lt;/code&gt; 에 font가 있습니다. 거기서 설치하신 폰트로 변경하시면 깨지지 않고 잘 나옵니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;4-color-preset-변경하기&quot;&gt;4. Color preset 변경하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Color preset 변경하는 방법은, &lt;a href=&quot;https://ooeunz.tistory.com/21&quot;&gt;링크&lt;/a&gt; 에 잘 나와있기 때문에, 해당 링크를 클릭해서 보시는 것을 추천드립니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Wed, 06 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//install/0002/</link>
        <guid isPermaLink="true">http://localhost:4000//install/0002/</guid>
        
        <category>macos</category>
        
        <category>iTerm2</category>
        
        <category>iterm2</category>
        
        <category>iTerm2 theme</category>
        
        <category>iTerm2 설치</category>
        
        <category>iTerm2 테마</category>
        
        <category>터미널</category>
        
        
        <category>Install</category>
        
      </item>
    
      <item>
        <title>MacOS Homebrew 및 git bash 설치 방법</title>
        <description>&lt;hr /&gt;

&lt;p&gt;안녕하세요. Nerd Lee 입니다.&lt;/p&gt;

&lt;p&gt;MacOS Homebrew 및 git bash 설치 방법에 대해서 알아보도록 하겠습니다.&lt;/p&gt;

&lt;p&gt;git bash를 설치하기 전에, Homebrew 라고 하는 오픈소스 패키지 매니저?
패키지 관리 시스템을 설치해야 합니다.
순서대로 하시다보면 git bash 설치는 금방금방 끝낼 수 있습니다!&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;1-homebrew-홈페이지-가기&quot;&gt;1. Homebrew 홈페이지 가기&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://brew.sh/index_ko&quot;&gt;홈브루 홈페이지 링크&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;2-homebrew-설치하기&quot;&gt;2. Homebrew 설치하기&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;mac os에 내장되어 있는 터미널에 해당 명령어를 붙여넣기 하면 설치 시작! 조금 오래 걸립니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;/bin/bash &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;설치 완료 후 버전을 확인해보세요.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;설치가 되어 있다면, Homebrew 3.x.x 이런 식으로 표시됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;3-git-bash-설치하기&quot;&gt;3. Git bash 설치하기&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://git-scm.com/download/mac&quot;&gt;Git bash 홈페이지 링크&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;링크를 클릭하면, Homebrew로 설치하는 방법이 나오는데, 명령어는 다음과 같습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;git
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;위의 명령어를 터미널에 붙여넣기 하면 git이 설치가 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!

&lt;/div&gt;
</description>
        <pubDate>Wed, 06 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//install/0001/</link>
        <guid isPermaLink="true">http://localhost:4000//install/0001/</guid>
        
        <category>macos</category>
        
        <category>homebrew</category>
        
        <category>mac git bash 설치</category>
        
        <category>mac homebrew 설치</category>
        
        <category>홈브루</category>
        
        
        <category>Install</category>
        
      </item>
    
      <item>
        <title>remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead. 해결방법</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/img/etc/error.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mac OS 컴퓨터를 포맷하고 난 뒤 스프링 프로젝트가 다 다운받아지고, github에 업로드 할려고 했는데
밑에와 같은 로그가 뜨면서 업로드에 실패했다고 한다.&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;remote: Support &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;password authentication was removed on August 13, 2021. Please use a personal access token instead.
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;이러한 오류를 발견했다. 아니 맥북을 몇년전에 사용했던 것도 아니고.. 한 3개월만에 새로운 마음으로 포맷을 한건데.. 3개월 전에는 이런식으로 안했는데 왜 이러지? 라고 하고 해결법을 찾는다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://hyeo-noo.tistory.com/184&quot;&gt;Github push token 에러 해결 링크&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;위의 링크를 참고해서 문제를 해결했다.&lt;/p&gt;

&lt;p&gt;아이디와 패스워드를 입력해서 로그인 하는 방식이 아닌, personal access token을 사용해서 push나 pull이 가능하도록 한 것 같다.&lt;/p&gt;

&lt;h3 id=&quot;해결방법은-다음과-같다&quot;&gt;해결방법은 다음과 같다.&lt;/h3&gt;

&lt;h4 id=&quot;1-github-홈페이지에서-settings-클릭&quot;&gt;1. github 홈페이지에서 Settings 클릭&lt;/h4&gt;

&lt;h4 id=&quot;2-메뉴-맨-밑에-있는-developer-settings-클릭&quot;&gt;2. 메뉴 맨 밑에 있는 Developer settings 클릭&lt;/h4&gt;

&lt;h4 id=&quot;3-personal-access-tokens-클릭&quot;&gt;3. Personal access tokens 클릭&lt;/h4&gt;

&lt;h4 id=&quot;4-generate-new-token-클릭&quot;&gt;4. Generate new token 클릭&lt;/h4&gt;

&lt;h4 id=&quot;5-token을-설정한다&quot;&gt;5. token을 설정한다.&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;5.1 ) Note는, 그냥 인증을 위한 것이기 때문에 auth 또는 아무렇게 이름을 입력한다.&lt;/li&gt;
  &lt;li&gt;5.2 ) repo, admin:repo_hook, gist, user, delete_repo를 클릭하고, Generate token을 클릭한다.&lt;/li&gt;
  &lt;li&gt;5.3 ) 그럼 토큰이 만들어졌을텐데, 창을 나가지말고 토큰 번호를 복사한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;6-터미널에서-user-정보를-입력하자&quot;&gt;6. 터미널에서, user 정보를 입력하자.&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.name &lt;span class=&quot;s2&quot;&gt;&quot;username&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.email &lt;span class=&quot;s2&quot;&gt;&quot;user@email.com&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;깃이 올라갈 때의 이름과, 깃허브의 이메일을 입력한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;7-git-push&quot;&gt;7. git push&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;Username &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;https://github.com : &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;아이디 입력&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;Password &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;https://github.com/id : &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;복사한 토큰 붙여넣기 또는 입력&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Username에서는, 자신의 아이디를 적고 Password는 token을 입력해야한다. macOS 같은 경우 비밀번호를 입력해도 보이지 않을텐데, 그냥 붙여넣기 하고 엔터를 눌러도 아무런 문제가 없다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이렇게 하면 push를 해도 아무런 문제 없이 push가 잘 될 것이다.&lt;/p&gt;

&lt;p&gt;이전 방식이 편했는데.. 이번 방식은 생각하지도 못해서 당황했다ㅠㅠ&lt;/p&gt;

&lt;p&gt;모두 잘 해결이 되기를 바랍니다ㅠㅠ&lt;/p&gt;

&lt;hr /&gt;

&lt;div style=&quot;font-size:25px; text-align:center&quot;&gt;
이 글이 도움이 되셨다면 댓글 부탁드립니다^^&lt;br /&gt;
다음 글로 찾아오겠습니다!
&lt;/div&gt;
</description>
        <pubDate>Wed, 06 Apr 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000//error/0004/</link>
        <guid isPermaLink="true">http://localhost:4000//error/0004/</guid>
        
        <category>git</category>
        
        <category>github</category>
        
        <category>remote</category>
        
        <category>remote:Support for password authentication was removed on August 13</category>
        
        <category>2021. Please use a personal access token instead.</category>
        
        <category>terminal</category>
        
        
        <category>Error</category>
        
      </item>
    
  </channel>
</rss>